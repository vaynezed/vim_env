!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$PERL6_EXCEPTIONS_HANDLER	pack/vendor/start/ale-master/ale_linters/perl6/perl6.vim	/^let $PERL6_EXCEPTIONS_HANDLER = 'JSON'$/;"	v
$PYTHONUNBUFFERED	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^let $PYTHONUNBUFFERED = '1'$/;"	v
$RAKUDO_ERROR_COLOR	pack/vendor/start/ale-master/ale_linters/perl6/perl6.vim	/^let $RAKUDO_ERROR_COLOR = 0$/;"	v
(sect2,	pack/vendor/start/vim-airline-master/autoload/airline/themes.vim	/^    map(sect2, (_, v) => type(v) != type('') ? string(v) : v)$/;"	m
,	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map , <Plug>(easymotion-prev)$/;"	m
/	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
1. Installation	pack/vendor/start/vim-airline-master/CONTRIBUTING.md	/^## 1. Installation$/;"	s
2-character search motion	pack/vendor/start/vim-easymotion-master/README.md	/^### 2-character search motion$/;"	S
2. running test	pack/vendor/start/vim-airline-master/CONTRIBUTING.md	/^## 2. running test$/;"	s
2.1.17	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.1.17$/;"	S
2.1.18	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.1.18$/;"	S
2.2.0	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.2.0$/;"	S
2.2.1	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.2.1$/;"	S
2.2.2	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.2.2$/;"	S
2.3.0	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.3.0$/;"	S
2.4.0	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.4.0$/;"	S
2.5.0	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.5.0$/;"	S
2.5.1	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.5.1$/;"	S
2.5.2	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.5.2$/;"	S
2.6.0	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^### 2.6.0$/;"	S
3.0.0	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 3.0.0$/;"	t
3.0.1	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 3.0.1$/;"	t
3.1.0	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 3.1.0$/;"	t
3.1.1	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 3.1.1$/;"	t
4.0.0	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 4.0.0$/;"	t
4.1.0	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 4.1.0$/;"	t
4.2.0	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 4.2.0$/;"	t
5.0.0	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 5.0.0$/;"	t
5.1	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 5.1$/;"	t
5.2	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 5.2$/;"	t
5.3	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 5.3$/;"	t
6.0	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.0$/;"	t
6.1	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.1$/;"	t
6.10	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.10$/;"	t
6.2	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.2$/;"	t
6.3	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.3$/;"	t
6.4	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.4$/;"	t
6.5	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.5$/;"	t
6.6	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.6$/;"	t
6.7	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.7$/;"	t
6.8	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.8$/;"	t
6.9	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^#### 6.9$/;"	t
;	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map ; <Plug>(easymotion-next)$/;"	m
<2-LeftMouse>	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^    inoremap <script> <silent> <buffer> <2-LeftMouse>$/;"	m
<2-LeftMouse>	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^    nnoremap <script> <silent> <buffer> <2-LeftMouse>$/;"	m
<2-LeftMouse>	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <2-LeftMouse> :call startify#open_buffers()<cr>$/;"	m
<C-h>	vimrc	/^map <C-h> <C-W>h$/;"	m
<C-j>	vimrc	/^map <C-j> <C-W>j$/;"	m
<C-k>	vimrc	/^map <C-k> <C-W>k$/;"	m
<C-l>	vimrc	/^map <C-l> <C-W>l$/;"	m
<C-q>	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-q> <NOP>$/;"	m
<C-v>	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-v> <NOP>$/;"	m
<CR>	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <CR> :call ale#preview#OpenSelection()<CR>$/;"	m
<F10>	vimrc	/^noremap <F10> :ALEFix<CR>$/;"	m
<F12>	vimrc	/^nnoremap <F12> :call asyncrun#quickfix_toggle(6)<cr>$/;"	m
<F2>	vimrc	/^noremap <F2> :NERDTreeToggle<CR>$/;"	m
<F3>	vimrc	/^noremap <F3> :TagbarToggle<CR>$/;"	m
<F4>	vimrc	/^noremap <F4> :vertical terminal<CR>$/;"	m
<F5>	vimrc	/^nnoremap <silent> <F5> :AsyncRun -raw -cwd=$(VIM_FILEDIR) "$(VIM_FILEDIR)\/$(VIM_FILENOEXT)" <cr/;"	m
<F8>	vimrc	/^nnoremap <silent> <F8> :AsyncRun g++ -Wall -O2 "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)\/$(VIM_FILEN/;"	m
<Leader><Leader>	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^            map <Leader><Leader> <Plug>(easymotion-prefix)$/;"	m
<Leader>B	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        nmap <Leader>B <Plug>(easymotion-B)$/;"	m
<Leader>E	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        nmap <Leader>E <Plug>(easymotion-E)$/;"	m
<Leader>W	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        nmap <Leader>W <Plug>(easymotion-W)$/;"	m
<Leader>b	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        nmap <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>b	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>e	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        nmap <Leader>e <Plug>(easymotion-iskeyword-e)$/;"	m
<Leader>gE	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        nmap <Leader>gE <Plug>(easymotion-gE)$/;"	m
<Leader>ge	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        nmap <Leader>ge <Plug>(easymotion-iskeyword-ge)$/;"	m
<Leader>w	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        nmap <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<Leader>w	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<LeftMouse>	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <LeftMouse>   :call <sid>leftmouse()<cr>$/;"	m
<LeftRelease>	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^    inoremap <script> <silent> <buffer> <LeftRelease>$/;"	m
<LeftRelease>	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^    nnoremap <script> <silent> <buffer> <LeftRelease>$/;"	m
<MiddleMouse>	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <MiddleMouse> :enew <bar> execute 'normal! "'.(v:register=='/;"	m
<Plug>(ale_code_action)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_code_action) :ALECodeAction<Return>$/;"	m
<Plug>(ale_complete)	pack/vendor/start/ale-master/plugin/ale.vim	/^inoremap <silent> <Plug>(ale_complete) <C-\\><C-O>:ALEComplete<Return>$/;"	m
<Plug>(ale_detail)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_detail) :ALEDetail<Return>$/;"	m
<Plug>(ale_disable)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable) :ALEDisable<Return>$/;"	m
<Plug>(ale_disable_buffer)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable_buffer) :ALEDisableBuffer<Return>$/;"	m
<Plug>(ale_documentation)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_documentation) :ALEDocumentation<Return>$/;"	m
<Plug>(ale_enable)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable) :ALEEnable<Return>$/;"	m
<Plug>(ale_enable_buffer)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable_buffer) :ALEEnableBuffer<Return>$/;"	m
<Plug>(ale_filerename)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_filerename) :ALEFileRename<Return>$/;"	m
<Plug>(ale_find_references)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_find_references) :ALEFindReferences<Return>$/;"	m
<Plug>(ale_first)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_first) :ALEFirst<Return>$/;"	m
<Plug>(ale_fix)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_fix) :ALEFix<Return>$/;"	m
<Plug>(ale_go_to_definition)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition) :ALEGoToDefinition<Return>$/;"	m
<Plug>(ale_go_to_definition_in_split)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_split) :ALEGoToDefinition -split<Return>$/;"	m
<Plug>(ale_go_to_definition_in_tab)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_tab) :ALEGoToDefinition -tab<Return>$/;"	m
<Plug>(ale_go_to_definition_in_vsplit)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_vsplit) :ALEGoToDefinition -vsplit<Return>$/;"	m
<Plug>(ale_go_to_implementation_in_split)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_implementation_in_split) :ALEGoToImplementation -split<Return/;"	m
<Plug>(ale_go_to_implementation_in_tab)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_implementation_in_tab) :ALEGoToImplementation -tab<Return>$/;"	m
<Plug>(ale_go_to_implementation_in_vsplit)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_implementation_in_vsplit) :ALEGoToImplementation -vsplit<Retu/;"	m
<Plug>(ale_go_to_type_definition)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition) :ALEGoToTypeDefinition<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_split)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_split) :ALEGoToTypeDefinition -split<Retur/;"	m
<Plug>(ale_go_to_type_definition_in_tab)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_tab) :ALEGoToTypeDefinition -tab<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_vsplit)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_vsplit) :ALEGoToTypeDefinition -vsplit<Ret/;"	m
<Plug>(ale_hover)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_hover) :ALEHover<Return>$/;"	m
<Plug>(ale_import)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_import) :ALEImport<Return>$/;"	m
<Plug>(ale_last)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_last) :ALELast<Return>$/;"	m
<Plug>(ale_lint)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_lint) :ALELint<Return>$/;"	m
<Plug>(ale_next)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next) :ALENext<Return>$/;"	m
<Plug>(ale_next_error)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_error) :ALENext -error<Return>$/;"	m
<Plug>(ale_next_warning)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_warning) :ALENext -warning<Return>$/;"	m
<Plug>(ale_next_wrap)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap) :ALENextWrap<Return>$/;"	m
<Plug>(ale_next_wrap_error)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_error) :ALENext -wrap -error<Return>$/;"	m
<Plug>(ale_next_wrap_warning)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_warning) :ALENext -wrap -warning<Return>$/;"	m
<Plug>(ale_previous)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous) :ALEPrevious<Return>$/;"	m
<Plug>(ale_previous_error)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_error) :ALEPrevious -error<Return>$/;"	m
<Plug>(ale_previous_warning)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_warning) :ALEPrevious -warning<Return>$/;"	m
<Plug>(ale_previous_wrap)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap) :ALEPreviousWrap<Return>$/;"	m
<Plug>(ale_previous_wrap_error)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_error) :ALEPrevious -wrap -error<Return>$/;"	m
<Plug>(ale_previous_wrap_warning)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_warning) :ALEPrevious -wrap -warning<Return>$/;"	m
<Plug>(ale_rename)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_rename) :ALERename<Return>$/;"	m
<Plug>(ale_repeat_selection)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_repeat_selection) :ALERepeatSelection<Return>$/;"	m
<Plug>(ale_reset)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset) :ALEReset<Return>$/;"	m
<Plug>(ale_reset_buffer)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset_buffer) :ALEResetBuffer<Return>$/;"	m
<Plug>(ale_show_completion_menu)	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^cnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^inoremap <silent> <Plug>(ale_show_completion_menu) <C-x><C-o><C-p>$/;"	m
<Plug>(ale_show_completion_menu)	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^nnoremap <silent> <Plug>(ale_show_completion_menu) :call ale#completion#RestoreCompletionOptions/;"	m
<Plug>(ale_show_completion_menu)	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^onoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^vnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_toggle)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle) :ALEToggle<Return>$/;"	m
<Plug>(ale_toggle_buffer)	pack/vendor/start/ale-master/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle_buffer) :ALEToggleBuffer<Return>$/;"	m
<Plug>(easymotion-activate)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(0)<CR>$/;"	m
<Plug>(easymotion-activate)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(1)<CR>$/;"	m
<Plug>(easymotion-dotrepeat)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-dotrepeat)$/;"	m
<Plug>(easymotion-next)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-next)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-overwin-f)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f) :<C-u>call EasyMotion#OverwinF(1)<CR>$/;"	m
<Plug>(easymotion-overwin-f2)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f2) :<C-u>call EasyMotion#OverwinF(2)<CR>$/;"	m
<Plug>(easymotion-overwin-line)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-line) :<C-u>call EasyMotion#overwin#line()<CR>$/;"	m
<Plug>(easymotion-overwin-w)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-w) :<C-u>call EasyMotion#overwin#w()<CR>$/;"	m
<Plug>(easymotion-prev)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-prev)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-repeat)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>(easymotion-repeat)	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>AirlineSelectNextTab	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectNextTab :<C-u>call <SID>jump_to_tab(v:count1)<CR>$/;"	m
<Plug>AirlineSelectNextTab	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectNextTab :<C-U>exe repeat(':tabn\\|', v:count1)<cr>$/;"	m
<Plug>AirlineSelectPrevTab	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectPrevTab :<C-u>call <SID>jump_to_tab(-v:count1)<CR>$/;"	m
<Plug>AirlineSelectPrevTab	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectPrevTab gT$/;"	m
<Plug>AutoPairsReturn	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>CompletorCppJumpToPlaceholder	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/placeholder.vim	/^inoremap <silent><expr> <Plug>CompletorCppJumpToPlaceholder <SID>jump_to_placeholder()$/;"	m
<Plug>CompletorCppJumpToPlaceholder	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/placeholder.vim	/^noremap  <silent><expr> <Plug>CompletorCppJumpToPlaceholder <SID>jump_to_placeholder()$/;"	m
<Plug>NERDCommenterAltDelims	pack/vendor/start/nerdcommenter-master/plugin/nerdcommenter.vim	/^nnoremap <Plug>NERDCommenterAltDelims :call nerdcommenter#SwitchToAlternativeDelimiters(1)<CR>$/;"	m
<Plug>NERDCommenterInsert	pack/vendor/start/nerdcommenter-master/plugin/nerdcommenter.vim	/^inoremap <silent> <Plug>NERDCommenterInsert <C-\\><C-O>:call nerdcommenter#Comment('i', "Insert"/;"	m
<Plug>XTablineCdCurrent	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdCurrent :cd %:p:h<cr>:call airline#util#doaut/;"	m
<Plug>XTablineCdDown1	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown1   :cd %:p:h:h<cr>:call airline#util#doa/;"	m
<Plug>XTablineCdDown2	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown2   :cd %:p:h:h:h<cr>:call airline#util#d/;"	m
<Plug>XTablineCdDown3	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown3   :cd %:p:h:h:h:h<cr>:call airline#util/;"	m
<Plug>XTablineCdHome	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdHome    :cd ~<cr>:call airline#util#doautocmd/;"	m
<Plug>XTablineNextBuffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineNextBuffer <SID>NextBuffer$/;"	m
<Plug>XTablinePrevBuffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablinePrevBuffer <SID>PrevBuffer$/;"	m
<Plug>XTablineReopen	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineReopen <SID>ReopenLastTab$/;"	m
<Plug>XTablineSelectBuffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineSelectBuffer <SID>SelectBuffer$/;"	m
<Plug>XTablineToggleFiltering	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleFiltering <SID>ToggleFiltering$/;"	m
<Plug>XTablineToggleTabs	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleTabs <SID>ToggleTabs$/;"	m
<S-v>	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <S-v> <NOP>$/;"	m
<SID>AutoPairsReturn	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<SID>NextBuffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>NextBuffer airline#extensions#tabline#xtabline#next_buffer(v:c/;"	m
<SID>PrevBuffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>PrevBuffer airline#extensions#tabline#xtabline#prev_buffer(v:c/;"	m
<SID>ReopenLastTab	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ReopenLastTab :XTabReopen<cr>$/;"	m
<SID>SelectBuffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>SelectBuffer g:xtabline_changing_buffer ? "\\<C-c>" : ":<C-u>c/;"	m
<SID>ToggleFiltering	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleFiltering :call airline#extensions#tabline#xtabline#toggle_buff/;"	m
<SID>ToggleTabs	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleTabs :call airline#extensions#tabline#xtabline#toggle_tabs()<cr/;"	m
<cr>	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <cr>          :call startify#open_buffers()<cr>$/;"	m
<insert>	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <insert>      :enew <bar> startinsert<cr>$/;"	m
<leader>cd2	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd2 <Plug>XTablineCdDown2$/;"	m
<leader>cd3	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd3 <Plug>XTablineCdDown3$/;"	m
<leader>cdc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdc <Plug>XTablineCdCurrent$/;"	m
<leader>cdd	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdd <Plug>XTablineCdDown1$/;"	m
<leader>cdh	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdh <Plug>XTablineCdHome$/;"	m
<plug>(startify-open-buffers)	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^nnoremap <silent><plug>(startify-open-buffers) :<c-u>call startify#open_buffers()<cr>$/;"	m
<space>	vimrc	/^nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>$/;"	m
A	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> A <NOP>$/;"	m
ACTION_MAP	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^ACTION_MAP = {$/;"	v
ALE	pack/vendor/start/completor.vim-master/pythonx/completers/ale.py	/^class ALE(Completor):$/;"	c
ALE Supported Languages and Tools	pack/vendor/start/ale-master/supported-tools.md	/^# ALE Supported Languages and Tools$/;"	c
ALEBufferFixGroup	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^augroup ALEBufferFixGroup$/;"	a
ALECleanupGroup	pack/vendor/start/ale-master/plugin/ale.vim	/^augroup ALECleanupGroup$/;"	a
ALECodeAction	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -range ALECodeAction :call ale#codefix#Execute(<range>)$/;"	c
ALECodeActionsGroup	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^    augroup ALECodeActionsGroup$/;"	a
ALEComplete	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEComplete :call ale#completion#GetCompletions('ale-manual')$/;"	c
ALECompletionActions	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^augroup ALECompletionActions$/;"	a
ALECompletionGroup	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^    augroup ALECompletionGroup$/;"	a
ALEDetail	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEDetail :call ale#cursor#ShowCursorDetail()$/;"	c
ALEDisable	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEDisable :call ale#toggle#Disable()$/;"	c
ALEDisableBuffer	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEDisableBuffer :call ale#toggle#DisableBuffer(bufnr(''))$/;"	c
ALEDocumentation	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEDocumentation :call ale#hover#ShowDocumentationAtCursor()$/;"	c
ALEEnable	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEEnable :call ale#toggle#Enable()$/;"	c
ALEEnableBuffer	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEEnableBuffer :call ale#toggle#EnableBuffer(bufnr(''))$/;"	c
ALEEvents	pack/vendor/start/ale-master/autoload/ale/events.vim	/^    augroup ALEEvents$/;"	a
ALEFileRename	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -bang ALEFileRename :call ale#filerename#Execute()$/;"	c
ALEFindReferences	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -nargs=* ALEFindReferences :call ale#references#Find(<f-args>)$/;"	c
ALEFirst	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEFirst :call ale#loclist_jumping#JumpToIndex(0)$/;"	c
ALEFix	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -bang -nargs=* -complete=customlist,ale#fix#registry#CompleteFixers ALEFix :call a/;"	c
ALEFixSuggest	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEFixSuggest :call ale#fix#registry#Suggest(&filetype)$/;"	c
ALEGoToDefinition	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -nargs=* ALEGoToDefinition :call ale#definition#GoToCommandHandler('', <f-args>)$/;"	c
ALEGoToImplementation	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -nargs=* ALEGoToImplementation :call ale#definition#GoToCommandHandler('implementa/;"	c
ALEGoToTypeDefinition	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -nargs=* ALEGoToTypeDefinition :call ale#definition#GoToCommandHandler('type', <f-/;"	c
ALEHighlightBufferGroup	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^augroup ALEHighlightBufferGroup$/;"	a
ALEHover	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEHover :call ale#hover#ShowAtCursor()$/;"	c
ALEImport	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEImport :call ale#completion#Import()$/;"	c
ALEInfo	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEInfo :call ale#debugging#Info()$/;"	c
ALEInfoToClipboard	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEInfoToClipboard :call ale#debugging#InfoToClipboard()$/;"	c
ALEInfoToFile	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -nargs=1 ALEInfoToFile :call ale#debugging#InfoToFile(<f-args>)$/;"	c
ALELast	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALELast :call ale#loclist_jumping#JumpToIndex(-1)$/;"	c
ALELint	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALELint :call ale#Queue(0, 'lint_file')$/;"	c
ALELintStop	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALELintStop :call ale#engine#Stop(bufnr(''))$/;"	c
ALENext	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -nargs=* ALENext$/;"	c
ALENextWrap	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALENextWrap :call ale#loclist_jumping#Jump('after', 1)$/;"	c
ALEOrganizeImports	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEOrganizeImports :call ale#organize_imports#Execute()$/;"	c
ALEPopulateLocList	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEPopulateLocList  :call ale#list#ForcePopulateErrorList(0)$/;"	c
ALEPopulateQuickfix	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEPopulateQuickfix :call ale#list#ForcePopulateErrorList(1)$/;"	c
ALEPrevious	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -nargs=* ALEPrevious$/;"	c
ALEPreviousWrap	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEPreviousWrap :call ale#loclist_jumping#Jump('before', 1)$/;"	c
ALERename	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar -bang ALERename :call ale#rename#Execute()$/;"	c
ALERepeatSelection	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALERepeatSelection :call ale#preview#RepeatSelection()$/;"	c
ALEReset	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEReset :call ale#toggle#Reset()$/;"	c
ALEResetBuffer	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEResetBuffer :call ale#toggle#ResetBuffer(bufnr(''))$/;"	c
ALEStopAllLSPs	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEStopAllLSPs :call ale#lsp#reset#StopAllLSPs()$/;"	c
ALESymbolSearch	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -nargs=1 ALESymbolSearch :call ale#symbol#Search(<q-args>)$/;"	c
ALEToggle	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEToggle :call ale#toggle#Toggle()$/;"	c
ALEToggleBuffer	pack/vendor/start/ale-master/plugin/ale.vim	/^command! -bar ALEToggleBuffer :call ale#toggle#ToggleBuffer(bufnr(''))$/;"	c
About the authors	pack/vendor/start/vim-easymotion-master/README.md	/^About the authors$/;"	c
AddLine	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	pack/vendor/start/vim-easymotion-master/t/operator_pending_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^function! AddLine(str)$/;"	f
Advanced Topics	pack/vendor/start/asyncrun.vim/README.md	/^## Advanced Topics$/;"	s
AirlineExtensions	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^command! AirlineExtensions   call s:airline_extensions()$/;"	c
AirlineRefresh	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^command! -bar -bang AirlineRefresh call s:airline_refresh(<q-bang>)$/;"	c
AirlineTheme	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airli/;"	c
AirlineToggle	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^command! -bar AirlineToggle  call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AleURISchemes	pack/vendor/start/ale-master/autoload/ale/events.vim	/^    augroup AleURISchemes$/;"	a
AnonymousFunctionb79ae6440100	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    getFile: function(name, c) {$/;"	f	function:startServer
AnonymousFunctionb79ae6440200	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      if (config.dontLoad && config.dontLoad.some(function(pat) { return minimatch(name, pat); }/;"	f	function:startServer.AnonymousFunctionb79ae6440100
AnonymousFunctionb79ae6440300	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    normalizeFilename: function(name) {$/;"	f	function:startServer
AnonymousFunctionb79ae6440400	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^  if (config.loadEagerly) config.loadEagerly.forEach(function(pat) {$/;"	f	function:startServer
AnonymousFunctionb79ae6440500	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    glob.sync(pat, { cwd: dir }).forEach(function(file) {$/;"	f
AnonymousFunctionb79ae6440600	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    server.request(doc, function(err, res) {$/;"	f
AnonymousFunctionb79ae6440700	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^  .on('line', function(line) {$/;"	f
AssertFixer	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ AssertFixer :call ale#assert#Fixer(<args>)$/;"	c
AssertFixerCwd	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ AssertFixerCwd :call ale#assert#FixerCwd(<args>)$/;"	c
AssertFixerNotExecuted	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=0 AssertFixerNotExecuted :call ale#assert#FixerNotExecuted()$/;"	c
AssertLSPAddress	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPAddress :call ale#assert#LSPAddress(<args>)$/;"	c
AssertLSPConfig	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPConfig :call ale#assert#LSPConfig(<args>)$/;"	c
AssertLSPLanguage	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPLanguage :call ale#assert#LSPLanguage(<args>)$/;"	c
AssertLSPOptions	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPOptions :call ale#assert#LSPOptions(<args>)$/;"	c
AssertLSPProject	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPProject :call ale#assert#LSPProject(<args>)$/;"	c
AssertLinter	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLinter :call ale#assert#Linter(<args>)$/;"	c
AssertLinterCwd	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLinterCwd :call ale#assert#LinterCwd(<args>)$/;"	c
AssertLinterNotExecuted	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=0 AssertLinterNotExecuted :call ale#assert#LinterNotExecuted()$/;"	c
AsyncReset	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^command! -nargs=0 AsyncReset call asyncrun#reset()$/;"	c
AsyncRun	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^command! -bang -nargs=+ -range=0 -complete=file AsyncRun$/;"	c
AsyncRun - Run shell command	pack/vendor/start/asyncrun.vim/README.md	/^### AsyncRun - Run shell command$/;"	S
AsyncRun - Run shell command	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### AsyncRun - Run shell command$/;"	S
AsyncRun - 运行 shell 命令	pack/vendor/start/asyncrun.vim/README-cn.md	/^### AsyncRun - 运行 shell 命令$/;"	S
AsyncRun_Job_OnTimer	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! g:AsyncRun_Job_OnTimer(id)$/;"	f
AsyncStop	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^command! -bar -bang -nargs=0 AsyncStop call asyncrun#stop('<bang>')$/;"	c
AsyncStop - Stop the running job	pack/vendor/start/asyncrun.vim/README.md	/^### AsyncStop - Stop the running job$/;"	S
AsyncStop - Stop the running job	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### AsyncStop - Stop the running job$/;"	S
AsyncStop - 停止正在运行的任务	pack/vendor/start/asyncrun.vim/README-cn.md	/^### AsyncStop - 停止正在运行的任务$/;"	S
Author and Feedback	pack/vendor/start/vim-startify-master/README.md	/^## Author and Feedback$/;"	s
Author's Instructions	pack/vendor/start/nerdtree-master/.github/PULL_REQUEST_TEMPLATE.md	/^#### Author's Instructions$/;"	t
Auto Pairs	pack/vendor/start/auto-pairs-master/README.md	/^Auto Pairs$/;"	c
AutoPairsBackInsert	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsBackInsert()$/;"	f
AutoPairsDefaultPairs	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsDefaultPairs()$/;"	f
AutoPairsDefine	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsDefine(pairs, ...)$/;"	f
AutoPairsDelete	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsFastWrap()$/;"	f
AutoPairsInit	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsInit()$/;"	f
AutoPairsInsert	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsInsert(key)$/;"	f
AutoPairsJump	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsJump()$/;"	f
AutoPairsMap	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsMap(key)$/;"	f
AutoPairsMoveCharacter	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsMoveCharacter(key)$/;"	f
AutoPairsReturn	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsReturn()$/;"	f
AutoPairsSpace	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsSpace()$/;"	f
AutoPairsToggle	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsToggle()$/;"	f
AutoPairsTryInit	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! AutoPairsTryInit()$/;"	f
Autocmd	pack/vendor/start/asyncrun.vim/README-cn.md	/^### Autocmd$/;"	S
Autocmd	pack/vendor/start/asyncrun.vim/README.md	/^### Autocmd$/;"	S
Autocmd	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Autocmd$/;"	S
Automatic truncation	pack/vendor/start/vim-airline-master/README.md	/^## Automatic truncation$/;"	s
B	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> B             :call startify#set_batchmode('B')<cr>$/;"	m
BUILD_INVERTED_INDEX	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
Base	pack/vendor/start/ale-master/rplugin/python3/deoplete/sources/ale.py	/^    class Base(object):$/;"	c
Base	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Base(object):$/;"	c
Base	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^Base = Meta('Base', (object, ), {})$/;"	v
Bidirectional motions	pack/vendor/start/vim-easymotion-master/README.md	/^### Bidirectional motions$/;"	S
Bindeval	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^    class Bindeval(object):$/;"	c	function:_patch_nvim	file:
Bonus fuzzy-search with EasyMotion	pack/vendor/start/vim-easymotion-master/README.md	/^### Bonus fuzzy-search with EasyMotion$/;"	S
Bookmark	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=? Bookmark :call nerdtree#ui_glue#bookmarkNode('<args>')$/;"	c
BookmarkToRoot	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=+ BookmarkToRoot cal/;"	c
Buffer	pack/vendor/start/completor.vim-master/README.md	/^#### Buffer$/;"	t
Buffer	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^class Buffer(Completor):$/;"	c
Buffer	pack/vendor/start/completor.vim-master/tests/conftest.py	/^class Buffer(list):$/;"	c
Buffer Level Pairs Setting	pack/vendor/start/auto-pairs-master/README.md	/^Buffer Level Pairs Setting$/;"	s
Bugs	pack/vendor/start/vim-airline-master/CONTRIBUTING.md	/^# Bugs$/;"	c
CHANGE_DIR	pack/vendor/start/completor.vim-master/Makefile	/^CHANGE_DIR = cd .\/pythonx\/completers\/javascript && $/;"	m
COMMON_LIMIT	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^COMMON_LIMIT = 10$/;"	v
CONTRIBUTING	pack/vendor/start/vim-startify-master/CONTRIBUTING.md	/^CONTRIBUTING$/;"	c
CSCOPE_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
Can I have the same NERDTree on every tab automatically?	pack/vendor/start/nerdtree-master/README.markdown	/^### Can I have the same NERDTree on every tab automatically?$/;"	S
Can NERDTree access remote files via scp or ftp?	pack/vendor/start/nerdtree-master/README.markdown	/^### Can NERDTree access remote files via scp or ftp?$/;"	S
Change Log	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^# Change Log$/;"	c
Changelog	pack/vendor/start/nerdcommenter-master/CHANGELOG.md	/^# Changelog$/;"	c
Clang	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^class Clang(Completor):$/;"	c
CleanUp	pack/vendor/start/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
ClearAllBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ClearAllBookmarks call g:NERDTreeBookmark.ClearAll() <bar> call b:/;"	c
ClearBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=* ClearBookmarks cal/;"	c
Collaborator's Instructions	pack/vendor/start/nerdtree-master/.github/PULL_REQUEST_TEMPLATE.md	/^#### Collaborator's Instructions$/;"	t
Command Modifier	pack/vendor/start/asyncrun.vim/README.md	/^### Command Modifier$/;"	S
Command Modifier	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Command Modifier$/;"	S
Common	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^class Common(completor.Completor):$/;"	c
CompareMovements	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^function! CompareMovements(movement1, movement2, backward)$/;"	f
Complete Options (completeopt)	pack/vendor/start/completor.vim-master/README.md	/^#### Complete Options (completeopt)$/;"	t
Completers	pack/vendor/start/completor.vim-master/README.md	/^Completers$/;"	s
Completion	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Completion(Base):$/;"	c
Completor	pack/vendor/start/completor.vim-master/README.md	/^Completor$/;"	c
Completor	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^class Completor(Base):$/;"	c
Completor Actions	pack/vendor/start/completor.vim-master/README.md	/^#### Completor Actions$/;"	t
CompletorDisable	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^command! CompletorDisable call completor#disable_autocomplete()$/;"	c
CompletorEnable	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^command! CompletorEnable call completor#enable_autocomplete()$/;"	c
Config tern for javascript completion	pack/vendor/start/completor.vim-master/README.md	/^#### Config tern for javascript completion$/;"	t
Configurable and extensible	pack/vendor/start/vim-airline-master/README.md	/^## Configurable and extensible$/;"	s
Contents	pack/vendor/start/asyncrun.vim/README.md	/^# Contents$/;"	c
Contributing	pack/vendor/start/vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributions	pack/vendor/start/nerdcommenter-master/README.md	/^## Contributions$/;"	s
Contributions	pack/vendor/start/vim-airline-master/CONTRIBUTING.md	/^# Contributions$/;"	c
Contributors	pack/vendor/start/auto-pairs-master/README.md	/^Contributors$/;"	s
Contributors	pack/vendor/start/tagbar-master/README.md	/^## Contributors$/;"	s
Cooperate with other Plugins	pack/vendor/start/asyncrun.vim/README.md	/^## Cooperate with other Plugins$/;"	s
Cooperate with other Plugins	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^## Cooperate with other Plugins$/;"	s
Cooperate with vim-fugitive:	pack/vendor/start/asyncrun.vim/README.md	/^### Cooperate with vim-fugitive:$/;"	S
Cooperate with vim-fugitive:	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Cooperate with vim-fugitive:$/;"	S
Credits	pack/vendor/start/asyncrun.vim/README-cn.md	/^# Credits$/;"	c
Credits	pack/vendor/start/asyncrun.vim/README.md	/^# Credits$/;"	c
Credits	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^## Credits$/;"	s
Current Behavior (Include screenshots where appropriate.)	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/bug.md	/^#### Current Behavior (Include screenshots where appropriate.)$/;"	t
CursorPos	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	pack/vendor/start/vim-easymotion-master/t/operator_pending_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^function! CursorPos()$/;"	f
Customize Runner	pack/vendor/start/asyncrun.vim/README.md	/^### Customize Runner$/;"	S
Customize Runner	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Customize Runner$/;"	S
DB_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DIRNAME	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^DIRNAME = os.path.dirname(__file__)$/;"	v
DIST_DIR	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var DIST_DIR = path.resolve(__dirname, path.join('node_modules', 'tern'));$/;"	v
Default bindings	pack/vendor/start/vim-easymotion-master/README.md	/^### Default bindings$/;"	S
Default mappings	pack/vendor/start/nerdcommenter-master/README.md	/^### Default mappings$/;"	S
Definition	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Definition(Completion):$/;"	c
Dependencies	pack/vendor/start/tagbar-master/README.md	/^## Dependencies$/;"	s
Description	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/feature_request.md	/^#### Description$/;"	t
Description of Changes	pack/vendor/start/nerdtree-master/.github/PULL_REQUEST_TEMPLATE.md	/^### Description of Changes$/;"	S
Dictionary	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    class Dictionary(object):$/;"	c	class:Vim
DidChange	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class DidChange(Base):$/;"	c
DidChangeConfiguration	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class DidChangeConfiguration(Base):$/;"	c
DidOpen	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class DidOpen(Base):$/;"	c
DidSave	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class DidSave(Base):$/;"	c
Documentation	pack/vendor/start/nerdcommenter-master/README.md	/^### Documentation$/;"	S
Documentation	pack/vendor/start/vim-airline-master/README.md	/^# Documentation$/;"	c
DoneParseArgs	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
EMCommandLineMap	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^\\   EMCommandLineMap$/;"	c
EMCommandLineNoreMap	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^\\   EMCommandLineNoreMap$/;"	c
EMCommandLineUnMap	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^\\   EMCommandLineUnMap$/;"	c
EasyMotion#DotRepeat	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#DotRepeat() " {{{$/;"	f
EasyMotion#E	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#E(visualmode, direction) " {{{$/;"	f
EasyMotion#EK	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#EK(visualmode, direction) " {{{$/;"	f
EasyMotion#EL	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#EL(visualmode, direction) " {{{$/;"	f
EasyMotion#EW	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#EW(visualmode, direction) " {{{$/;"	f
EasyMotion#Eol	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#Eol(visualmode, direction) " {{{$/;"	f
EasyMotion#JK	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#JK(visualmode, direction) " {{{$/;"	f
EasyMotion#JumpToAnywhere	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#JumpToAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#LineAnywhere	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#LineAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#NextPrevious	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#NextPrevious(visualmode, direction) " {{{$/;"	f
EasyMotion#OverwinF	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#OverwinF(num_strokes) " {{{$/;"	f
EasyMotion#Repeat	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#Repeat(visualmode) " {{{$/;"	f
EasyMotion#S	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#S(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#SL	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#SL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#Search	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#Search(visualmode, direction, respect_direction) " {{{$/;"	f
EasyMotion#Sol	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#Sol(visualmode, direction) " {{{$/;"	f
EasyMotion#T	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#T(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#TL	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#TL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#User	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#User(pattern, visualmode, direction, inclusive, ...) " {{{$/;"	f
EasyMotion#WB	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#WB(visualmode, direction) " {{{$/;"	f
EasyMotion#WBK	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#WBK(visualmode, direction) " {{{$/;"	f
EasyMotion#WBL	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#WBL(visualmode, direction) " {{{$/;"	f
EasyMotion#WBW	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#WBW(visualmode, direction) " {{{$/;"	f
EasyMotion#activate	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#activate(is_visual) "{{{$/;"	f
EasyMotion#attach_active_autocmd	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#attach_active_autocmd() "{{{$/;"	f
EasyMotion#cmigemo#getMigemoPattern	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#getMigemoPattern(input) "{{{$/;"	f
EasyMotion#cmigemo#system	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#system(...) "{{{$/;"	f
EasyMotion#command_line#GetInput	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#GetInput(num_strokes, prev, direction) "{{{$/;"	f
EasyMotion#command_line#cmap	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cmap(args)$/;"	f
EasyMotion#command_line#cnoremap	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cnoremap(args)$/;"	f
EasyMotion#command_line#cunmap	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cunmap(lhs)$/;"	f
EasyMotion#go	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#go(...) abort$/;"	f
EasyMotion#helper#VarReset	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#VarReset(var, ...) "{{{$/;"	f
EasyMotion#helper#get_char_by_coord	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#get_char_by_coord(coord) "{{{$/;"	f
EasyMotion#helper#include_multibyte_char	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#include_multibyte_char(str) "{{{$/;"	f
EasyMotion#helper#is_folded	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_folded(line) "{{{$/;"	f
EasyMotion#helper#is_greater_coords	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_greater_coords(coords1, coords2) "{{{$/;"	f
EasyMotion#helper#load_migemo_dict	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#load_migemo_dict() "{{{$/;"	f
EasyMotion#helper#mode	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#mode(flag) "{{{$/;"	f
EasyMotion#helper#should_case_sensitive	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#should_case_sensitive(input, is_search) "{{{$/;"	f
EasyMotion#helper#silent_feedkeys	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#silent_feedkeys(expr, name, ...) "{{{$/;"	f
EasyMotion#helper#strchars	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^    function! EasyMotion#helper#strchars(str)$/;"	f
EasyMotion#helper#vcol	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#vcol(expr) abort$/;"	f
EasyMotion#highlight#InitHL	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#InitHL(group, colors) " {{{$/;"	f
EasyMotion#highlight#add_color_group	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_color_group(new_groups) "{{{$/;"	f
EasyMotion#highlight#add_highlight	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_highlight(re, group) "{{{$/;"	f
EasyMotion#highlight#add_pos_highlight	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_pos_highlight(line_num, col_num, group) "{{{$/;"	f
EasyMotion#highlight#attach_autocmd	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#attach_autocmd() "{{{$/;"	f
EasyMotion#highlight#capture	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#capture(hlname) "{{{$/;"	f
EasyMotion#highlight#delete_highlight	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#delete_highlight(...) "{{{$/;"	f
EasyMotion#highlight#init	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#init() "{{{$/;"	f
EasyMotion#highlight#load	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#load()$/;"	f
EasyMotion#highlight#turn_off	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_off(hl) "{{{$/;"	f
EasyMotion#highlight#turn_on	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_on(hl) "{{{$/;"	f
EasyMotion#init	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#init()$/;"	f
EasyMotion#is_active	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#is_active() "{{{$/;"	f
EasyMotion#migemo#cp932#load_dict	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/migemo/cp932.vim	/^function! EasyMotion#migemo#cp932#load_dict()$/;"	f
EasyMotion#migemo#eucjp#load_dict	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/migemo/eucjp.vim	/^function! EasyMotion#migemo#eucjp#load_dict()$/;"	f
EasyMotion#migemo#utf8#load_dict	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/migemo/utf8.vim	/^function! EasyMotion#migemo#utf8#load_dict()$/;"	f
EasyMotion#overwin#line	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#line() abort$/;"	f
EasyMotion#overwin#move	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#move(pattern) abort$/;"	f
EasyMotion#overwin#w	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#w() abort$/;"	f
EasyMotion#reset	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! EasyMotion#reset()$/;"	f
EasyMotion#sticky_table#jp	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#jp = {$/;"	v
EasyMotion#sticky_table#us	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#us = {$/;"	v
EasyMotion#undo#save	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/undo.vim	/^function! EasyMotion#undo#save() abort$/;"	f
EasyMotionInitHL	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^augroup EasyMotionInitHL$/;"	a
EditBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 EditBookmarks call g:NERDTreeBookmark.Edit()$/;"	c
Elixir	pack/vendor/start/completor.vim-master/README.md	/^#### Elixir$/;"	t
Enable LSP	pack/vendor/start/completor.vim-master/README.md	/^#### Enable LSP$/;"	t
Environment	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/bug.md	/^#### Environment$/;"	t
Example	pack/vendor/start/asyncrun.vim/README.md	/^# Example$/;"	c
Example	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^# Example$/;"	c
Example configuration	pack/vendor/start/vim-easymotion-master/README.md	/^#### Example configuration$/;"	t
Examples	pack/vendor/start/vim-startify-master/CONTRIBUTING.md	/^Examples$/;"	s
Expected Result	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/bug.md	/^#### Expected Result$/;"	t
Extensible pipeline	pack/vendor/start/vim-airline-master/README.md	/^#### Extensible pipeline$/;"	t
Extra Runners	pack/vendor/start/asyncrun.vim/README.md	/^### Extra Runners$/;"	S
Extras	pack/vendor/start/vim-airline-master/README.md	/^## Extras$/;"	s
F	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map F <Plug>(easymotion-F)$/;"	m
F/	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map F\/ <Plug>(easymotion-Fn)$/;"	m
FAQ	pack/vendor/start/vim-airline-master/README.md	/^# FAQ$/;"	c
FILESIZE	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^for \/F %%F in ("%DB_FILE%.files") do set FILESIZE=%%~zF$/;"	v
FILESIZE	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILESIZE=0$/;"	v
FILE_LIST_CMD	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
Features	pack/vendor/start/auto-pairs-master/README.md	/^Features$/;"	s
Features	pack/vendor/start/vim-airline-master/README.md	/^# Features$/;"	c
Filename	pack/vendor/start/completor.vim-master/README.md	/^#### Filename$/;"	t
Filename	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^class Filename(Completor):$/;"	c
Filter	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    class Filter(object):$/;"	c	function:main	file:
Fine-tuned configuration	pack/vendor/start/vim-airline-master/README.md	/^#### Fine-tuned configuration$/;"	t
Fly Mode	pack/vendor/start/auto-pairs-master/README.md	/^Fly Mode$/;"	s
For users of the forked version	pack/vendor/start/vim-easymotion-master/README.md	/^### For users of the forked version$/;"	S
Format	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Format(Base):$/;"	c
Frequently Asked Questions	pack/vendor/start/nerdtree-master/README.markdown	/^## Frequently Asked Questions$/;"	s
Function	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def Function(self, func_name):$/;"	m	class:Vim
Function (API)	pack/vendor/start/asyncrun.vim/README.md	/^### Function (API)$/;"	S
Function (API)	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Function (API)$/;"	S
Getting Started	pack/vendor/start/nerdtree-master/README.markdown	/^## Getting Started$/;"	s
GivenCommandOutput	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    command! -nargs=+ GivenCommandOutput :call ale#assert#GivenCommandOutput(<args>)$/;"	c
Go	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^class Go(Completor):$/;"	c
Golang practices (without using lsp)	pack/vendor/start/completor.vim-master/README.md	/^#### Golang practices (without using lsp)$/;"	t
Gutentags	pack/vendor/start/vim-gutentags/README.md	/^# Gutentags$/;"	c
GutentagsToggleEnabled	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
HAS_YARN	pack/vendor/start/completor.vim-master/Makefile	/^HAS_YARN := $(shell which yarn)$/;"	m
HIGHLIGHT_GROUP_MAP	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^    HIGHLIGHT_GROUP_MAP = {$/;"	v	class:_highlight
HelloCompleter	pack/vendor/start/completor.vim-master/tests/test_completor.py	/^class HelloCompleter(Completor):$/;"	c
History	pack/vendor/start/asyncrun.vim/README.md	/^# History$/;"	c
Hover	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Hover(Completion):$/;"	c
How can I change the default arrows?	pack/vendor/start/nerdtree-master/README.markdown	/^### How can I change the default arrows?$/;"	S
How can I close Vim or a tab automatically when NERDTree is the last window?	pack/vendor/start/nerdtree-master/README.markdown	/^### How can I close Vim or a tab automatically when NERDTree is the last window?$/;"	S
How can I map a specific key or shortcut to open NERDTree?	pack/vendor/start/nerdtree-master/README.markdown	/^### How can I map a specific key or shortcut to open NERDTree?$/;"	S
How can I prevent other buffers replacing NERDTree in its window?	pack/vendor/start/nerdtree-master/README.markdown	/^### How can I prevent other buffers replacing NERDTree in its window?$/;"	S
How do I open NERDTree automatically when Vim starts?	pack/vendor/start/nerdtree-master/README.markdown	/^### How do I open NERDTree automatically when Vim starts?$/;"	S
How?	pack/vendor/start/vim-gutentags/README.md	/^## How?$/;"	s
I	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> I <NOP>$/;"	m
INDEX_WHOLE_PROJECT	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
Implementation	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Implementation(Completion):$/;"	c
Important notes	pack/vendor/start/vim-easymotion-master/README.md	/^Important notes$/;"	c
Initialize	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Initialize(Base):$/;"	c
Initialized	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Initialized(Base):$/;"	c
InsertTestText1	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^function! InsertTestText1()$/;"	f
Install	pack/vendor/start/asyncrun.vim/README.md	/^# Install$/;"	c
Install	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^# Install$/;"	c
Install	pack/vendor/start/completor.vim-master/README.md	/^Install$/;"	s
Installation	pack/vendor/start/auto-pairs-master/README.md	/^Installation$/;"	s
Installation	pack/vendor/start/nerdcommenter-master/README.md	/^## Installation$/;"	s
Installation	pack/vendor/start/nerdtree-master/README.markdown	/^## Installation$/;"	s
Installation	pack/vendor/start/tagbar-master/README.md	/^## Installation$/;"	s
Installation	pack/vendor/start/vim-airline-master/README.md	/^# Installation$/;"	c
Installation	pack/vendor/start/vim-easymotion-master/README.md	/^Installation$/;"	s
Installation and Documentation	pack/vendor/start/vim-startify-master/README.md	/^## Installation and Documentation$/;"	s
Integrating with powerline fonts	pack/vendor/start/vim-airline-master/README.md	/^# Integrating with powerline fonts$/;"	c
Integration with incsearch.vim	pack/vendor/start/vim-easymotion-master/README.md	/^#### Integration with incsearch.vim$/;"	t
Internal Terminal	pack/vendor/start/asyncrun.vim/README.md	/^### Internal Terminal$/;"	S
Internal Terminal	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Internal Terminal$/;"	S
Introduction	pack/vendor/start/nerdtree-master/README.markdown	/^## Introduction$/;"	s
Introduction	pack/vendor/start/vim-easymotion-master/README.md	/^Introduction$/;"	c
JSONRPC_VERSION	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^JSONRPC_VERSION = '2.0'$/;"	v
Javascript	pack/vendor/start/completor.vim-master/README.md	/^#### Javascript$/;"	t
Jedi	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^class Jedi(Completor):$/;"	c
JediProcessor	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^class JediProcessor(object):$/;"	c
Jump to next/previous match (even on next/previous page)	pack/vendor/start/vim-easymotion-master/README.md	/^#### Jump to next\/previous match (even on next\/previous page)$/;"	t
Known Issues	pack/vendor/start/auto-pairs-master/README.md	/^Known Issues$/;"	s
LIMIT	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^LIMIT = 50$/;"	v
LOG_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
Language Tips	pack/vendor/start/asyncrun.vim/README.md	/^## Language Tips$/;"	s
Language Tips	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^## Language Tips$/;"	s
License	pack/vendor/start/auto-pairs-master/README.md	/^License$/;"	s
License	pack/vendor/start/tagbar-master/README.md	/^## License$/;"	s
License	pack/vendor/start/vim-airline-master/README.md	/^# License$/;"	c
List	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    List = List$/;"	v	class:Vim
List	pack/vendor/start/completor.vim-master/tests/conftest.py	/^class List(object):$/;"	c
LogFilter	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^class LogFilter(object):$/;"	c
LoopParseArgs	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
Lsp	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^class Lsp(Completor):$/;"	c
M._asyncrun_term_toggle	pack/vendor/start/asyncrun.vim/lua/asyncrun/toggleterm.lua	/^  function M._asyncrun_term_toggle()$/;"	f
M.reset	pack/vendor/start/asyncrun.vim/lua/asyncrun/toggleterm.lua	/^function M.reset()$/;"	f
M.runner	pack/vendor/start/asyncrun.vim/lua/asyncrun/toggleterm.lua	/^function M.runner(opts, mapping)$/;"	f
Maintainers	pack/vendor/start/vim-airline-master/README.md	/^# Maintainers$/;"	c
Maintenance	pack/vendor/start/vim-airline-master/CONTRIBUTING.md	/^# Maintenance$/;"	c
Manual	pack/vendor/start/asyncrun.vim/README.md	/^## Manual$/;"	s
Manual	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^## Manual$/;"	s
Manual Installation	pack/vendor/start/nerdcommenter-master/README.md	/^### Manual Installation$/;"	S
Meta	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^class Meta(type):$/;"	c
Migemo feature (for Japanese user)	pack/vendor/start/vim-easymotion-master/README.md	/^### Migemo feature (for Japanese user)$/;"	S
Minimal Configuration Tutorial	pack/vendor/start/vim-easymotion-master/README.md	/^Minimal Configuration Tutorial$/;"	s
More Topics	pack/vendor/start/asyncrun.vim/README.md	/^## More Topics$/;"	s
More Topics	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^## More Topics$/;"	s
Motions	pack/vendor/start/nerdcommenter-master/README.md	/^## Motions$/;"	s
Multibyte Pairs	pack/vendor/start/auto-pairs-master/README.md	/^Multibyte Pairs$/;"	s
N	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><expr> N 'j '[v:searchforward].'N'$/;"	m
NERD Commenter	pack/vendor/start/nerdcommenter-master/README.md	/^# NERD Commenter$/;"	c
NERDComment	pack/vendor/start/nerdcommenter-master/plugin/nerdcommenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommentIsCharCommented	pack/vendor/start/nerdcommenter-master/plugin/nerdcommenter.vim	/^function! NERDCommentIsCharCommented(line, col)$/;"	f
NERDCommentIsLineCommented	pack/vendor/start/nerdcommenter-master/plugin/nerdcommenter.vim	/^function! NERDCommentIsLineCommented(lineNo)$/;"	f
NERDTree	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreateTabTree('<args>')$/;"	c
NERDTree	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree Change Log	pack/vendor/start/nerdtree-master/CHANGELOG.md	/^# NERDTree Change Log$/;"	c
NERDTree Plugins	pack/vendor/start/nerdtree-master/README.markdown	/^## NERDTree Plugins$/;"	s
NERDTreeAddKeyMap	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirOnTabSwitch	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    augroup NERDTreeChDirOnTabSwitch$/;"	a
NERDTreeClose	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeClose :call g:NERDTree.Close()$/;"	c
NERDTreeCopyNode	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	pack/vendor/start/nerdtree-master/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	pack/vendor/start/nerdtree-master/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeExecuteFileWindows	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileWindows()$/;"	f
NERDTreeFind	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=file -bar NERDTreeFind call s:findAndRevealPath('<args>')$/;"	c
NERDTreeFocus	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^    command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call/;"	c
NERDTreeHijackNetrw	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMirror	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRefreshRoot	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeRefreshRoot call s:refreshRoot()$/;"	c
NERDTreeRender	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeSystemCommand	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeSystemCommand()$/;"	f
NERDTreeToggle	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.ToggleTabTree('<args/;"	c
NERDTreeToggleVCS	pack/vendor/start/nerdtree-master/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeToggleVCS :call <SID>ToggleTabTreeVCS('<args>')$/;"	c
NERDTreeVCS	pack/vendor/start/nerdtree-master/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NeoBundle (https://github.com/Shougo/neobundle.vim)	pack/vendor/start/vim-easymotion-master/README.md	/^### NeoBundle (https:\/\/github.com\/Shougo\/neobundle.vim)$/;"	S
Neoinclude	pack/vendor/start/completor.vim-master/README.md	/^#### Neoinclude$/;"	t
Neoinclude	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^class Neoinclude(Completor):$/;"	c
New Version Info	pack/vendor/start/nerdtree-master/.github/PULL_REQUEST_TEMPLATE.md	/^### New Version Info$/;"	S
New features in version 2.0	pack/vendor/start/vim-easymotion-master/README.md	/^New features in version 2.0$/;"	c
New features in version 3.0	pack/vendor/start/vim-easymotion-master/README.md	/^New features in version 3.0$/;"	c
News	pack/vendor/start/asyncrun.vim/README.md	/^# News$/;"	c
News	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^# News$/;"	c
Note: If the file structure display is wrong	pack/vendor/start/tagbar-master/README.md	/^## Note: If the file structure display is wrong$/;"	s
O	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> O <NOP>$/;"	m
Omni	pack/vendor/start/completor.vim-master/pythonx/completers/common/omni.py	/^class Omni(Completor):$/;"	c
OpenBookmark	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 OpenBookmark call /;"	c
Options	pack/vendor/start/auto-pairs-master/README.md	/^Options$/;"	s
Overwin motions	pack/vendor/start/vim-easymotion-master/README.md	/^### Overwin motions$/;"	S
PAT	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^PAT = re.compile(r'(\\w{2,}:(\/\/?[^\\s]*)?)|(<\/[^\\s>]*>?)|(\/\/)')$/;"	v
PAUSE_BEFORE_EXIT	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
POST_PROCESS_CMD	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_DIR	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var PROJECT_DIR = (function() {$/;"	f
PROJECT_FILE_NAME	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var PROJECT_FILE_NAME = '.tern-project';$/;"	v
PROJECT_ROOT	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
ParseArgs	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
Pathogen (https://github.com/tpope/vim-pathogen)	pack/vendor/start/vim-easymotion-master/README.md	/^### Pathogen (https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S
Performance	pack/vendor/start/vim-airline-master/README.md	/^# Performance$/;"	c
Post Installation	pack/vendor/start/nerdcommenter-master/README.md	/^### Post Installation$/;"	S
Preface	pack/vendor/start/asyncrun.vim/README.md	/^# Preface$/;"	c
Preface	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^# Preface$/;"	c
Project Root	pack/vendor/start/asyncrun.vim/README.md	/^### Project Root$/;"	S
Project Root	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Project Root$/;"	S
Pushing	pack/vendor/start/vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	s
Python	pack/vendor/start/completor.vim-master/README.md	/^#### Python$/;"	t
Quickfix window	pack/vendor/start/asyncrun.vim/README-cn.md	/^### Quickfix window$/;"	S
Quickfix window	pack/vendor/start/asyncrun.vim/README.md	/^### Quickfix window$/;"	S
Quickfix window	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Quickfix window$/;"	S
Quickstart	pack/vendor/start/tagbar-master/README.md	/^## Quickstart$/;"	s
REGEX_MAP	pack/vendor/start/completor.vim-master/pythonx/completers/common/utils.py	/^REGEX_MAP = {$/;"	v
Racer	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^class Racer(Completor):$/;"	c
Range support	pack/vendor/start/asyncrun.vim/README.md	/^### Range support$/;"	S
Range support	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Range support$/;"	S
Range 支持	pack/vendor/start/asyncrun.vim/README-cn.md	/^### Range 支持$/;"	S
Rationale	pack/vendor/start/vim-airline-master/README.md	/^# Rationale$/;"	c
ReadBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ReadBookmarks call g:NERDTreeBookmark.CacheBookmarks(0) <bar> call/;"	c
References	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class References(Completion):$/;"	c
Reformat multiline error	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^## Reformat multiline error$/;"	s
Related Projects	pack/vendor/start/vim-gutentags/README.md	/^# Related Projects$/;"	c
RemoveNewerKeys	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! RemoveNewerKeys(results) abort$/;"	f
Rename	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Rename(Completion):$/;"	c
Repeat motions	pack/vendor/start/vim-easymotion-master/README.md	/^### Repeat motions$/;"	S
Repeat the last find motion	pack/vendor/start/vim-easymotion-master/README.md	/^#### Repeat the last find motion$/;"	t
Repeat the last motion	pack/vendor/start/vim-easymotion-master/README.md	/^#### Repeat the last motion$/;"	t
Requirements	pack/vendor/start/asyncrun.vim/README.md	/^### Requirements$/;"	S
Requirements	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Requirements$/;"	S
Requirements	pack/vendor/start/completor.vim-master/README.md	/^Requirements$/;"	s
RevealBookmark	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 RevealBookmark :ca/;"	c
Runner Folder	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/README.md	/^# Runner Folder$/;"	c
Running Modes	pack/vendor/start/asyncrun.vim/README.md	/^### Running Modes$/;"	S
Running modes	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Running modes$/;"	S
Rust	pack/vendor/start/completor.vim-master/README.md	/^#### Rust$/;"	t
S	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> S             :call startify#set_batchmode('S')<cr>$/;"	m
SClose	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^command! -nargs=0 -bar SClose call startify#session_close()$/;"	c
SDelete	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SDelete call startify#se/;"	c
SLoad	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SLoad   call startify#se/;"	c
SSave	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SSave   call startify#se/;"	c
START_NO_DIRNAME	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^START_NO_DIRNAME = re.compile(r'^(\\.{0,2}\/|~\/|[a-zA-Z]:\/|\\$)')$/;"	v
Screenshot	pack/vendor/start/vim-startify-master/README.md	/^## Screenshot$/;"	s
Screenshots	pack/vendor/start/tagbar-master/README.md	/^## Screenshots$/;"	s
Screenshots	pack/vendor/start/vim-airline-master/README.md	/^# Screenshots$/;"	c
Seamless integration	pack/vendor/start/vim-airline-master/README.md	/^## Seamless integration$/;"	s
Self-Diagnosis	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/bug.md	/^#### Self-Diagnosis$/;"	t
Settings	pack/vendor/start/asyncrun.vim/README.md	/^### Settings$/;"	S
Settings	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Settings$/;"	S
Settings	pack/vendor/start/nerdcommenter-master/README.md	/^### Settings$/;"	S
Shortcuts	pack/vendor/start/auto-pairs-master/README.md	/^Shortcuts$/;"	s
ShowUsage	pack/vendor/start/vim-gutentags/plat/unix/update_gtags.sh	/^ShowUsage() {$/;"	f
ShowUsage	pack/vendor/start/vim-gutentags/plat/unix/update_pyscopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	pack/vendor/start/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	pack/vendor/start/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Signature	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class Signature(Completion):$/;"	c
Smartcase & Smartsign	pack/vendor/start/vim-easymotion-master/README.md	/^### Smartcase & Smartsign$/;"	S
Smarter tab line	pack/vendor/start/vim-airline-master/README.md	/^## Smarter tab line$/;"	s
SolarizedHiTrail	colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedMenu	colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
Source	pack/vendor/start/ale-master/rplugin/python3/deoplete/sources/ale.py	/^class Source(Base):$/;"	c
Startify	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^command! -nargs=0 -bar Startify call startify#insane_in_the_membrane(0)$/;"	c
StartifyDebug	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^command! -nargs=0 -bar StartifyDebug call startify#debug()$/;"	c
State Your Question	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/question.md	/^#### State Your Question$/;"	t
Steps to Reproduce the Issue	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/bug.md	/^#### Steps to Reproduce the Issue$/;"	t
Straightforward customization	pack/vendor/start/vim-airline-master/README.md	/^## Straightforward customization$/;"	s
StripAnsiCodes	pack/vendor/start/ale-master/ale_linters/bitbake/oelint_adv.vim	/^function! StripAnsiCodes(line) abort$/;"	f
Support for additional filetypes	pack/vendor/start/tagbar-master/README.md	/^## Support for additional filetypes$/;"	s
Support for dot repeat	pack/vendor/start/vim-easymotion-master/README.md	/^#### Support for dot repeat$/;"	t
T	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map T <Plug>(easymotion-T)$/;"	m
T	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> T             :call startify#set_batchmode('T')<cr>$/;"	m
T/	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map T\/ <Plug>(easymotion-Tn)$/;"	m
TAGS_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
Tagbar	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=? Tagbar              call tagbar#ToggleWindow(<f-args>)$/;"	c
Tagbar: a class outline viewer for Vim	pack/vendor/start/tagbar-master/README.md	/^# Tagbar: a class outline viewer for Vim$/;"	c
TagbarAutoCmds	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^    augroup TagbarAutoCmds$/;"	a
TagbarBalloonExpr	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarCleanupAutoCmds	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^    augroup TagbarCleanupAutoCmds$/;"	a
TagbarClose	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=* TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#debug#start_debug(<f-args>)$/;"	c
TagbarDebugEnd	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#debug#stop_debug()$/;"	c
TagbarForceUpdate	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=0 TagbarForceUpdate   call tagbar#ForceUpdate()$/;"	c
TagbarGetTypeConfig	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarJump	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=0 TagbarJump   call tagbar#jump()$/;"	c
TagbarJumpNext	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=0 TagbarJumpNext      call tagbar#jumpToNearbyTag(1)$/;"	c
TagbarJumpPrev	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=0 TagbarJumpPrev      call tagbar#jumpToNearbyTag(-1)$/;"	c
TagbarOpen	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=? TagbarToggle        call tagbar#ToggleWindow(<f-args>)$/;"	c
TagbarTogglePause	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
Terminal Name	pack/vendor/start/asyncrun.vim/README.md	/^### Terminal Name$/;"	S
Terminal Name	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Terminal Name$/;"	S
Tern	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/__init__.py	/^class Tern(Completor):$/;"	c
TestDoc	pack/vendor/start/completor.vim-master/tests/test_go.py	/^class TestDoc(object):$/;"	c
TestGetCmdInfo	pack/vendor/start/completor.vim-master/tests/test_go.py	/^class TestGetCmdInfo(object):$/;"	c
Testing	pack/vendor/start/vim-airline-master/CONTRIBUTING.md	/^# Testing$/;"	c
Testing	pack/vendor/start/vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	s
The EasyMotion project, revived!	pack/vendor/start/vim-easymotion-master/README.md	/^The EasyMotion project, revived!$/;"	c
The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)	pack/vendor/start/nerdtree-master/README.markdown	/^# The NERDTree [![Vint](https:\/\/github.com\/preservim\/nerdtree\/workflows\/Vint\/badge.svg)](/;"	c
Themes	pack/vendor/start/vim-airline-master/CONTRIBUTING.md	/^# Themes$/;"	c
Themes	pack/vendor/start/vim-airline-master/README.md	/^## Themes$/;"	s
Tips	pack/vendor/start/completor.vim-master/README.md	/^Tips$/;"	s
TokenStore	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^class TokenStore(object):$/;"	c
TroubleShooting	pack/vendor/start/auto-pairs-master/README.md	/^TroubleShooting$/;"	s
TryNormal	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^function TryNormal(str)$/;"	f
Tutorials	pack/vendor/start/asyncrun.vim/README.md	/^## Tutorials$/;"	s
Tutorials	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^## Tutorials$/;"	s
Two key highlighting	pack/vendor/start/vim-easymotion-master/README.md	/^### Two key highlighting$/;"	S
UPDATED_SOURCE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UltiSnips	pack/vendor/start/completor.vim-master/tests/conftest.py	/^class UltiSnips(object):$/;"	c
Ultisnips	pack/vendor/start/completor.vim-master/pythonx/completers/common/ultisnips.py	/^class Ultisnips(Completor):$/;"	c
Ultisnips and neosnippet	pack/vendor/start/completor.vim-master/README.md	/^#### Ultisnips and neosnippet$/;"	t
Unix	pack/vendor/start/nerdcommenter-master/README.md	/^#### Unix$/;"	t
Unlock	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Unusable	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^class Unusable(object):$/;"	c
Usage	pack/vendor/start/nerdcommenter-master/README.md	/^## Usage$/;"	s
Usage	pack/vendor/start/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Usage example for the base features	pack/vendor/start/vim-easymotion-master/README.md	/^Usage example for the base features$/;"	c
Use Tab to select completion	pack/vendor/start/completor.vim-master/README.md	/^#### Use Tab to select completion$/;"	t
Use Tab to trigger completion (disable auto trigger)	pack/vendor/start/completor.vim-master/README.md	/^#### Use Tab to trigger completion (disable auto trigger)$/;"	t
V	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> V             :call startify#set_batchmode('V')<cr>$/;"	m
VIM_FILES	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^VIM_FILES = ['placeholder.vim']$/;"	v
Variables	pack/vendor/start/asyncrun.vim/README.md	/^### Variables$/;"	S
Variables	pack/vendor/start/asyncrun.vim/doc/asyncrun.md	/^### Variables$/;"	S
Vars	pack/vendor/start/completor.vim-master/tests/conftest.py	/^class Vars(dict):$/;"	c
Via Plugin Manager (Recommended)	pack/vendor/start/nerdcommenter-master/README.md	/^### Via Plugin Manager (Recommended)$/;"	S
Vim	pack/vendor/start/completor.vim-master/tests/conftest.py	/^class Vim(object):$/;"	c
Vim motion on speed!	pack/vendor/start/vim-easymotion-master/README.md	/^Vim motion on speed!$/;"	c
Vim-Plug (https://github.com/junegunn/vim-plug)	pack/vendor/start/vim-easymotion-master/README.md	/^### Vim-Plug (https:\/\/github.com\/junegunn\/vim-plug)$/;"	S
Vim8 Native Plugin Manager (https://vimhelp.org/repeat.txt.html#packages)	pack/vendor/start/vim-easymotion-master/README.md	/^### Vim8 Native Plugin Manager (https:\/\/vimhelp.org\/repeat.txt.html#packages)$/;"	S
VimEncoder	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^class VimEncoder(json.JSONEncoder):$/;"	c
VimError	pack/vendor/start/completor.vim-master/tests/conftest.py	/^class VimError(Exception):$/;"	c
Vundle (https://github.com/gmarik/vundle)	pack/vendor/start/vim-easymotion-master/README.md	/^### Vundle (https:\/\/github.com\/gmarik\/vundle)$/;"	S
What Tagbar is	pack/vendor/start/tagbar-master/README.md	/^## What Tagbar is$/;"	s
What Tagbar is not	pack/vendor/start/tagbar-master/README.md	/^## What Tagbar is not$/;"	s
What?	pack/vendor/start/vim-gutentags/README.md	/^## What?$/;"	s
Where did the name come from?	pack/vendor/start/vim-airline-master/README.md	/^# Where did the name come from?$/;"	c
Why?	pack/vendor/start/vim-gutentags/README.md	/^## Why?$/;"	s
Windows (PowerShell)	pack/vendor/start/nerdcommenter-master/README.md	/^#### Windows (PowerShell)$/;"	t
Within line motion	pack/vendor/start/vim-easymotion-master/README.md	/^### Within line motion$/;"	S
WriteBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 WriteBookmarks call g:NERDTreeBookmark.Write()$/;"	c
Writing	pack/vendor/start/vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	s
XTabReopen	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    com! XTabReopen call airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	c
[0.10] - 2018-12-15	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.10] - 2018-12-15$/;"	s
[0.11] - 2019-11-10	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.11] - 2019-11-10$/;"	s
[0.12] - Unreleased	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.12] - Unreleased$/;"	s
[0.1] - 2013-07-17	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.1] - 2013-07-17$/;"	s
[0.2] - 2013-07-28	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.2] - 2013-07-28$/;"	s
[0.3] - 2013-08-12	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.3] - 2013-08-12$/;"	s
[0.4] - 2013-08-26	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.4] - 2013-08-26$/;"	s
[0.5] - 2013-09-13	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.5] - 2013-09-13$/;"	s
[0.6] - 2013-10-08	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.6] - 2013-10-08$/;"	s
[0.7] - 2014-12-10	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.7] - 2014-12-10$/;"	s
[0.8] - 2016-03-09	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.8] - 2016-03-09$/;"	s
[0.9] - 2018-01-15	pack/vendor/start/vim-airline-master/CHANGELOG.md	/^## [0.9] - 2018-01-15$/;"	s
[LanguageClient][57]	pack/vendor/start/vim-airline-master/README.md	/^#### [LanguageClient][57]$/;"	t
[NeoBundle](https://github.com/Shougo/neobundle.vim)	pack/vendor/start/nerdcommenter-master/README.md	/^#### [NeoBundle](https:\/\/github.com\/Shougo\/neobundle.vim)$/;"	t
[Pathogen](https://github.com/tpope/vim-pathogen)	pack/vendor/start/nerdcommenter-master/README.md	/^#### [Pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	t
[Vim-CMake][60]	pack/vendor/start/vim-airline-master/README.md	/^#### [Vim-CMake][60]$/;"	t
[Vim-Plug](https://github.com/junegunn/vim-plug)	pack/vendor/start/nerdcommenter-master/README.md	/^#### [Vim-Plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	t
[Vundle](https://github.com/VundleVim/Vundle.vim) or similar	pack/vendor/start/nerdcommenter-master/README.md	/^#### [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim) or similar$/;"	t
[csv.vim][28]	pack/vendor/start/vim-airline-master/README.md	/^#### [csv.vim][28]$/;"	t
[ctrlp.vim][10]	pack/vendor/start/vim-airline-master/README.md	/^#### [ctrlp.vim][10]$/;"	t
[ctrlspace][38]	pack/vendor/start/vim-airline-master/README.md	/^#### [ctrlspace][38]$/;"	t
[denite.nvim][51]	pack/vendor/start/vim-airline-master/README.md	/^#### [denite.nvim][51]$/;"	t
[flog][62]	pack/vendor/start/vim-airline-master/README.md	/^#### [flog][62]$/;"	t
[localsearch][54]	pack/vendor/start/vim-airline-master/README.md	/^#### [localsearch][54]$/;"	t
[promptline][36]	pack/vendor/start/vim-airline-master/README.md	/^#### [promptline][36]$/;"	t
[syntastic][5]	pack/vendor/start/vim-airline-master/README.md	/^#### [syntastic][5]$/;"	t
[tagbar][19]	pack/vendor/start/vim-airline-master/README.md	/^#### [tagbar][19]$/;"	t
[tmuxline][35]	pack/vendor/start/vim-airline-master/README.md	/^#### [tmuxline][35]$/;"	t
[unite.vim][9]	pack/vendor/start/vim-airline-master/README.md	/^#### [unite.vim][9]$/;"	t
[vim.battery][61]	pack/vendor/start/vim-airline-master/README.md	/^#### [vim.battery][61]$/;"	t
[vimagit][50]	pack/vendor/start/vim-airline-master/README.md	/^#### [vimagit][50]$/;"	t
[vimtex][53]	pack/vendor/start/vim-airline-master/README.md	/^#### [vimtex][53]$/;"	t
[virtualenv][31]	pack/vendor/start/vim-airline-master/README.md	/^#### [virtualenv][31]$/;"	t
[xkb-switch][48]/[xkb-layout][49]	pack/vendor/start/vim-airline-master/README.md	/^#### [xkb-switch][48]\/[xkb-layout][49]$/;"	t
_Vim	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^class _Vim(object):$/;"	c
__author__	pack/vendor/start/ale-master/rplugin/python3/deoplete/sources/ale.py	/^__author__ = 'Joao Paulo, w0rp'$/;"	v
__enter__	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def __enter__(self):$/;"	m	class:_ft_context
__enter__	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^    def __enter__(self):$/;"	m	class:_highlight
__exit__	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def __exit__(self, et, ev, tb):$/;"	m	class:_ft_context
__exit__	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^    def __exit__(self, et, ev, tb):$/;"	m	class:_highlight
__get__	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def __get__(self, inst, owner):$/;"	m	class:Unusable
__get__	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def __get__(self, inst, owner):$/;"	m	class:Vars
__getattr__	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^    def __getattr__(self, attr):$/;"	m	class:_Vim
__getitem__	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^        def __getitem__(self, key):$/;"	m	class:_patch_nvim.Bindeval
__init__	pack/vendor/start/ale-master/rplugin/python3/deoplete/sources/ale.py	/^        def __init__(self, vim):$/;"	m	class:Base
__init__	pack/vendor/start/ale-master/rplugin/python3/deoplete/sources/ale.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Common
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^    def __init__(self):$/;"	m	class:TokenStore
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Clang
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Lsp
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Rename
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def __init__(self, conf):$/;"	m	class:DidChangeConfiguration
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def __init__(self, ppid, workspace):$/;"	m	class:Initialize
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def __init__(self, uri):$/;"	m	class:Format
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def __init__(self, uri, language_id, version, text):$/;"	m	class:DidOpen
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def __init__(self, uri, line, offset):$/;"	m	class:Completion
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def __init__(self, uri, version, text):$/;"	m	class:DidChange
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def __init__(self, uri, version, text):$/;"	m	class:DidSave
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Jedi
__init__	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    def __init__(self, jedi):$/;"	m	class:JediProcessor
__init__	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def __init__(self):$/;"	m	class:Completor
__init__	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def __init__(self, ft, input_data):$/;"	m	class:_ft_context
__init__	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^        def __init__(self, data):$/;"	m	class:_patch_nvim.Bindeval
__init__	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^    def __init__(self, severity):$/;"	m	class:_highlight
__init__	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def __init__(self):$/;"	m	class:Vim
__init__	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def __init__(self, number, name=''):$/;"	m	class:Buffer
__new__	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def __new__(mcls, name, bases, attrs):$/;"	m	class:Meta
__new__	pack/vendor/start/completor.vim-master/tests/conftest.py	/^        def __new__(self, **kwargs):$/;"	m	class:Vim.Dictionary
__set__	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def __set__(self, inst, value):$/;"	m	class:Vars
_api	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def _api(func):$/;"	f
_arg_cache	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^_arg_cache = {}$/;"	v
_black_cmd	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    def _black_cmd(self):$/;"	m	class:Jedi
_bytes	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def _bytes(data):$/;"	f
_cached	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def _cached(f):$/;"	f
_complete_cmd	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def _complete_cmd(self):$/;"	m	class:Go
_conf	pack/vendor/start/completor.vim-master/pythonx/completor/_log.py	/^_conf = {$/;"	v
_ctx	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^_ctx = threading.local()$/;"	v
_def_cmd	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def _def_cmd(self):$/;"	m	class:Go
_dir	pack/vendor/start/completor.vim-master/pythonx/completor/_log.py	/^_dir = os.path.dirname(__file__)$/;"	v
_do_complete	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def _do_complete(self, data):$/;"	m	class:Completor
_doc_cmd	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def _doc_cmd(self):$/;"	m	class:Go
_echohl	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^    def _echohl(self, group):$/;"	m	class:_highlight
_exited	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    _exited = False$/;"	v	class:Completor
_file	pack/vendor/start/completor.vim-master/pythonx/completor/_log.py	/^_file = os.path.join(os.path.dirname(_dir), 'completor.log')$/;"	v
_format	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def _format(self):$/;"	m	class:Go
_format	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^    def _format(self):$/;"	m	class:Racer
_ft_context	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^class _ft_context(object):$/;"	c
_fzf_statusline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_gen_action_args	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def _gen_action_args(self, action, args):$/;"	m	class:Lsp
_gen_ale_completions	pack/vendor/start/completor.vim-master/pythonx/completers/ale.py	/^def _gen_ale_completions(input_data):$/;"	f
_gen_archive	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def _gen_archive(self):$/;"	m	class:Go
_gen_args	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^    def _gen_args(self):$/;"	m	class:Clang
_gen_complete_args	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^    def _gen_complete_args(self):$/;"	m	class:Clang
_gen_definition_args	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^    def _gen_definition_args(self):$/;"	m	class:Clang
_highlight	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^class _highlight(object):$/;"	c
_inject_vim_files	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def _inject_vim_files():$/;"	f
_is_comment	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    def _is_comment(self):$/;"	m	class:Jedi
_jedi_cmd	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    def _jedi_cmd(self, action):$/;"	m	class:Jedi
_load	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def _load(ft):$/;"	f
_load	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^from . import load_completer, load as _load, vim, set_current_completer, \\$/;"	x
_log_filter	pack/vendor/start/completor.vim-master/pythonx/completor/_log.py	/^_log_filter = {}$/;"	v
_pat	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^    def _pat(p):$/;"	f	function:find	file:
_patch_nvim	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def _patch_nvim(vim):$/;"	f
_path	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^    def _path(self, base):$/;"	m	class:Filename
_read_args	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def _read_args(path):$/;"	f
_resolve_ft	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def _resolve_ft(ft):$/;"	f
_shouldHidden	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^def _shouldHidden(line):$/;"	f
_snips	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def _snips(self, base, other):$/;"	m	class:UltiSnips
_statement	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    def _statement(self, c, args):$/;"	m	class:JediProcessor
_text	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def _text(ft):$/;"	m	class:_ft_context
_unicode	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def _unicode(text):$/;"	f
_utf8	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def _utf8(b):$/;"	f
_yapf_cmd	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    def _yapf_cmd(self):$/;"	m	class:Jedi
```	pack/vendor/start/nerdtree-master/README.markdown	/^```$/;"	s
`default`	pack/vendor/start/vim-airline-master/README.md	/^#### `default`$/;"	t
`jsformatter`	pack/vendor/start/vim-airline-master/README.md	/^#### `jsformatter`$/;"	t
`unique_tail_improved`	pack/vendor/start/vim-airline-master/README.md	/^#### `unique_tail_improved`$/;"	t
`unique_tail`	pack/vendor/start/vim-airline-master/README.md	/^#### `unique_tail`$/;"	t
a	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> a <NOP>$/;"	m
a	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        nmap a <Nop>$/;"	m
actual behavior	pack/vendor/start/vim-airline-master/.github/ISSUE_TEMPLATE.md	/^#### actual behavior$/;"	t
airline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^augroup airline#extensions#cursormode$/;"	a
airline	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^    augroup airline$/;"	a
airline#add_inactive_statusline_func	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name, ...)$/;"	f
airline#add_inactive_statusline_funcref	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#add_inactive_statusline_funcref(function, ...)$/;"	f
airline#add_statusline_func	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#add_statusline_func(name, ...)$/;"	f
airline#add_statusline_funcref	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#add_statusline_funcref(function, ...)$/;"	f
airline#async#get_mq_async	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! airline#async#get_mq_async(cmd, file)$/;"	f
airline#async#get_msgfmt_stat	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! airline#async#get_msgfmt_stat(cmd, file)$/;"	f
airline#async#mq_output	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! airline#async#mq_output(buf, file)$/;"	f
airline#async#nvim_get_mq_async	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! airline#async#nvim_get_mq_async(cmd, file)$/;"	f
airline#async#nvim_get_msgfmt_stat	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! airline#async#nvim_get_msgfmt_stat(cmd, file)$/;"	f
airline#async#nvim_vcs_clean	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! airline#async#nvim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#nvim_vcs_untracked	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! airline#async#nvim_vcs_untracked(cfg, file, vcs)$/;"	f
airline#async#vcs_clean	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! airline#async#vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vcs_untracked	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! airline#async#vcs_untracked(config, file, vcs)$/;"	f
airline#async#vim7_vcs_clean	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! airline#async#vim7_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_clean	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_untracked	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_untracked(config, file)$/;"	f
airline#builder#get_next_group	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! airline#builder#get_next_group(sections, i)$/;"	f
airline#builder#get_prev_group	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! airline#builder#get_prev_group(sections, i)$/;"	f
airline#builder#new	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#builder#should_change_group	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! airline#builder#should_change_group(group1, group2)$/;"	f
airline#check_mode	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	pack/vendor/start/vim-airline-master/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	pack/vendor/start/vim-airline-master/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	pack/vendor/start/vim-airline-master/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#extensions#ale#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get(type)$/;"	f
airline#extensions#ale#get_error	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_error()$/;"	f
airline#extensions#ale#get_warning	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warning()$/;"	f
airline#extensions#ale#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
airline#extensions#append_to_section	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#battery#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#init(ext) abort$/;"	f
airline#extensions#battery#status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#status(...) abort$/;"	f
airline#extensions#bookmark#currentbookmark	pack/vendor/start/vim-airline-master/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#currentbookmark() abort$/;"	f
airline#extensions#bookmark#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#init(ext) abort$/;"	f
airline#extensions#branch#get_head	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#branch#update_untracked_config	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#update_untracked_config(file, vcs)$/;"	f
airline#extensions#bufferline#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#coc#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get(type) abort$/;"	f
airline#extensions#coc#get_current_function	pack/vendor/start/vim-airline-master/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_current_function() abort$/;"	f
airline#extensions#coc#get_error	pack/vendor/start/vim-airline-master/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_error() abort$/;"	f
airline#extensions#coc#get_status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_status() abort$/;"	f
airline#extensions#coc#get_warning	pack/vendor/start/vim-airline-master/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_warning() abort$/;"	f
airline#extensions#coc#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#init(ext) abort$/;"	f
airline#extensions#commandt#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	pack/vendor/start/vim-airline-master/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext) abort$/;"	f
airline#extensions#ctrlspace#statusline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...) abort$/;"	f
airline#extensions#cursormode#activate	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#activate()$/;"	f
airline#extensions#cursormode#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#apply(...)$/;"	f
airline#extensions#cursormode#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#init(ext)$/;"	f
airline#extensions#cursormode#set	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#set(...)$/;"	f
airline#extensions#cursormode#tmux_escape	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#tmux_escape(escape)$/;"	f
airline#extensions#default#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context) abort$/;"	f
airline#extensions#denite#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#apply(...) abort$/;"	f
airline#extensions#denite#check_denite_mode	pack/vendor/start/vim-airline-master/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#check_denite_mode(bufnr) abort$/;"	f
airline#extensions#denite#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#init(ext) abort$/;"	f
airline#extensions#dirvish#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#apply(...) abort$/;"	f
airline#extensions#dirvish#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#init(ext) abort$/;"	f
airline#extensions#eclim#creat_line	pack/vendor/start/vim-airline-master/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	pack/vendor/start/vim-airline-master/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	pack/vendor/start/vim-airline-master/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#fern#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#apply(...) abort$/;"	f
airline#extensions#fern#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#init(ext) abort$/;"	f
airline#extensions#fugitiveline#bufname	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#bufname() abort$/;"	f
airline#extensions#fugitiveline#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#init(ext) abort$/;"	f
airline#extensions#fzf#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#apply(...) abort$/;"	f
airline#extensions#fzf#inactive_apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#inactive_apply(...) abort$/;"	f
airline#extensions#fzf#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#init(ext) abort$/;"	f
airline#extensions#fzf#statusline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#statusline(...) abort$/;"	f
airline#extensions#gen_tags#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#init(ext) abort$/;"	f
airline#extensions#gen_tags#status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#status(...) abort$/;"	f
airline#extensions#get_loaded_extensions	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! airline#extensions#get_loaded_extensions()$/;"	f
airline#extensions#gina#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#apply(...) abort$/;"	f
airline#extensions#gina#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#init(ext) abort$/;"	f
airline#extensions#grepper#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#init(ext)$/;"	f
airline#extensions#grepper#status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#status()$/;"	f
airline#extensions#gutentags#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#init(ext)$/;"	f
airline#extensions#gutentags#status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#status()$/;"	f
airline#extensions#hunks#get_hunks	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks() abort$/;"	f
airline#extensions#hunks#get_raw_hunks	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_raw_hunks() abort$/;"	f
airline#extensions#hunks#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext) abort$/;"	f
airline#extensions#keymap#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#init(ext)$/;"	f
airline#extensions#keymap#status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#status()$/;"	f
airline#extensions#languageclient#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get(type)$/;"	f
airline#extensions#languageclient#get_error	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_error()$/;"	f
airline#extensions#languageclient#get_warning	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_warning()$/;"	f
airline#extensions#languageclient#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#init(ext)$/;"	f
airline#extensions#load	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#localsearch#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#apply(...) abort$/;"	f
airline#extensions#localsearch#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#init(ext) abort$/;"	f
airline#extensions#localsearch#load_theme	pack/vendor/start/vim-airline-master/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#load_theme(palette) abort$/;"	f
airline#extensions#lsp#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get(type) abort$/;"	f
airline#extensions#lsp#get_error	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_error() abort$/;"	f
airline#extensions#lsp#get_warning	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_warning() abort$/;"	f
airline#extensions#lsp#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#init(ext) abort$/;"	f
airline#extensions#lsp#progress	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#progress() abort$/;"	f
airline#extensions#lsp#update	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#update() abort$/;"	f
airline#extensions#neomake#get_errors	pack/vendor/start/vim-airline-master/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#get_warnings	pack/vendor/start/vim-airline-master/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
airline#extensions#netrw#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	pack/vendor/start/vim-airline-master/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#nvimlsp#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get(type) abort$/;"	f
airline#extensions#nvimlsp#get_error	pack/vendor/start/vim-airline-master/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_error() abort$/;"	f
airline#extensions#nvimlsp#get_warning	pack/vendor/start/vim-airline-master/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_warning() abort$/;"	f
airline#extensions#nvimlsp#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#init(ext) abort$/;"	f
airline#extensions#obsession#get_status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
airline#extensions#obsession#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#omnisharp#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#init(ext) abort$/;"	f
airline#extensions#omnisharp#server_status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#server_status(...) abort$/;"	f
airline#extensions#po#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
airline#extensions#po#on_winenter	pack/vendor/start/vim-airline-master/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#on_winenter()$/;"	f
airline#extensions#po#shorten	pack/vendor/start/vim-airline-master/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#shorten()$/;"	f
airline#extensions#po#stats	pack/vendor/start/vim-airline-master/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#poetv#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#apply(...)$/;"	f
airline#extensions#poetv#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#init(ext)$/;"	f
airline#extensions#poetv#update	pack/vendor/start/vim-airline-master/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#update()$/;"	f
airline#extensions#prepend_to_section	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	pack/vendor/start/vim-airline-master/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#get_type	pack/vendor/start/vim-airline-master/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#get_type()$/;"	f
airline#extensions#quickfix#inactive_qf_window	pack/vendor/start/vim-airline-master/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#rufo#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/rufo.vim	/^function! airline#extensions#rufo#apply(...)$/;"	f
airline#extensions#rufo#get_status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/rufo.vim	/^function! airline#extensions#rufo#get_status()$/;"	f
airline#extensions#rufo#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/rufo.vim	/^function! airline#extensions#rufo#init(ext)$/;"	f
airline#extensions#scrollbar#calculate	pack/vendor/start/vim-airline-master/autoload/airline/extensions/scrollbar.vim	/^function! airline#extensions#scrollbar#calculate() abort$/;"	f
airline#extensions#scrollbar#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/scrollbar.vim	/^function! airline#extensions#scrollbar#init(ext) abort$/;"	f
airline#extensions#searchcount#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#apply(...) abort$/;"	f
airline#extensions#searchcount#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#init(ext) abort$/;"	f
airline#extensions#searchcount#status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#status() abort$/;"	f
airline#extensions#syntastic#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get(type)$/;"	f
airline#extensions#syntastic#get_error	pack/vendor/start/vim-airline-master/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_error()$/;"	f
airline#extensions#syntastic#get_warning	pack/vendor/start/vim-airline-master/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warning()$/;"	f
airline#extensions#syntastic#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#add_label	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_label(dict, type, right)$/;"	f
airline#extensions#tabline#add_tab_label	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_tab_label(dict)$/;"	f
airline#extensions#tabline#autoshow#off	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#clickbuf	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
airline#extensions#tabline#buffers#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#clean	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#clean()$/;"	f
airline#extensions#tabline#buflist#invalidate	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#builder#new	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^function! airline#extensions#tabline#builder#new(context)$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pul/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#off	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#enable	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#enable()$/;"	f
airline#extensions#tabline#formatters#default#format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/formatters/default.vim	/^  function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/formatters/default.vim	/^  function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#jsformatter#format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/formatters/jsformatter.vim	/^function! airline#extensions#tabline#formatters#jsformatter#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#short_path#format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/formatters/short_path.vim	/^function! airline#extensions#tabline#formatters#short_path#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#tabnr#format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/formatters/tabnr.vim	/^function! airline#extensions#tabline#formatters#tabnr#format(tab_nr_type, nr)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#group_of_bufnr	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#redraw	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#redraw()$/;"	f
airline#extensions#tabline#tabs#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#map_keys	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#off	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#tabs#tabnr_formatter	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#tabnr_formatter(nr, i) abort$/;"	f
airline#extensions#tabline#tabws#add_buffer_section	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_buffer_section(builder, cur_tab, cur_buf, pull_ri/;"	f
airline#extensions#tabline#tabws#add_tab_section	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#tabws#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#get()$/;"	f
airline#extensions#tabline#tabws#invalidate	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#invalidate()$/;"	f
airline#extensions#tabline#tabws#off	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#off()$/;"	f
airline#extensions#tabline#tabws#on	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#on()$/;"	f
airline#extensions#tabline#title	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tabline#xtabline#filter_buffers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#filter_buffers()$/;"	f
airline#extensions#tabline#xtabline#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#init()$/;"	f
airline#extensions#tabline#xtabline#maps	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#maps()$/;"	f
airline#extensions#tabline#xtabline#next_buffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#next_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#prev_buffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#prev_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#reopen_last_tab	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	f
airline#extensions#tabline#xtabline#select_buffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#select_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#toggle_buffers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_buffers()$/;"	f
airline#extensions#tabline#xtabline#toggle_tabs	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_tabs()$/;"	f
airline#extensions#tabline#xtabline#update_obsession	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#update_obsession()$/;"	f
airline#extensions#tagbar#currenttag	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#taglist#currenttag	pack/vendor/start/vim-airline-master/autoload/airline/extensions/taglist.vim	/^function! airline#extensions#taglist#currenttag()$/;"	f
airline#extensions#taglist#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/taglist.vim	/^function! airline#extensions#taglist#init(ext)$/;"	f
airline#extensions#term#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#apply(...) abort$/;"	f
airline#extensions#term#inactive_apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#inactive_apply(...) abort$/;"	f
airline#extensions#term#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#init(ext) abort$/;"	f
airline#extensions#term#termmode	pack/vendor/start/vim-airline-master/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#termmode() abort$/;"	f
airline#extensions#tmuxline#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unicode#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#unite#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#vim9lsp#get_errors	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vim9lsp.vim	/^function! airline#extensions#vim9lsp#get_errors() abort$/;"	f
airline#extensions#vim9lsp#get_warnings	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vim9lsp.vim	/^function! airline#extensions#vim9lsp#get_warnings() abort$/;"	f
airline#extensions#vim9lsp#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vim9lsp.vim	/^function! airline#extensions#vim9lsp#init(ext) abort$/;"	f
airline#extensions#vimagit#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#apply(...) abort$/;"	f
airline#extensions#vimagit#get_mode	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#get_mode() abort$/;"	f
airline#extensions#vimagit#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#init(ext) abort$/;"	f
airline#extensions#vimcmake#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#apply(...) abort$/;"	f
airline#extensions#vimcmake#inactive_apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#inactive_apply(...) abort$/;"	f
airline#extensions#vimcmake#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#init(ext) abort$/;"	f
airline#extensions#vimtex#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#apply(...)$/;"	f
airline#extensions#vimtex#get_scope	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#get_scope()$/;"	f
airline#extensions#vimtex#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#init(ext)$/;"	f
airline#extensions#virtualenv#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#update	pack/vendor/start/vim-airline-master/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
airline#extensions#vista#currenttag	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#currenttag() abort$/;"	f
airline#extensions#vista#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#init(ext) abort$/;"	f
airline#extensions#whitespace#check	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#disable	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#disable()$/;"	f
airline#extensions#whitespace#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#wordcount#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#formatters#default#to_string	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#to_string(wordcount)$/;"	f
airline#extensions#wordcount#formatters#default#update_fmt	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#update_fmt(...)$/;"	f
airline#extensions#wordcount#formatters#readingtime#to_string	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#to_string(wordcount) abort$/;"	f
airline#extensions#wordcount#formatters#readingtime#update_fmt	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#update_fmt(...) abort$/;"	f
airline#extensions#wordcount#get	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^function airline#extensions#wordcount#get()$/;"	f
airline#extensions#wordcount#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
airline#extensions#xkblayout#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#init(ext)$/;"	f
airline#extensions#xkblayout#status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#status()$/;"	f
airline#extensions#ycm#get_error_count	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count() abort$/;"	f
airline#extensions#ycm#get_warning_count	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
airline#extensions#ycm#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#extensions#zoomwintab#apply	pack/vendor/start/vim-airline-master/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#apply(...) abort$/;"	f
airline#extensions#zoomwintab#init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#init(ext) abort$/;"	f
airline#formatter#short_path#format	pack/vendor/start/vim-airline-master/autoload/airline/formatter/short_path.vim	/^function! airline#formatter#short_path#format(val) abort$/;"	f
airline#highlighter#add_accent	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! airline#highlighter#add_accent(accent) abort$/;"	f
airline#highlighter#add_separator	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! airline#highlighter#add_separator(from, to, inverse) abort$/;"	f
airline#highlighter#exec	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! airline#highlighter#exec(group, colors) abort$/;"	f
airline#highlighter#get_highlight	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! airline#highlighter#get_highlight(group, ...) abort$/;"	f
airline#highlighter#get_highlight2	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! airline#highlighter#get_highlight2(fg, bg, ...) abort$/;"	f
airline#highlighter#highlight	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! airline#highlighter#highlight(modes, ...) abort$/;"	f
airline#highlighter#highlight_modified_inactive	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! airline#highlighter#highlight_modified_inactive(bufnr) abort$/;"	f
airline#highlighter#load_theme	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! airline#highlighter#load_theme() abort$/;"	f
airline#highlighter#reset_hlcache	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! airline#highlighter#reset_hlcache() abort$/;"	f
airline#init#bootstrap	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#sections	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#mode_changed	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#mode_changed()$/;"	f
airline#msdos#round_msdos_colors	pack/vendor/start/vim-airline-master/autoload/airline/msdos.vim	/^	function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
airline#parts#crypt	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#define	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#spell	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#remove_statusline_func	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	pack/vendor/start/vim-airline-master/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	pack/vendor/start/vim-airline-master/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	pack/vendor/start/vim-airline-master/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#switch_theme(name, ...)$/;"	f
airline#themes#generate_color_map	pack/vendor/start/vim-airline-master/autoload/airline/themes.vim	/^  function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	pack/vendor/start/vim-airline-master/autoload/airline/themes.vim	/^  function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	pack/vendor/start/vim-airline-master/autoload/airline/themes.vim	/^  function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#patch	pack/vendor/start/vim-airline-master/autoload/airline/themes.vim	/^  function! airline#themes#patch(palette)$/;"	f
airline#update_statusline	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#update_statusline_focuslost	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#update_statusline_focuslost()$/;"	f
airline#update_statusline_inactive	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#update_statusline_inactive(range)$/;"	f
airline#update_tabline	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! airline#update_tabline()$/;"	f
airline#util#append	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#doautocmd	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#doautocmd(event)$/;"	f
airline#util#exec_funcrefs	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getbufvar	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^  function! airline#util#getbufvar(bufnr, key, def)$/;"	f
airline#util#getwinvar	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#has_custom_scm	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#has_custom_scm()$/;"	f
airline#util#has_fugitive	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#has_fugitive()$/;"	f
airline#util#has_gina	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#has_gina()$/;"	f
airline#util#has_lawrencium	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#has_lawrencium()$/;"	f
airline#util#has_vcscommand	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#has_vcscommand()$/;"	f
airline#util#has_vim9_script	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#has_vim9_script()$/;"	f
airline#util#ignore_buf	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#ignore_buf(name)$/;"	f
airline#util#ignore_next_focusgain	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#ignore_next_focusgain()$/;"	f
airline#util#is_popup_window	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#is_popup_window(winnr)$/;"	f
airline#util#prepend	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#shorten	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth, ...)$/;"	f
airline#util#stl_disabled	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#stl_disabled(winnr)$/;"	f
airline#util#strcharpart	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#strcharpart(...)$/;"	f
airline#util#strchars	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#strchars(str)$/;"	f
airline#util#themes	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#themes(match)$/;"	f
airline#util#try_focusgained	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#try_focusgained()$/;"	f
airline#util#warning	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#winwidth	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#winwidth(...) abort$/;"	f
airline#util#wrap	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_ale	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^  augroup airline_ale$/;"	a
airline_languageclient	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^  augroup airline_languageclient$/;"	a
airline_lsp_progress	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^  augroup airline_lsp_progress$/;"	a
airline_omnisharp	pack/vendor/start/vim-airline-master/autoload/airline/extensions/omnisharp.vim	/^  augroup airline_omnisharp$/;"	a
airline_tabline_autoshow	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/autoshow.vim	/^  augroup airline_tabline_autoshow$/;"	a
airline_tabline_buffers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^  augroup airline_tabline_buffers$/;"	a
airline_tabline_ctrlspace	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^  augroup airline_tabline_ctrlspace$/;"	a
airline_tabline_tabs	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^  augroup airline_tabline_tabs$/;"	a
airline_tabline_tabws	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^  augroup airline_tabline_tabws$/;"	a
airline_whitespace	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^    augroup airline_whitespace$/;"	a
airline_whitespace	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^  augroup airline_whitespace$/;"	a
ale#Env	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#Env(variable_name, value) abort$/;"	f
ale#Escape	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#Escape(str) abort$/;"	f
ale#FileTooLarge	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#FileTooLarge(buffer) abort$/;"	f
ale#GetFilenameMappings	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#GetFilenameMappings(buffer, name) abort$/;"	f
ale#GetLocItemMessage	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#GetLocItemMessage(item, format_string) abort$/;"	f
ale#Has	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#Has(feature) abort$/;"	f
ale#Pad	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#Pad(string) abort$/;"	f
ale#Queue	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#Queue(delay, ...) abort$/;"	f
ale#Set	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#Set(variable_name, default) abort$/;"	f
ale#ShouldDoNothing	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#ShouldDoNothing(buffer) abort$/;"	f
ale#Var	pack/vendor/start/ale-master/autoload/ale.vim	/^function! ale#Var(buffer, variable_name) abort$/;"	f
ale#ant#BuildClasspathCommand	pack/vendor/start/ale-master/autoload/ale/ant.vim	/^function! ale#ant#BuildClasspathCommand(buffer) abort$/;"	f
ale#ant#FindExecutable	pack/vendor/start/ale-master/autoload/ale/ant.vim	/^function! ale#ant#FindExecutable(buffer) abort$/;"	f
ale#ant#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/ant.vim	/^function! ale#ant#FindProjectRoot(buffer) abort$/;"	f
ale#args#Parse	pack/vendor/start/ale-master/autoload/ale/args.vim	/^function! ale#args#Parse(arg_list, string) abort$/;"	f
ale#assert#Fixer	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#Fixer(expected_result) abort$/;"	f
ale#assert#FixerCwd	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#FixerCwd(expected_cwd) abort$/;"	f
ale#assert#FixerNotExecuted	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#FixerNotExecuted() abort$/;"	f
ale#assert#GivenCommandOutput	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#GivenCommandOutput(...) abort$/;"	f
ale#assert#LSPAddress	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#LSPAddress(expected_address) abort$/;"	f
ale#assert#LSPConfig	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#LSPConfig(expected_config) abort$/;"	f
ale#assert#LSPLanguage	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#LSPLanguage(expected_language) abort$/;"	f
ale#assert#LSPOptions	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#LSPOptions(expected_options) abort$/;"	f
ale#assert#LSPProject	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#LSPProject(expected_root) abort$/;"	f
ale#assert#Linter	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#Linter(expected_executable, expected_command) abort$/;"	f
ale#assert#LinterCwd	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#LinterCwd(expected_cwd) abort$/;"	f
ale#assert#LinterNotExecuted	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#LinterNotExecuted() abort$/;"	f
ale#assert#ResetVariables	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#ResetVariables(filetype, name, ...) abort$/;"	f
ale#assert#SetUpFixerTest	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTest(filetype, name, ...) abort$/;"	f
ale#assert#SetUpFixerTestCommands	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTestCommands() abort$/;"	f
ale#assert#SetUpLinterTest	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTest(filetype, name) abort$/;"	f
ale#assert#SetUpLinterTestCommands	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTestCommands() abort$/;"	f
ale#assert#TearDownFixerTest	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#TearDownFixerTest() abort$/;"	f
ale#assert#TearDownLinterTest	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! ale#assert#TearDownLinterTest() abort$/;"	f
ale#balloon#Disable	pack/vendor/start/ale-master/autoload/ale/balloon.vim	/^function! ale#balloon#Disable() abort$/;"	f
ale#balloon#Enable	pack/vendor/start/ale-master/autoload/ale/balloon.vim	/^function! ale#balloon#Enable() abort$/;"	f
ale#balloon#Expr	pack/vendor/start/ale-master/autoload/ale/balloon.vim	/^function! ale#balloon#Expr() abort$/;"	f
ale#balloon#MessageForPos	pack/vendor/start/ale-master/autoload/ale/balloon.vim	/^function! ale#balloon#MessageForPos(bufnr, lnum, col) abort$/;"	f
ale#c#ExpandAtArgs	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#ExpandAtArgs(path_prefix, raw_split_lines) abort$/;"	f
ale#c#FindCompileCommands	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#FindCompileCommands(buffer) abort$/;"	f
ale#c#FindLocalHeaderPaths	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#FindLocalHeaderPaths(buffer) abort$/;"	f
ale#c#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#FindProjectRoot(buffer) abort$/;"	f
ale#c#FlagsFromCompileCommands	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#FlagsFromCompileCommands(buffer, compile_commands_file) abort$/;"	f
ale#c#GetBuildDirectory	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#GetBuildDirectory(buffer) abort$/;"	f
ale#c#GetCFlags	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#GetCFlags(buffer, output) abort$/;"	f
ale#c#GetLanguageFlag	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#GetLanguageFlag(buffer, header_exts, linter_lang) abort$/;"	f
ale#c#GetMakeCommand	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#GetMakeCommand(buffer) abort$/;"	f
ale#c#IncludeOptions	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#IncludeOptions(include_paths) abort$/;"	f
ale#c#ParseCFlags	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#ParseCFlags(path_prefix, should_quote, raw_arguments) abort$/;"	f
ale#c#ParseCFlagsFromMakeOutput	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#ParseCFlagsFromMakeOutput(buffer, make_output) abort$/;"	f
ale#c#ParseCompileCommandsFlags	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#ParseCompileCommandsFlags(buffer, file_lookup, dir_lookup) abort$/;"	f
ale#c#QuoteArg	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#QuoteArg(arg) abort$/;"	f
ale#c#ResetCompileCommandsCache	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#ResetCompileCommandsCache() abort$/;"	f
ale#c#RunMakeCommand	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#RunMakeCommand(buffer, Callback) abort$/;"	f
ale#c#ShellSplit	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! ale#c#ShellSplit(line) abort$/;"	f
ale#code_action#ApplyChanges	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! ale#code_action#ApplyChanges(filename, changes, options) abort$/;"	f
ale#code_action#BuildChangesList	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! ale#code_action#BuildChangesList(changes_map) abort$/;"	f
ale#code_action#DisablePopUpMenu	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! ale#code_action#DisablePopUpMenu() abort$/;"	f
ale#code_action#EnablePopUpMenu	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! ale#code_action#EnablePopUpMenu() abort$/;"	f
ale#code_action#GetChanges	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! ale#code_action#GetChanges(workspace_edit) abort$/;"	f
ale#code_action#GetCodeActions	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! ale#code_action#GetCodeActions(options) abort$/;"	f
ale#code_action#HandleCodeAction	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! ale#code_action#HandleCodeAction(code_action, options) abort$/;"	f
ale#code_action#ReloadBuffer	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! ale#code_action#ReloadBuffer() abort$/;"	f
ale#codefix#ApplyLSPCodeAction	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! ale#codefix#ApplyLSPCodeAction(data, item) abort$/;"	f
ale#codefix#ApplyTSServerCodeAction	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! ale#codefix#ApplyTSServerCodeAction(data, item) abort$/;"	f
ale#codefix#ClearLSPData	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! ale#codefix#ClearLSPData() abort$/;"	f
ale#codefix#Execute	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! ale#codefix#Execute(range, ...) abort$/;"	f
ale#codefix#GetMap	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! ale#codefix#GetMap() abort$/;"	f
ale#codefix#HandleLSPResponse	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! ale#codefix#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#codefix#HandleTSServerResponse	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! ale#codefix#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#codefix#SetMap	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! ale#codefix#SetMap(map) abort$/;"	f
ale#command#CdString	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#CdString(directory) abort$/;"	f
ale#command#ClearData	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#ClearData() abort$/;"	f
ale#command#CreateDirectory	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#CreateDirectory(buffer) abort$/;"	f
ale#command#CreateFile	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#CreateFile(buffer) abort$/;"	f
ale#command#CreateTempFile	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#CreateTempFile(buffer, temporary_file, input) abort$/;"	f
ale#command#EscapeCommandPart	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#EscapeCommandPart(command_part) abort$/;"	f
ale#command#FormatCommand	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#FormatCommand($/;"	f
ale#command#GetData	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#GetData() abort$/;"	f
ale#command#InitData	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#InitData(buffer) abort$/;"	f
ale#command#IsDeferred	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#IsDeferred(value) abort$/;"	f
ale#command#ManageDirectory	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#ManageDirectory(buffer, directory) abort$/;"	f
ale#command#ManageFile	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#ManageFile(buffer, file) abort$/;"	f
ale#command#RemoveManagedFiles	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#RemoveManagedFiles(buffer) abort$/;"	f
ale#command#ResetCwd	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#ResetCwd(buffer) abort$/;"	f
ale#command#Run	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#Run(buffer, command, Callback, ...) abort$/;"	f
ale#command#SetCwd	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#SetCwd(buffer, cwd) abort$/;"	f
ale#command#StopJobs	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! ale#command#StopJobs(buffer, job_type) abort$/;"	f
ale#completion#AutomaticOmniFunc	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#AutomaticOmniFunc(findstart, base) abort$/;"	f
ale#completion#CanProvideCompletions	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#CanProvideCompletions() abort$/;"	f
ale#completion#Disable	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#Disable() abort$/;"	f
ale#completion#Done	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#Done() abort$/;"	f
ale#completion#Enable	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#Enable() abort$/;"	f
ale#completion#Filter	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#Filter($/;"	f
ale#completion#GetAllTriggers	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#GetAllTriggers() abort$/;"	f
ale#completion#GetCompletionKind	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionKind(kind) abort$/;"	f
ale#completion#GetCompletionPosition	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionPosition() abort$/;"	f
ale#completion#GetCompletionPositionForDeoplete	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionPositionForDeoplete(input) abort$/;"	f
ale#completion#GetCompletionResult	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionResult() abort$/;"	f
ale#completion#GetCompletionSymbols	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionSymbols(kind) abort$/;"	f
ale#completion#GetCompletions	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#GetCompletions(...) abort$/;"	f
ale#completion#GetPrefix	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#GetPrefix(filetype, line, column) abort$/;"	f
ale#completion#GetTriggerCharacter	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#GetTriggerCharacter(filetype, prefix) abort$/;"	f
ale#completion#HandleLSPResponse	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#completion#HandleTSServerResponse	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#completion#HandleUserData	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#HandleUserData(completed_item) abort$/;"	f
ale#completion#Import	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#Import() abort$/;"	f
ale#completion#NullFilter	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#NullFilter(buffer, item) abort$/;"	f
ale#completion#OmniFunc	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#OmniFunc(findstart, base) abort$/;"	f
ale#completion#ParseLSPCompletions	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#ParseLSPCompletions(response) abort$/;"	f
ale#completion#ParseTSServerCompletionEntryDetails	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletionEntryDetails(response) abort$/;"	f
ale#completion#ParseTSServerCompletions	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletions(response) abort$/;"	f
ale#completion#Queue	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#Queue() abort$/;"	f
ale#completion#RestoreCompletionOptions	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#RestoreCompletionOptions() abort$/;"	f
ale#completion#Show	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#Show(result) abort$/;"	f
ale#completion#StopTimer	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! ale#completion#StopTimer() abort$/;"	f
ale#completion#python#CompletionItemFilter	pack/vendor/start/ale-master/autoload/ale/completion/python.vim	/^function! ale#completion#python#CompletionItemFilter(buffer, item) abort$/;"	f
ale#cursor#EchoCursorWarning	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarning(...) abort$/;"	f
ale#cursor#EchoCursorWarningWithDelay	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarningWithDelay() abort$/;"	f
ale#cursor#Echom	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^function! ale#cursor#Echom(message) abort$/;"	f
ale#cursor#ShowCursorDetail	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^function! ale#cursor#ShowCursorDetail() abort$/;"	f
ale#cursor#TruncatedEcho	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^function! ale#cursor#TruncatedEcho(original_message) abort$/;"	f
ale#d#FindDUBConfig	pack/vendor/start/ale-master/autoload/ale/d.vim	/^function! ale#d#FindDUBConfig(buffer) abort$/;"	f
ale#debugging#Info	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! ale#debugging#Info() abort$/;"	f
ale#debugging#InfoToClipboard	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToClipboard() abort$/;"	f
ale#debugging#InfoToFile	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToFile(filename) abort$/;"	f
ale#definition#ClearLSPData	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#ClearLSPData() abort$/;"	f
ale#definition#GetMap	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#GetMap() abort$/;"	f
ale#definition#GoTo	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#GoTo(options) abort$/;"	f
ale#definition#GoToCommandHandler	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#GoToCommandHandler(command, ...) abort$/;"	f
ale#definition#GoToImpl	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#GoToImpl(options) abort$/;"	f
ale#definition#GoToType	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#GoToType(options) abort$/;"	f
ale#definition#HandleLSPResponse	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#definition#HandleTSServerResponse	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#definition#SetMap	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#SetMap(map) abort$/;"	f
ale#definition#UpdateTagStack	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! ale#definition#UpdateTagStack() abort$/;"	f
ale#dhall#GetCommand	pack/vendor/start/ale-master/autoload/ale/dhall.vim	/^function! ale#dhall#GetCommand(buffer) abort$/;"	f
ale#dhall#GetExecutable	pack/vendor/start/ale-master/autoload/ale/dhall.vim	/^function! ale#dhall#GetExecutable(buffer) abort$/;"	f
ale#dhall#GetExecutableWithOptions	pack/vendor/start/ale-master/autoload/ale/dhall.vim	/^function! ale#dhall#GetExecutableWithOptions(buffer) abort$/;"	f
ale#engine#Cleanup	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#Cleanup(buffer) abort$/;"	f
ale#engine#CleanupEveryBuffer	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#CleanupEveryBuffer() abort$/;"	f
ale#engine#EscapeCommandPart	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#EscapeCommandPart(command_part) abort$/;"	f
ale#engine#FixLocList	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#FixLocList(buffer, linter_name, from_other_source, loclist) abort$/;"	f
ale#engine#GetLoclist	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#GetLoclist(buffer) abort$/;"	f
ale#engine#HandleLoclist	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#HandleLoclist(linter_name, buffer, loclist, from_other_source) abort$/;"	f
ale#engine#InitBufferInfo	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#InitBufferInfo(buffer) abort$/;"	f
ale#engine#IsCheckingBuffer	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#IsCheckingBuffer(buffer) abort$/;"	f
ale#engine#IsExecutable	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#IsExecutable(buffer, executable) abort$/;"	f
ale#engine#MarkLinterActive	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterActive(info, linter) abort$/;"	f
ale#engine#MarkLinterInactive	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterInactive(info, linter_name) abort$/;"	f
ale#engine#ResetExecutableCache	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#ResetExecutableCache() abort$/;"	f
ale#engine#RunLinters	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#RunLinters(buffer, linters, should_lint_file) abort$/;"	f
ale#engine#SetResults	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#SetResults(buffer, loclist) abort$/;"	f
ale#engine#Stop	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! ale#engine#Stop(buffer) abort$/;"	f
ale#engine#ignore#Exclude	pack/vendor/start/ale-master/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#Exclude(filetype, all_linters, config, disable_lsp) abort$/;"	f
ale#engine#ignore#GetList	pack/vendor/start/ale-master/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#GetList(filetype, config) abort$/;"	f
ale#events#ClockMilliseconds	pack/vendor/start/ale-master/autoload/ale/events.vim	/^function! ale#events#ClockMilliseconds() abort$/;"	f
ale#events#FileChangedEvent	pack/vendor/start/ale-master/autoload/ale/events.vim	/^function! ale#events#FileChangedEvent(buffer) abort$/;"	f
ale#events#FileTypeEvent	pack/vendor/start/ale-master/autoload/ale/events.vim	/^function! ale#events#FileTypeEvent(buffer, new_filetype) abort$/;"	f
ale#events#Init	pack/vendor/start/ale-master/autoload/ale/events.vim	/^function! ale#events#Init() abort$/;"	f
ale#events#LintOnEnter	pack/vendor/start/ale-master/autoload/ale/events.vim	/^function! ale#events#LintOnEnter(buffer) abort$/;"	f
ale#events#QuitEvent	pack/vendor/start/ale-master/autoload/ale/events.vim	/^function! ale#events#QuitEvent(buffer) abort$/;"	f
ale#events#QuitRecently	pack/vendor/start/ale-master/autoload/ale/events.vim	/^function! ale#events#QuitRecently(buffer) abort$/;"	f
ale#events#ReadOrEnterEvent	pack/vendor/start/ale-master/autoload/ale/events.vim	/^function! ale#events#ReadOrEnterEvent(buffer) abort$/;"	f
ale#events#SaveEvent	pack/vendor/start/ale-master/autoload/ale/events.vim	/^function! ale#events#SaveEvent(buffer) abort$/;"	f
ale#filename_mapping#Invert	pack/vendor/start/ale-master/autoload/ale/filename_mapping.vim	/^function! ale#filename_mapping#Invert(filename_mappings) abort$/;"	f
ale#filename_mapping#Map	pack/vendor/start/ale-master/autoload/ale/filename_mapping.vim	/^function! ale#filename_mapping#Map(filename, filename_mappings) abort$/;"	f
ale#filerename#ClearLSPData	pack/vendor/start/ale-master/autoload/ale/filerename.vim	/^function! ale#filerename#ClearLSPData() abort$/;"	f
ale#filerename#Execute	pack/vendor/start/ale-master/autoload/ale/filerename.vim	/^function! ale#filerename#Execute() abort$/;"	f
ale#filerename#GetMap	pack/vendor/start/ale-master/autoload/ale/filerename.vim	/^function! ale#filerename#GetMap() abort$/;"	f
ale#filerename#HandleTSServerResponse	pack/vendor/start/ale-master/autoload/ale/filerename.vim	/^function! ale#filerename#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#filerename#SetMap	pack/vendor/start/ale-master/autoload/ale/filerename.vim	/^function! ale#filerename#SetMap(map) abort$/;"	f
ale#filetypes#GuessExtension	pack/vendor/start/ale-master/autoload/ale/filetypes.vim	/^function! ale#filetypes#GuessExtension(filetype) abort$/;"	f
ale#filetypes#LoadExtensionMap	pack/vendor/start/ale-master/autoload/ale/filetypes.vim	/^function! ale#filetypes#LoadExtensionMap() abort$/;"	f
ale#fix#ApplyFixes	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! ale#fix#ApplyFixes(buffer, output) abort$/;"	f
ale#fix#ApplyQueuedFixes	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! ale#fix#ApplyQueuedFixes(buffer) abort$/;"	f
ale#fix#Fix	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! ale#fix#Fix(buffer, fixing_flag, ...) abort$/;"	f
ale#fix#InitBufferData	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! ale#fix#InitBufferData(buffer, fixing_flag) abort$/;"	f
ale#fix#registry#Add	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Add(name, func, filetypes, desc, ...) abort$/;"	f
ale#fix#registry#Clear	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Clear() abort$/;"	f
ale#fix#registry#CompleteFixers	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#CompleteFixers(ArgLead, CmdLine, CursorPos) abort$/;"	f
ale#fix#registry#GetApplicableFixers	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetApplicableFixers(filetype) abort$/;"	f
ale#fix#registry#GetFunc	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetFunc(name) abort$/;"	f
ale#fix#registry#ResetToDefaults	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#ResetToDefaults() abort$/;"	f
ale#fix#registry#Suggest	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Suggest(filetype) abort$/;"	f
ale#fix#registry#SuggestedFixers	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#SuggestedFixers(filetype) abort$/;"	f
ale#fixers#appleswiftformat#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/appleswiftformat.vim	/^function! ale#fixers#appleswiftformat#Fix(buffer) abort$/;"	f
ale#fixers#astyle#FindProjectOptions	pack/vendor/start/ale-master/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#FindProjectOptions(buffer) abort$/;"	f
ale#fixers#astyle#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#Fix(buffer) abort$/;"	f
ale#fixers#astyle#Var	pack/vendor/start/ale-master/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#Var(buffer, name) abort$/;"	f
ale#fixers#autoflake#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/autoflake.vim	/^function! ale#fixers#autoflake#Fix(buffer) abort$/;"	f
ale#fixers#autoimport#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/autoimport.vim	/^function! ale#fixers#autoimport#Fix(buffer) abort$/;"	f
ale#fixers#autopep8#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/autopep8.vim	/^function! ale#fixers#autopep8#Fix(buffer) abort$/;"	f
ale#fixers#bibclean#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/bibclean.vim	/^function! ale#fixers#bibclean#Fix(buffer) abort$/;"	f
ale#fixers#black#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#Fix(buffer) abort$/;"	f
ale#fixers#black#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#GetExecutable(buffer) abort$/;"	f
ale#fixers#brittany#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#Fix(buffer) abort$/;"	f
ale#fixers#brittany#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#GetExecutable(buffer) abort$/;"	f
ale#fixers#buf_format#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/buf_format.vim	/^function! ale#fixers#buf_format#Fix(buffer) abort$/;"	f
ale#fixers#buildifier#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/buildifier.vim	/^function! ale#fixers#buildifier#Fix(buffer) abort$/;"	f
ale#fixers#buildifier#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/buildifier.vim	/^function! ale#fixers#buildifier#GetExecutable(buffer) abort$/;"	f
ale#fixers#clangformat#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#Fix(buffer) abort$/;"	f
ale#fixers#clangformat#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#clangtidy#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#Fix(buffer) abort$/;"	f
ale#fixers#clangtidy#GetCommand	pack/vendor/start/ale-master/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#GetCommand(buffer) abort$/;"	f
ale#fixers#clangtidy#Var	pack/vendor/start/ale-master/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#Var(buffer, name) abort$/;"	f
ale#fixers#cmakeformat#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/cmakeformat.vim	/^function! ale#fixers#cmakeformat#Fix(buffer) abort$/;"	f
ale#fixers#crystal#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/crystal.vim	/^function! ale#fixers#crystal#Fix(buffer) abort$/;"	f
ale#fixers#dart_format#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/dart_format.vim	/^function! ale#fixers#dart_format#Fix(buffer) abort$/;"	f
ale#fixers#dartfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/dartfmt.vim	/^function! ale#fixers#dartfmt#Fix(buffer) abort$/;"	f
ale#fixers#deno#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/deno.vim	/^function! ale#fixers#deno#Fix(buffer) abort$/;"	f
ale#fixers#dfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/dfmt.vim	/^function! ale#fixers#dfmt#Fix(buffer) abort$/;"	f
ale#fixers#dhall_format#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/dhall_format.vim	/^function! ale#fixers#dhall_format#Fix(buffer) abort$/;"	f
ale#fixers#dhall_freeze#Freeze	pack/vendor/start/ale-master/autoload/ale/fixers/dhall_freeze.vim	/^function! ale#fixers#dhall_freeze#Freeze(buffer) abort$/;"	f
ale#fixers#dhall_lint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/dhall_lint.vim	/^function! ale#fixers#dhall_lint#Fix(buffer) abort$/;"	f
ale#fixers#dotnet_format#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/dotnet_format.vim	/^function! ale#fixers#dotnet_format#Fix(buffer) abort$/;"	f
ale#fixers#dprint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/dprint.vim	/^function! ale#fixers#dprint#Fix(buffer) abort$/;"	f
ale#fixers#dune#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/dune.vim	/^function! ale#fixers#dune#Fix(buffer) abort$/;"	f
ale#fixers#elm_format#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#Fix(buffer) abort$/;"	f
ale#fixers#elm_format#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#erblint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/erblint.vim	/^function! ale#fixers#erblint#Fix(buffer) abort$/;"	f
ale#fixers#erblint#GetCommand	pack/vendor/start/ale-master/autoload/ale/fixers/erblint.vim	/^function! ale#fixers#erblint#GetCommand(buffer) abort$/;"	f
ale#fixers#erblint#PostProcess	pack/vendor/start/ale-master/autoload/ale/fixers/erblint.vim	/^function! ale#fixers#erblint#PostProcess(buffer, output) abort$/;"	f
ale#fixers#erlfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/erlfmt.vim	/^function! ale#fixers#erlfmt#Fix(buffer) abort$/;"	f
ale#fixers#erlfmt#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/erlfmt.vim	/^function! ale#fixers#erlfmt#GetExecutable(buffer) abort$/;"	f
ale#fixers#eslint#ApplyFixForVersion	pack/vendor/start/ale-master/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#eslint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#Fix(buffer) abort$/;"	f
ale#fixers#eslint#ProcessEslintDOutput	pack/vendor/start/ale-master/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessEslintDOutput(buffer, output) abort$/;"	f
ale#fixers#eslint#ProcessFixDryRunOutput	pack/vendor/start/ale-master/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessFixDryRunOutput(buffer, output) abort$/;"	f
ale#fixers#fecs#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/fecs.vim	/^function! ale#fixers#fecs#Fix(buffer) abort$/;"	f
ale#fixers#fish_indent#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/fish_indent.vim	/^function! ale#fixers#fish_indent#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#GetExecutable(buffer) abort$/;"	f
ale#fixers#floskell#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/floskell.vim	/^function! ale#fixers#floskell#Fix(buffer) abort$/;"	f
ale#fixers#floskell#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/floskell.vim	/^function! ale#fixers#floskell#GetExecutable(buffer) abort$/;"	f
ale#fixers#generic#RemoveTrailingBlankLines	pack/vendor/start/ale-master/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#RemoveTrailingBlankLines(buffer, lines) abort$/;"	f
ale#fixers#generic#TrimWhitespace	pack/vendor/start/ale-master/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#TrimWhitespace(buffer, lines) abort$/;"	f
ale#fixers#generic_python#AddLinesBeforeControlStatements	pack/vendor/start/ale-master/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#AddLinesBeforeControlStatements(buffer, lines) abort$/;"	f
ale#fixers#generic_python#BreakUpLongLines	pack/vendor/start/ale-master/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#BreakUpLongLines(buffer, lines) abort$/;"	f
ale#fixers#gnatpp#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/gnatpp.vim	/^function! ale#fixers#gnatpp#Fix(buffer) abort$/;"	f
ale#fixers#gofmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/gofmt.vim	/^function! ale#fixers#gofmt#Fix(buffer) abort$/;"	f
ale#fixers#gofumpt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/gofumpt.vim	/^function! ale#fixers#gofumpt#Fix(buffer) abort$/;"	f
ale#fixers#goimports#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/goimports.vim	/^function! ale#fixers#goimports#Fix(buffer) abort$/;"	f
ale#fixers#golines#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/golines.vim	/^function! ale#fixers#golines#Fix(buffer) abort$/;"	f
ale#fixers#gomod#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/gomod.vim	/^function! ale#fixers#gomod#Fix(buffer) abort$/;"	f
ale#fixers#google_java_format#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/google_java_format.vim	/^function! ale#fixers#google_java_format#Fix(buffer) abort$/;"	f
ale#fixers#hackfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/hackfmt.vim	/^function! ale#fixers#hackfmt#Fix(buffer) abort$/;"	f
ale#fixers#help#AlignTags	pack/vendor/start/ale-master/autoload/ale/fixers/help.vim	/^function! ale#fixers#help#AlignTags(buffer, lines) abort$/;"	f
ale#fixers#hfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/hfmt.vim	/^function! ale#fixers#hfmt#Fix(buffer) abort$/;"	f
ale#fixers#hindent#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/hindent.vim	/^function! ale#fixers#hindent#Fix(buffer) abort$/;"	f
ale#fixers#hindent#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/hindent.vim	/^function! ale#fixers#hindent#GetExecutable(buffer) abort$/;"	f
ale#fixers#hlint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/hlint.vim	/^function! ale#fixers#hlint#Fix(buffer) abort$/;"	f
ale#fixers#html_beautify#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/html_beautify.vim	/^function! ale#fixers#html_beautify#Fix(buffer) abort$/;"	f
ale#fixers#importjs#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#Fix(buffer) abort$/;"	f
ale#fixers#importjs#ProcessOutput	pack/vendor/start/ale-master/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#ProcessOutput(buffer, output) abort$/;"	f
ale#fixers#isort#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#Fix(buffer) abort$/;"	f
ale#fixers#isort#FixForVersion	pack/vendor/start/ale-master/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#FixForVersion(buffer, version) abort$/;"	f
ale#fixers#isort#GetCmd	pack/vendor/start/ale-master/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#GetCmd(buffer) abort$/;"	f
ale#fixers#isort#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#GetExecutable(buffer) abort$/;"	f
ale#fixers#jq#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#Fix(buffer) abort$/;"	f
ale#fixers#jq#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#GetExecutable(buffer) abort$/;"	f
ale#fixers#jsonnetfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/jsonnetfmt.vim	/^function! ale#fixers#jsonnetfmt#Fix(buffer) abort$/;"	f
ale#fixers#ktlint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/ktlint.vim	/^function! ale#fixers#ktlint#Fix(buffer) abort$/;"	f
ale#fixers#latexindent#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/latexindent.vim	/^function! ale#fixers#latexindent#Fix(buffer) abort$/;"	f
ale#fixers#lua_format#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/lua_format.vim	/^function! ale#fixers#lua_format#Fix(buffer) abort$/;"	f
ale#fixers#luafmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/luafmt.vim	/^function! ale#fixers#luafmt#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#GetCommand	pack/vendor/start/ale-master/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetCommand(buffer) abort$/;"	f
ale#fixers#mix_format#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#nimpretty#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/nimpretty.vim	/^function! ale#fixers#nimpretty#Fix(buffer) abort$/;"	f
ale#fixers#nixfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/nixfmt.vim	/^function! ale#fixers#nixfmt#Fix(buffer) abort$/;"	f
ale#fixers#nixpkgsfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/nixpkgsfmt.vim	/^function! ale#fixers#nixpkgsfmt#Fix(buffer) abort$/;"	f
ale#fixers#ocamlformat#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/ocamlformat.vim	/^function! ale#fixers#ocamlformat#Fix(buffer) abort$/;"	f
ale#fixers#ocp_indent#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/ocp_indent.vim	/^function! ale#fixers#ocp_indent#Fix(buffer) abort$/;"	f
ale#fixers#opafmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/opafmt.vim	/^function! ale#fixers#opafmt#Fix(buffer) abort$/;"	f
ale#fixers#ormolu#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/ormolu.vim	/^function! ale#fixers#ormolu#Fix(buffer) abort$/;"	f
ale#fixers#packer#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/packer.vim	/^function! ale#fixers#packer#Fix(buffer) abort$/;"	f
ale#fixers#pandoc#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/pandoc.vim	/^function! ale#fixers#pandoc#Fix(buffer) abort$/;"	f
ale#fixers#perltidy#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/perltidy.vim	/^function! ale#fixers#perltidy#Fix(buffer) abort$/;"	f
ale#fixers#pgformatter#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/pgformatter.vim	/^function! ale#fixers#pgformatter#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#GetExecutable(buffer) abort$/;"	f
ale#fixers#phpcbf#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#Fix(buffer) abort$/;"	f
ale#fixers#phpcbf#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#GetExecutable(buffer) abort$/;"	f
ale#fixers#pint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/pint.vim	/^function! ale#fixers#pint#Fix(buffer) abort$/;"	f
ale#fixers#pint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/pint.vim	/^function! ale#fixers#pint#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ApplyFixForVersion	pack/vendor/start/ale-master/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#Fix(buffer) abort$/;"	f
ale#fixers#prettier#GetCwd	pack/vendor/start/ale-master/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetCwd(buffer) abort$/;"	f
ale#fixers#prettier#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ProcessPrettierDOutput	pack/vendor/start/ale-master/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ProcessPrettierDOutput(buffer, output) abort$/;"	f
ale#fixers#prettier_eslint#ApplyFixForVersion	pack/vendor/start/ale-master/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier_eslint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#Fix(buffer) abort$/;"	f
ale#fixers#prettier_eslint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier_standard#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#Fix(buffer) abort$/;"	f
ale#fixers#prettier_standard#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#protolint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/protolint.vim	/^function! ale#fixers#protolint#Fix(buffer) abort$/;"	f
ale#fixers#protolint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/protolint.vim	/^function! ale#fixers#protolint#GetExecutable(buffer) abort$/;"	f
ale#fixers#ptop#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/ptop.vim	/^function! ale#fixers#ptop#Fix(buffer) abort$/;"	f
ale#fixers#puppetlint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/puppetlint.vim	/^function! ale#fixers#puppetlint#Fix(buffer) abort$/;"	f
ale#fixers#purs_tidy#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/purs_tidy.vim	/^function! ale#fixers#purs_tidy#Fix(buffer) abort$/;"	f
ale#fixers#purs_tidy#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/purs_tidy.vim	/^function! ale#fixers#purs_tidy#GetExecutable(buffer) abort$/;"	f
ale#fixers#purty#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/purty.vim	/^function! ale#fixers#purty#Fix(buffer) abort$/;"	f
ale#fixers#purty#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/purty.vim	/^function! ale#fixers#purty#GetExecutable(buffer) abort$/;"	f
ale#fixers#pyflyby#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/pyflyby.vim	/^function! ale#fixers#pyflyby#Fix(buffer) abort$/;"	f
ale#fixers#pyflyby#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/pyflyby.vim	/^function! ale#fixers#pyflyby#GetExecutable(buffer) abort$/;"	f
ale#fixers#qmlfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#Fix(buffer) abort$/;"	f
ale#fixers#qmlfmt#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#GetExecutable(buffer) abort$/;"	f
ale#fixers#refmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/refmt.vim	/^function! ale#fixers#refmt#Fix(buffer) abort$/;"	f
ale#fixers#remark_lint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/remark_lint.vim	/^function! ale#fixers#remark_lint#Fix(buffer) abort$/;"	f
ale#fixers#remark_lint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/remark_lint.vim	/^function! ale#fixers#remark_lint#GetExecutable(buffer) abort$/;"	f
ale#fixers#reorder_python_imports#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/reorder_python_imports.vim	/^function! ale#fixers#reorder_python_imports#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#GetCommand	pack/vendor/start/ale-master/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#GetCommand(buffer) abort$/;"	f
ale#fixers#rubocop#PostProcess	pack/vendor/start/ale-master/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#PostProcess(buffer, output) abort$/;"	f
ale#fixers#rufo#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#Fix(buffer) abort$/;"	f
ale#fixers#rufo#GetCommand	pack/vendor/start/ale-master/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#GetCommand(buffer) abort$/;"	f
ale#fixers#rustfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/rustfmt.vim	/^function! ale#fixers#rustfmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#GetCommand	pack/vendor/start/ale-master/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#GetCommand(buffer) abort$/;"	f
ale#fixers#shfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/shfmt.vim	/^function! ale#fixers#shfmt#Fix(buffer) abort$/;"	f
ale#fixers#sorbet#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/sorbet.vim	/^function! ale#fixers#sorbet#Fix(buffer) abort$/;"	f
ale#fixers#sorbet#GetCommand	pack/vendor/start/ale-master/autoload/ale/fixers/sorbet.vim	/^function! ale#fixers#sorbet#GetCommand(buffer) abort$/;"	f
ale#fixers#sqlfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/sqlfmt.vim	/^function! ale#fixers#sqlfmt#Fix(buffer) abort$/;"	f
ale#fixers#sqlformat#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/sqlformat.vim	/^function! ale#fixers#sqlformat#Fix(buffer) abort$/;"	f
ale#fixers#standard#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#Fix(buffer) abort$/;"	f
ale#fixers#standard#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#standardrb#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#Fix(buffer) abort$/;"	f
ale#fixers#standardrb#GetCommand	pack/vendor/start/ale-master/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#GetCommand(buffer) abort$/;"	f
ale#fixers#statix#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/statix.vim	/^function! ale#fixers#statix#Fix(buffer) abort$/;"	f
ale#fixers#stylelint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#Fix(buffer) abort$/;"	f
ale#fixers#stylelint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#GetExecutable(buffer) abort$/;"	f
ale#fixers#styler#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/styler.vim	/^function! ale#fixers#styler#Fix(buffer) abort$/;"	f
ale#fixers#stylish_haskell#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#Fix(buffer) abort$/;"	f
ale#fixers#stylish_haskell#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#GetExecutable(buffer) abort$/;"	f
ale#fixers#stylua#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/stylua.vim	/^function! ale#fixers#stylua#Fix(buffer) abort$/;"	f
ale#fixers#swiftformat#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#Fix(buffer) abort$/;"	f
ale#fixers#swiftformat#GetExecutable	pack/vendor/start/ale-master/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#syntax_tree#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/syntax_tree.vim	/^function! ale#fixers#syntax_tree#Fix(buffer) abort$/;"	f
ale#fixers#syntax_tree#GetCommand	pack/vendor/start/ale-master/autoload/ale/fixers/syntax_tree.vim	/^function! ale#fixers#syntax_tree#GetCommand(buffer) abort$/;"	f
ale#fixers#terraform#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/terraform.vim	/^function! ale#fixers#terraform#Fix(buffer) abort$/;"	f
ale#fixers#textlint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/textlint.vim	/^function! ale#fixers#textlint#Fix(buffer) abort$/;"	f
ale#fixers#tidy#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/tidy.vim	/^function! ale#fixers#tidy#Fix(buffer) abort$/;"	f
ale#fixers#tslint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/tslint.vim	/^function! ale#fixers#tslint#Fix(buffer) abort$/;"	f
ale#fixers#uncrustify#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/uncrustify.vim	/^function! ale#fixers#uncrustify#Fix(buffer) abort$/;"	f
ale#fixers#uncrustify#Language	pack/vendor/start/ale-master/autoload/ale/fixers/uncrustify.vim	/^function! ale#fixers#uncrustify#Language(buffer) abort$/;"	f
ale#fixers#vfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/vfmt.vim	/^function! ale#fixers#vfmt#Fix(buffer) abort$/;"	f
ale#fixers#xmllint#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/xmllint.vim	/^function! ale#fixers#xmllint#Fix(buffer) abort$/;"	f
ale#fixers#xo#ApplyFixForVersion	pack/vendor/start/ale-master/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#ApplyFixForVersion(buffer, version, executable, options) abort$/;"	f
ale#fixers#xo#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#Fix(buffer) abort$/;"	f
ale#fixers#yamlfix#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/yamlfix.vim	/^function! ale#fixers#yamlfix#Fix(buffer) abort$/;"	f
ale#fixers#yapf#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/yapf.vim	/^function! ale#fixers#yapf#Fix(buffer) abort$/;"	f
ale#fixers#zigfmt#Fix	pack/vendor/start/ale-master/autoload/ale/fixers/zigfmt.vim	/^function! ale#fixers#zigfmt#Fix(buffer) abort$/;"	f
ale#floating_preview#Show	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^function! ale#floating_preview#Show(lines, ...) abort$/;"	f
ale#go#EnvString	pack/vendor/start/ale-master/autoload/ale/go.vim	/^function! ale#go#EnvString(buffer) abort$/;"	f
ale#go#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/go.vim	/^function! ale#go#FindProjectRoot(buffer) abort$/;"	f
ale#go#GetGoPathExecutable	pack/vendor/start/ale-master/autoload/ale/go.vim	/^function! ale#go#GetGoPathExecutable(suffix) abort$/;"	f
ale#gradle#BuildClasspathCommand	pack/vendor/start/ale-master/autoload/ale/gradle.vim	/^function! ale#gradle#BuildClasspathCommand(buffer) abort$/;"	f
ale#gradle#FindExecutable	pack/vendor/start/ale-master/autoload/ale/gradle.vim	/^function! ale#gradle#FindExecutable(buffer) abort$/;"	f
ale#gradle#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/gradle.vim	/^function! ale#gradle#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#GetInitPath	pack/vendor/start/ale-master/autoload/ale/gradle.vim	/^function! ale#gradle#GetInitPath() abort$/;"	f
ale#handlers#actionlint#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/actionlint.vim	/^function! ale#handlers#actionlint#GetCommand(buffer) abort$/;"	f
ale#handlers#actionlint#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/actionlint.vim	/^function! ale#handlers#actionlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#alex#CreateCommandCallback	pack/vendor/start/ale-master/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#CreateCommandCallback(flags) abort$/;"	f
ale#handlers#alex#DefineLinter	pack/vendor/start/ale-master/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#DefineLinter(filetype, flags) abort$/;"	f
ale#handlers#alex#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#GetExecutable(buffer) abort$/;"	f
ale#handlers#alex#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#Handle(buffer, lines) abort$/;"	f
ale#handlers#atools#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/atools.vim	/^function! ale#handlers#atools#Handle(buffer, lines) abort$/;"	f
ale#handlers#ccls#GetInitOpts	pack/vendor/start/ale-master/autoload/ale/handlers/ccls.vim	/^function! ale#handlers#ccls#GetInitOpts(buffer, init_options_var) abort$/;"	f
ale#handlers#ccls#GetProjectRoot	pack/vendor/start/ale-master/autoload/ale/handlers/ccls.vim	/^function! ale#handlers#ccls#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#cppcheck#GetBufferPathIncludeOptions	pack/vendor/start/ale-master/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetBufferPathIncludeOptions(buffer) abort$/;"	f
ale#handlers#cppcheck#GetCompileCommandsOptions	pack/vendor/start/ale-master/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetCompileCommandsOptions(buffer) abort$/;"	f
ale#handlers#cppcheck#GetCwd	pack/vendor/start/ale-master/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetCwd(buffer) abort$/;"	f
ale#handlers#cppcheck#HandleCppCheckFormat	pack/vendor/start/ale-master/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#HandleCppCheckFormat(buffer, lines) abort$/;"	f
ale#handlers#cpplint#HandleCppLintFormat	pack/vendor/start/ale-master/autoload/ale/handlers/cpplint.vim	/^function! ale#handlers#cpplint#HandleCppLintFormat(buffer, lines) abort$/;"	f
ale#handlers#cspell#DefineLinter	pack/vendor/start/ale-master/autoload/ale/handlers/cspell.vim	/^function! ale#handlers#cspell#DefineLinter(filetype) abort$/;"	f
ale#handlers#cspell#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/cspell.vim	/^function! ale#handlers#cspell#GetCommand(buffer) abort$/;"	f
ale#handlers#cspell#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/cspell.vim	/^function! ale#handlers#cspell#GetExecutable(buffer) abort$/;"	f
ale#handlers#cspell#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/cspell.vim	/^function! ale#handlers#cspell#Handle(buffer, lines) abort$/;"	f
ale#handlers#css#HandleCSSLintFormat	pack/vendor/start/ale-master/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleCSSLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleStyleLintFormat	pack/vendor/start/ale-master/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleStyleLintFormat(buffer, lines) abort$/;"	f
ale#handlers#deno#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/deno.vim	/^function! ale#handlers#deno#GetExecutable(buffer) abort$/;"	f
ale#handlers#deno#GetInitializationOptions	pack/vendor/start/ale-master/autoload/ale/handlers/deno.vim	/^function! ale#handlers#deno#GetInitializationOptions(buffer) abort$/;"	f
ale#handlers#deno#GetProjectRoot	pack/vendor/start/ale-master/autoload/ale/handlers/deno.vim	/^function! ale#handlers#deno#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#elixir#FindMixProjectRoot	pack/vendor/start/ale-master/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixProjectRoot(buffer) abort$/;"	f
ale#handlers#elixir#FindMixUmbrellaRoot	pack/vendor/start/ale-master/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixUmbrellaRoot(buffer) abort$/;"	f
ale#handlers#eslint#FindConfig	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#FindConfig(buffer) abort$/;"	f
ale#handlers#eslint#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCommand(buffer) abort$/;"	f
ale#handlers#eslint#GetCwd	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCwd(buffer) abort$/;"	f
ale#handlers#eslint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#eslint#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#Handle(buffer, lines) abort$/;"	f
ale#handlers#eslint#HandleJSON	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#HandleJSON(buffer, lines) abort$/;"	f
ale#handlers#fecs#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetCommand(buffer) abort$/;"	f
ale#handlers#fecs#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetExecutable(buffer) abort$/;"	f
ale#handlers#fecs#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#Handle(buffer, lines) abort$/;"	f
ale#handlers#flawfinder#HandleFlawfinderFormat	pack/vendor/start/ale-master/autoload/ale/handlers/flawfinder.vim	/^function! ale#handlers#flawfinder#HandleFlawfinderFormat(buffer, lines) abort$/;"	f
ale#handlers#gawk#HandleGawkFormat	pack/vendor/start/ale-master/autoload/ale/handlers/gawk.vim	/^function! ale#handlers#gawk#HandleGawkFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormat	pack/vendor/start/ale-master/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormatWithIncludes	pack/vendor/start/ale-master/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormatWithIncludes(buffer, lines) abort$/;"	f
ale#handlers#go#Handler	pack/vendor/start/ale-master/autoload/ale/handlers/go.vim	/^function! ale#handlers#go#Handler(buffer, lines) abort$/;"	f
ale#handlers#haskell#GetStackExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#GetStackExecutable(bufnr) abort$/;"	f
ale#handlers#haskell#HandleGHCFormat	pack/vendor/start/ale-master/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#HandleGHCFormat(buffer, lines) abort$/;"	f
ale#handlers#haskell_stack#EscapeExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/haskell_stack.vim	/^function! ale#handlers#haskell_stack#EscapeExecutable(executable, stack_exec) abort$/;"	f
ale#handlers#hdl_checker#DefineLinter	pack/vendor/start/ale-master/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#DefineLinter(filetype) abort$/;"	f
ale#handlers#hdl_checker#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetCommand(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetExecutable(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetInitOptions	pack/vendor/start/ale-master/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetInitOptions(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetProjectRoot	pack/vendor/start/ale-master/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#hdl_checker#IsDotGit	pack/vendor/start/ale-master/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#IsDotGit(path) abort$/;"	f
ale#handlers#hlint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/hlint.vim	/^function! ale#handlers#hlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#inko#GetType	pack/vendor/start/ale-master/autoload/ale/handlers/inko.vim	/^function! ale#handlers#inko#GetType(severity) abort$/;"	f
ale#handlers#inko#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/inko.vim	/^function! ale#handlers#inko#Handle(buffer, lines) abort$/;"	f
ale#handlers#ktlint#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetCommand(buffer) abort$/;"	f
ale#handlers#ktlint#GetRulesets	pack/vendor/start/ale-master/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetRulesets(buffer) abort$/;"	f
ale#handlers#ktlint#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#languagetool#DefineLinter	pack/vendor/start/ale-master/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#DefineLinter(filetype) abort$/;"	f
ale#handlers#languagetool#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetCommand(buffer) abort$/;"	f
ale#handlers#languagetool#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetExecutable(buffer) abort$/;"	f
ale#handlers#languagetool#HandleOutput	pack/vendor/start/ale-master/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#HandleOutput(buffer, lines) abort$/;"	f
ale#handlers#markdownlint#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/markdownlint.vim	/^function! ale#handlers#markdownlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#naga#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/naga.vim	/^function! ale#handlers#naga#Handle(buffer, lines) abort$/;"	f
ale#handlers#ocamllsp#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetCommand(buffer) abort$/;"	f
ale#handlers#ocamllsp#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetExecutable(buffer) abort$/;"	f
ale#handlers#ocamllsp#GetLanguage	pack/vendor/start/ale-master/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetLanguage(buffer) abort$/;"	f
ale#handlers#ocamllsp#GetProjectRoot	pack/vendor/start/ale-master/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#ols#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetCommand(buffer) abort$/;"	f
ale#handlers#ols#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetExecutable(buffer) abort$/;"	f
ale#handlers#ols#GetLanguage	pack/vendor/start/ale-master/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetLanguage(buffer) abort$/;"	f
ale#handlers#ols#GetProjectRoot	pack/vendor/start/ale-master/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#openscad#SCA2D_callback	pack/vendor/start/ale-master/autoload/ale/handlers/openscad.vim	/^function! ale#handlers#openscad#SCA2D_callback(buffer, lines) abort$/;"	f
ale#handlers#pony#HandlePonycFormat	pack/vendor/start/ale-master/autoload/ale/handlers/pony.vim	/^function! ale#handlers#pony#HandlePonycFormat(buffer, lines) abort$/;"	f
ale#handlers#redpen#HandleRedpenOutput	pack/vendor/start/ale-master/autoload/ale/handlers/redpen.vim	/^function! ale#handlers#redpen#HandleRedpenOutput(buffer, lines) abort$/;"	f
ale#handlers#ruby#HandleSyntaxErrors	pack/vendor/start/ale-master/autoload/ale/handlers/ruby.vim	/^function! ale#handlers#ruby#HandleSyntaxErrors(buffer, lines) abort$/;"	f
ale#handlers#rust#HandleRustErrors	pack/vendor/start/ale-master/autoload/ale/handlers/rust.vim	/^function! ale#handlers#rust#HandleRustErrors(buffer, lines) abort$/;"	f
ale#handlers#scala#HandleScalacLintFormat	pack/vendor/start/ale-master/autoload/ale/handlers/scala.vim	/^function! ale#handlers#scala#HandleScalacLintFormat(buffer, lines) abort$/;"	f
ale#handlers#sh#GetShellType	pack/vendor/start/ale-master/autoload/ale/handlers/sh.vim	/^function! ale#handlers#sh#GetShellType(buffer) abort$/;"	f
ale#handlers#shellcheck#DefineLinter	pack/vendor/start/ale-master/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#DefineLinter(filetype) abort$/;"	f
ale#handlers#shellcheck#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetCommand(buffer, version) abort$/;"	f
ale#handlers#shellcheck#GetCwd	pack/vendor/start/ale-master/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetCwd(buffer) abort$/;"	f
ale#handlers#shellcheck#GetDialectArgument	pack/vendor/start/ale-master/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetDialectArgument(buffer) abort$/;"	f
ale#handlers#shellcheck#GetShellcheckDialectDirective	pack/vendor/start/ale-master/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetShellcheckDialectDirective(buffer) abort$/;"	f
ale#handlers#shellcheck#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#Handle(buffer, lines) abort$/;"	f
ale#handlers#sml#GetCmFile	pack/vendor/start/ale-master/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetCmFile(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjCm	pack/vendor/start/ale-master/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjCm(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjFile	pack/vendor/start/ale-master/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjFile(buffer) abort$/;"	f
ale#handlers#sml#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#Handle(buffer, lines) abort$/;"	f
ale#handlers#solhint#FindConfig	pack/vendor/start/ale-master/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#FindConfig(buffer) abort$/;"	f
ale#handlers#solhint#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#GetCommand(buffer) abort$/;"	f
ale#handlers#solhint#GetCwd	pack/vendor/start/ale-master/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#GetCwd(buffer) abort$/;"	f
ale#handlers#solhint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#GetExecutable(buffer) abort$/;"	f
ale#handlers#solhint#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#Handle(buffer, lines) abort$/;"	f
ale#handlers#spectral#HandleSpectralOutput	pack/vendor/start/ale-master/autoload/ale/handlers/spectral.vim	/^function! ale#handlers#spectral#HandleSpectralOutput(buffer, lines) abort$/;"	f
ale#handlers#statix#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/statix.vim	/^function! ale#handlers#statix#Handle(buffer, lines) abort$/;"	f
ale#handlers#textlint#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetCommand(buffer) abort$/;"	f
ale#handlers#textlint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#textlint#HandleTextlintOutput	pack/vendor/start/ale-master/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#HandleTextlintOutput(buffer, lines) abort$/;"	f
ale#handlers#tslint#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#tslint#InitVariables	pack/vendor/start/ale-master/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#InitVariables() abort$/;"	f
ale#handlers#tsserver#GetProjectRoot	pack/vendor/start/ale-master/autoload/ale/handlers/tsserver.vim	/^function! ale#handlers#tsserver#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#unix#HandleAsError	pack/vendor/start/ale-master/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsError(buffer, lines) abort$/;"	f
ale#handlers#unix#HandleAsWarning	pack/vendor/start/ale-master/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsWarning(buffer, lines) abort$/;"	f
ale#handlers#vale#GetType	pack/vendor/start/ale-master/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#GetType(severity) abort$/;"	f
ale#handlers#vale#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#DefineLinter	pack/vendor/start/ale-master/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#DefineLinter(filetype) abort$/;"	f
ale#handlers#writegood#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetCommand(buffer) abort$/;"	f
ale#handlers#writegood#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetExecutable(buffer) abort$/;"	f
ale#handlers#writegood#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#ResetOptions	pack/vendor/start/ale-master/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#ResetOptions() abort$/;"	f
ale#handlers#xo#GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetExecutable(buffer) abort$/;"	f
ale#handlers#xo#GetLintCommand	pack/vendor/start/ale-master/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetLintCommand(buffer) abort$/;"	f
ale#handlers#xo#GetOptions	pack/vendor/start/ale-master/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetOptions(buffer) abort$/;"	f
ale#handlers#xo#GetType	pack/vendor/start/ale-master/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetType(buffer) abort$/;"	f
ale#handlers#xo#HandleJSON	pack/vendor/start/ale-master/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#HandleJSON(buffer, lines) abort$/;"	f
ale#handlers#yamllint#GetCommand	pack/vendor/start/ale-master/autoload/ale/handlers/yamllint.vim	/^function! ale#handlers#yamllint#GetCommand(buffer) abort$/;"	f
ale#handlers#yamllint#Handle	pack/vendor/start/ale-master/autoload/ale/handlers/yamllint.vim	/^function! ale#handlers#yamllint#Handle(buffer, lines) abort$/;"	f
ale#highlight#BufferHidden	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! ale#highlight#BufferHidden(buffer) abort$/;"	f
ale#highlight#CreatePositions	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! ale#highlight#CreatePositions(line, col, end_line, end_col) abort$/;"	f
ale#highlight#RemoveHighlights	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! ale#highlight#RemoveHighlights() abort$/;"	f
ale#highlight#SetHighlights	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! ale#highlight#SetHighlights(buffer, loclist) abort$/;"	f
ale#highlight#UpdateHighlights	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! ale#highlight#UpdateHighlights() abort$/;"	f
ale#highlight#nvim_buf_add_highlight	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! ale#highlight#nvim_buf_add_highlight(buffer, ns_id, hl_group, line, col_start, col_end/;"	f
ale#highlight#nvim_buf_clear_namespace	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! ale#highlight#nvim_buf_clear_namespace(buffer, ns_id, line_start, line_end) abort$/;"	f
ale#history#Add	pack/vendor/start/ale-master/autoload/ale/history.vim	/^function! ale#history#Add(buffer, status, job_id, command) abort$/;"	f
ale#history#Get	pack/vendor/start/ale-master/autoload/ale/history.vim	/^function! ale#history#Get(buffer) abort$/;"	f
ale#history#RememberOutput	pack/vendor/start/ale-master/autoload/ale/history.vim	/^function! ale#history#RememberOutput(buffer, job_id, output) abort$/;"	f
ale#history#SetExitCode	pack/vendor/start/ale-master/autoload/ale/history.vim	/^function! ale#history#SetExitCode(buffer, job_id, exit_code) abort$/;"	f
ale#hover#ClearLSPData	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#ClearLSPData() abort$/;"	f
ale#hover#GetMap	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#GetMap() abort$/;"	f
ale#hover#HandleLSPResponse	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#hover#HandleTSServerResponse	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#hover#ParseLSPResult	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#ParseLSPResult(contents) abort$/;"	f
ale#hover#SetMap	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#SetMap(map) abort$/;"	f
ale#hover#Show	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#Show(buffer, line, col, opt) abort$/;"	f
ale#hover#ShowAtCursor	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#ShowAtCursor() abort$/;"	f
ale#hover#ShowDocumentationAtCursor	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#ShowDocumentationAtCursor() abort$/;"	f
ale#hover#ShowTruncatedMessageAtCursor	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! ale#hover#ShowTruncatedMessageAtCursor() abort$/;"	f
ale#java#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/java.vim	/^function! ale#java#FindProjectRoot(buffer) abort$/;"	f
ale#job#HasOpenChannel	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! ale#job#HasOpenChannel(job_id) abort$/;"	f
ale#job#IsRunning	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! ale#job#IsRunning(job_id) abort$/;"	f
ale#job#ParseVim8ProcessID	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! ale#job#ParseVim8ProcessID(job_string) abort$/;"	f
ale#job#PrepareCommand	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! ale#job#PrepareCommand(buffer, command) abort$/;"	f
ale#job#SendRaw	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! ale#job#SendRaw(job_id, string) abort$/;"	f
ale#job#Start	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! ale#job#Start(command, options) abort$/;"	f
ale#job#StartWithCmd	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! ale#job#StartWithCmd(command, options) abort$/;"	f
ale#job#Stop	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! ale#job#Stop(job_id) abort$/;"	f
ale#job#ValidateArguments	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! ale#job#ValidateArguments(command, options) abort$/;"	f
ale#julia#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/julia.vim	/^function! ale#julia#FindProjectRoot(buffer) abort$/;"	f
ale#linter#Define	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#Define(filetype, linter) abort$/;"	f
ale#linter#Get	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#Get(original_filetypes) abort$/;"	f
ale#linter#GetAddress	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#GetAddress(buffer, linter) abort$/;"	f
ale#linter#GetAll	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#GetAll(filetypes) abort$/;"	f
ale#linter#GetCommand	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#GetCommand(buffer, linter) abort$/;"	f
ale#linter#GetCwd	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#GetCwd(buffer, linter) abort$/;"	f
ale#linter#GetExecutable	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#GetExecutable(buffer, linter) abort$/;"	f
ale#linter#GetLanguage	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#GetLanguage(buffer, linter) abort$/;"	f
ale#linter#GetLintersLoaded	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#GetLintersLoaded() abort$/;"	f
ale#linter#PreProcess	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#PreProcess(filetype, linter) abort$/;"	f
ale#linter#PreventLoading	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#PreventLoading(filetype) abort$/;"	f
ale#linter#RemoveIgnored	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#RemoveIgnored(buffer, filetype, linters) abort$/;"	f
ale#linter#Reset	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#Reset() abort$/;"	f
ale#linter#ResolveFiletype	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! ale#linter#ResolveFiletype(original_filetype) abort$/;"	f
ale#list#ForcePopulateErrorList	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! ale#list#ForcePopulateErrorList(populate_quickfix) abort$/;"	f
ale#list#GetCombinedList	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! ale#list#GetCombinedList() abort$/;"	f
ale#list#IsQuickfixOpen	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! ale#list#IsQuickfixOpen() abort$/;"	f
ale#list#SetLists	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! ale#list#SetLists(buffer, loclist) abort$/;"	f
ale#loclist_jumping#FindNearest	pack/vendor/start/ale-master/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#FindNearest(direction, wrap, ...) abort$/;"	f
ale#loclist_jumping#Jump	pack/vendor/start/ale-master/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#Jump(direction, ...) abort$/;"	f
ale#loclist_jumping#JumpToIndex	pack/vendor/start/ale-master/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#JumpToIndex(index) abort$/;"	f
ale#loclist_jumping#WrapJump	pack/vendor/start/ale-master/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#WrapJump(direction, sargs) abort$/;"	f
ale#lsp#CloseDocument	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#CloseDocument(buffer) abort$/;"	f
ale#lsp#CloseDocument	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#CloseDocument(conn_id) abort$/;"	f
ale#lsp#ConnectToAddress	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#ConnectToAddress(conn_id, address) abort$/;"	f
ale#lsp#CreateMessageData	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#CreateMessageData(message) abort$/;"	f
ale#lsp#GetConnections	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#GetConnections() abort$/;"	f
ale#lsp#GetNextMessageID	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#GetNextMessageID() abort$/;"	f
ale#lsp#HandleInitResponse	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#HandleInitResponse(conn, response) abort$/;"	f
ale#lsp#HandleMessage	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#HandleMessage(conn_id, message) abort$/;"	f
ale#lsp#HasCapability	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#HasCapability(conn_id, capability) abort$/;"	f
ale#lsp#MarkConnectionAsTsserver	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#MarkConnectionAsTsserver(conn_id) abort$/;"	f
ale#lsp#MarkDocumentAsOpen	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#MarkDocumentAsOpen(id, buffer) abort$/;"	f
ale#lsp#NotifyForChanges	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#NotifyForChanges(conn_id, buffer) abort$/;"	f
ale#lsp#OnInit	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#OnInit(conn_id, Callback) abort$/;"	f
ale#lsp#OpenDocument	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#OpenDocument(conn_id, buffer, language_id) abort$/;"	f
ale#lsp#ReadMessageData	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#ReadMessageData(data) abort$/;"	f
ale#lsp#Register	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#Register(executable_or_address, project, init_options) abort$/;"	f
ale#lsp#RegisterCallback	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#RegisterCallback(conn_id, callback) abort$/;"	f
ale#lsp#RemoveConnectionWithID	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#RemoveConnectionWithID(id) abort$/;"	f
ale#lsp#ResetConnections	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#ResetConnections() abort$/;"	f
ale#lsp#Send	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#Send(conn_id, message) abort$/;"	f
ale#lsp#StartProgram	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#StartProgram(conn_id, executable, command) abort$/;"	f
ale#lsp#Stop	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#Stop(conn_id) abort$/;"	f
ale#lsp#StopAll	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#StopAll() abort$/;"	f
ale#lsp#UpdateConfig	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! ale#lsp#UpdateConfig(conn_id, buffer, config) abort$/;"	f
ale#lsp#message#CodeAction	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#CodeAction(buffer, line, column, end_line, end_column, diagnostics) ab/;"	f
ale#lsp#message#Completion	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Completion(buffer, line, column, trigger_character) abort$/;"	f
ale#lsp#message#Definition	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#message#DidChange	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChange(buffer) abort$/;"	f
ale#lsp#message#DidChangeConfiguration	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChangeConfiguration(buffer, config) abort$/;"	f
ale#lsp#message#DidClose	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidClose(buffer) abort$/;"	f
ale#lsp#message#DidOpen	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidOpen(buffer, language_id) abort$/;"	f
ale#lsp#message#DidSave	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidSave(buffer, include_text) abort$/;"	f
ale#lsp#message#ExecuteCommand	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#ExecuteCommand(command, arguments) abort$/;"	f
ale#lsp#message#Exit	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Exit() abort$/;"	f
ale#lsp#message#GetNextVersionID	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#GetNextVersionID() abort$/;"	f
ale#lsp#message#Hover	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Hover(buffer, line, column) abort$/;"	f
ale#lsp#message#Implementation	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Implementation(buffer, line, column) abort$/;"	f
ale#lsp#message#Initialize	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialize(root_path, options, capabilities) abort$/;"	f
ale#lsp#message#Initialized	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialized() abort$/;"	f
ale#lsp#message#References	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#References(buffer, line, column) abort$/;"	f
ale#lsp#message#Rename	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Rename(buffer, line, column, new_name) abort$/;"	f
ale#lsp#message#Shutdown	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Shutdown() abort$/;"	f
ale#lsp#message#Symbol	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Symbol(query) abort$/;"	f
ale#lsp#message#TypeDefinition	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#TypeDefinition(buffer, line, column) abort$/;"	f
ale#lsp#reset#StopAllLSPs	pack/vendor/start/ale-master/autoload/ale/lsp/reset.vim	/^function! ale#lsp#reset#StopAllLSPs() abort$/;"	f
ale#lsp#response#GetErrorMessage	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#GetErrorMessage(response) abort$/;"	f
ale#lsp#response#ReadDiagnostics	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadDiagnostics(response) abort$/;"	f
ale#lsp#response#ReadTSServerDiagnostics	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadTSServerDiagnostics(response) abort$/;"	f
ale#lsp#tsserver_message#Change	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Change(buffer) abort$/;"	f
ale#lsp#tsserver_message#Close	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Close(buffer) abort$/;"	f
ale#lsp#tsserver_message#CompletionEntryDetails	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#CompletionEntryDetails(buffer, line, column, entry_names) abo/;"	f
ale#lsp#tsserver_message#Completions	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Completions($/;"	f
ale#lsp#tsserver_message#Definition	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#GetApplicableRefactors	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetApplicableRefactors(buffer, line, column, end_line, end_co/;"	f
ale#lsp#tsserver_message#GetCodeFixes	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetCodeFixes(buffer, line, column, end_line, end_column, erro/;"	f
ale#lsp#tsserver_message#GetEditsForFileRename	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetEditsForFileRename($/;"	f
ale#lsp#tsserver_message#GetEditsForRefactor	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetEditsForRefactor(buffer, line, column, end_line, end_colum/;"	f
ale#lsp#tsserver_message#Geterr	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Geterr(buffer) abort$/;"	f
ale#lsp#tsserver_message#Implementation	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Implementation(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#Open	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Open(buffer) abort$/;"	f
ale#lsp#tsserver_message#OrganizeImports	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#OrganizeImports(buffer) abort$/;"	f
ale#lsp#tsserver_message#Quickinfo	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Quickinfo(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#References	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#References(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#Rename	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Rename($/;"	f
ale#lsp#tsserver_message#TypeDefinition	pack/vendor/start/ale-master/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#TypeDefinition(buffer, line, column) abort$/;"	f
ale#lsp_linter#AddErrorMessage	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#AddErrorMessage(linter_name, message) abort$/;"	f
ale#lsp_linter#CheckWithLSP	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#CheckWithLSP(buffer, linter) abort$/;"	f
ale#lsp_linter#ClearLSPData	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#ClearLSPData() abort$/;"	f
ale#lsp_linter#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#FindProjectRoot(buffer, linter) abort$/;"	f
ale#lsp_linter#GetConfig	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetConfig(buffer, linter) abort$/;"	f
ale#lsp_linter#GetLSPLinterMap	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetLSPLinterMap() abort$/;"	f
ale#lsp_linter#GetOptions	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetOptions(buffer, linter) abort$/;"	f
ale#lsp_linter#HandleLSPResponse	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#lsp_linter#OnInit	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#OnInit(linter, details, Callback) abort$/;"	f
ale#lsp_linter#SendRequest	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#SendRequest(buffer, linter_name, message, ...) abort$/;"	f
ale#lsp_linter#SetLSPLinterMap	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#SetLSPLinterMap(replacement_map) abort$/;"	f
ale#lsp_linter#StartLSP	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#StartLSP(buffer, linter, Callback) abort$/;"	f
ale#lsp_window#HandleShowMessage	pack/vendor/start/ale-master/autoload/ale/lsp_window.vim	/^function! ale#lsp_window#HandleShowMessage(linter_name, format, params) abort$/;"	f
ale#maven#BuildClasspathCommand	pack/vendor/start/ale-master/autoload/ale/maven.vim	/^function! ale#maven#BuildClasspathCommand(buffer) abort$/;"	f
ale#maven#FindExecutable	pack/vendor/start/ale-master/autoload/ale/maven.vim	/^function! ale#maven#FindExecutable(buffer) abort$/;"	f
ale#maven#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/maven.vim	/^function! ale#maven#FindProjectRoot(buffer) abort$/;"	f
ale#node#Executable	pack/vendor/start/ale-master/autoload/ale/node.vim	/^function! ale#node#Executable(buffer, executable) abort$/;"	f
ale#organize_imports#Execute	pack/vendor/start/ale-master/autoload/ale/organize_imports.vim	/^function! ale#organize_imports#Execute() abort$/;"	f
ale#organize_imports#HandleTSServerResponse	pack/vendor/start/ale-master/autoload/ale/organize_imports.vim	/^function! ale#organize_imports#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#other_source#ShowResults	pack/vendor/start/ale-master/autoload/ale/other_source.vim	/^function! ale#other_source#ShowResults(buffer, linter_name, loclist) abort$/;"	f
ale#other_source#StartChecking	pack/vendor/start/ale-master/autoload/ale/other_source.vim	/^function! ale#other_source#StartChecking(buffer, linter_name) abort$/;"	f
ale#path#Dirname	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#Dirname(path) abort$/;"	f
ale#path#FindExecutable	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#path#FindNearestDirectory	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#FindNearestDirectory(buffer, directory_name) abort$/;"	f
ale#path#FindNearestExecutable	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#FindNearestExecutable(buffer, path_list) abort$/;"	f
ale#path#FindNearestFile	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#FindNearestFile(buffer, filename) abort$/;"	f
ale#path#FromFileURI	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#FromFileURI(uri) abort$/;"	f
ale#path#GetAbsPath	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#GetAbsPath(base_directory, filename) abort$/;"	f
ale#path#IsAbsolute	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#IsAbsolute(filename) abort$/;"	f
ale#path#IsBufferPath	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#IsBufferPath(buffer, complex_filename) abort$/;"	f
ale#path#IsTempName	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#IsTempName(filename) abort$/;"	f
ale#path#RemoveDriveLetter	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#RemoveDriveLetter(path) abort$/;"	f
ale#path#ResolveLocalPath	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#ResolveLocalPath(buffer, search_string, global_fallback) abort$/;"	f
ale#path#Simplify	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#Simplify(path) abort$/;"	f
ale#path#ToFileURI	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#ToFileURI(path) abort$/;"	f
ale#path#Upwards	pack/vendor/start/ale-master/autoload/ale/path.vim	/^function! ale#path#Upwards(path) abort$/;"	f
ale#pattern_options#SetOptions	pack/vendor/start/ale-master/autoload/ale/pattern_options.vim	/^function! ale#pattern_options#SetOptions(buffer) abort$/;"	f
ale#powershell#RunPowerShell	pack/vendor/start/ale-master/autoload/ale/powershell.vim	/^function! ale#powershell#RunPowerShell(buffer, base_var_name, command) abort$/;"	f
ale#preview#CloseIfTypeMatches	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^function! ale#preview#CloseIfTypeMatches(filetype) abort$/;"	f
ale#preview#OpenSelection	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^function! ale#preview#OpenSelection() abort$/;"	f
ale#preview#OpenSelectionInTab	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^function! ale#preview#OpenSelectionInTab() abort$/;"	f
ale#preview#RepeatSelection	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^function! ale#preview#RepeatSelection() abort$/;"	f
ale#preview#SetLastSelection	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^function! ale#preview#SetLastSelection(item_list, options) abort$/;"	f
ale#preview#Show	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^function! ale#preview#Show(lines, ...) abort$/;"	f
ale#preview#ShowSelection	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^function! ale#preview#ShowSelection(item_list, ...) abort$/;"	f
ale#python#FindExecutable	pack/vendor/start/ale-master/autoload/ale/python.vim	/^function! ale#python#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#python#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/python.vim	/^function! ale#python#FindProjectRoot(buffer) abort$/;"	f
ale#python#FindProjectRootIni	pack/vendor/start/ale-master/autoload/ale/python.vim	/^function! ale#python#FindProjectRootIni(buffer) abort$/;"	f
ale#python#FindVirtualenv	pack/vendor/start/ale-master/autoload/ale/python.vim	/^function! ale#python#FindVirtualenv(buffer) abort$/;"	f
ale#python#HandleTraceback	pack/vendor/start/ale-master/autoload/ale/python.vim	/^function! ale#python#HandleTraceback(lines, limit) abort$/;"	f
ale#python#PipenvPresent	pack/vendor/start/ale-master/autoload/ale/python.vim	/^function! ale#python#PipenvPresent(buffer) abort$/;"	f
ale#python#PoetryPresent	pack/vendor/start/ale-master/autoload/ale/python.vim	/^function! ale#python#PoetryPresent(buffer) abort$/;"	f
ale#racket#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/racket.vim	/^function! ale#racket#FindProjectRoot(buffer) abort$/;"	f
ale#references#ClearLSPData	pack/vendor/start/ale-master/autoload/ale/references.vim	/^function! ale#references#ClearLSPData() abort$/;"	f
ale#references#Find	pack/vendor/start/ale-master/autoload/ale/references.vim	/^function! ale#references#Find(...) abort$/;"	f
ale#references#FormatLSPResponseItem	pack/vendor/start/ale-master/autoload/ale/references.vim	/^function! ale#references#FormatLSPResponseItem(response_item, options) abort$/;"	f
ale#references#FormatTSResponseItem	pack/vendor/start/ale-master/autoload/ale/references.vim	/^function! ale#references#FormatTSResponseItem(response_item, options) abort$/;"	f
ale#references#GetMap	pack/vendor/start/ale-master/autoload/ale/references.vim	/^function! ale#references#GetMap() abort$/;"	f
ale#references#HandleLSPResponse	pack/vendor/start/ale-master/autoload/ale/references.vim	/^function! ale#references#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#references#HandleTSServerResponse	pack/vendor/start/ale-master/autoload/ale/references.vim	/^function! ale#references#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#references#SetMap	pack/vendor/start/ale-master/autoload/ale/references.vim	/^function! ale#references#SetMap(map) abort$/;"	f
ale#rename#ClearLSPData	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^function! ale#rename#ClearLSPData() abort$/;"	f
ale#rename#Execute	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^function! ale#rename#Execute() abort$/;"	f
ale#rename#GetMap	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^function! ale#rename#GetMap() abort$/;"	f
ale#rename#HandleLSPResponse	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^function! ale#rename#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#rename#HandleTSServerResponse	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^function! ale#rename#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#rename#SetMap	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^function! ale#rename#SetMap(map) abort$/;"	f
ale#ruby#EscapeExecutable	pack/vendor/start/ale-master/autoload/ale/ruby.vim	/^function! ale#ruby#EscapeExecutable(executable, bundle_exec) abort$/;"	f
ale#ruby#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/ruby.vim	/^function! ale#ruby#FindProjectRoot(buffer) abort$/;"	f
ale#ruby#FindRailsRoot	pack/vendor/start/ale-master/autoload/ale/ruby.vim	/^function! ale#ruby#FindRailsRoot(buffer) abort$/;"	f
ale#ruby#HandleRubocopOutput	pack/vendor/start/ale-master/autoload/ale/ruby.vim	/^function! ale#ruby#HandleRubocopOutput(buffer, lines) abort$/;"	f
ale#semver#GTE	pack/vendor/start/ale-master/autoload/ale/semver.vim	/^function! ale#semver#GTE(lhs, rhs) abort$/;"	f
ale#semver#ParseVersion	pack/vendor/start/ale-master/autoload/ale/semver.vim	/^function! ale#semver#ParseVersion(version_lines) abort$/;"	f
ale#semver#ResetVersionCache	pack/vendor/start/ale-master/autoload/ale/semver.vim	/^function! ale#semver#ResetVersionCache() abort$/;"	f
ale#semver#RunWithVersionCheck	pack/vendor/start/ale-master/autoload/ale/semver.vim	/^function! ale#semver#RunWithVersionCheck(buffer, executable, command, Callback) abort$/;"	f
ale#sign#Clear	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#Clear() abort$/;"	f
ale#sign#FindCurrentSigns	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#FindCurrentSigns(buffer) abort$/;"	f
ale#sign#GetSignCommands	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#GetSignCommands(buffer, was_sign_set, sign_map) abort$/;"	f
ale#sign#GetSignName	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#GetSignName(sublist) abort$/;"	f
ale#sign#ParsePattern	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#ParsePattern() abort$/;"	f
ale#sign#ParseSigns	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#ParseSigns(line_list) abort$/;"	f
ale#sign#ParseSignsWithGetPlaced	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#ParseSignsWithGetPlaced(buffer) abort$/;"	f
ale#sign#ReadSigns	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#ReadSigns(buffer) abort$/;"	f
ale#sign#SetSigns	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#SetSigns(buffer, loclist) abort$/;"	f
ale#sign#SetUpDefaultColumnWithoutErrorsHighlight	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! ale#sign#SetUpDefaultColumnWithoutErrorsHighlight() abort$/;"	f
ale#socket#Close	pack/vendor/start/ale-master/autoload/ale/socket.vim	/^function! ale#socket#Close(channel_id) abort$/;"	f
ale#socket#GetAddress	pack/vendor/start/ale-master/autoload/ale/socket.vim	/^function! ale#socket#GetAddress(channel_id) abort$/;"	f
ale#socket#IsOpen	pack/vendor/start/ale-master/autoload/ale/socket.vim	/^function! ale#socket#IsOpen(channel_id) abort$/;"	f
ale#socket#Open	pack/vendor/start/ale-master/autoload/ale/socket.vim	/^function! ale#socket#Open(address, options) abort$/;"	f
ale#socket#Send	pack/vendor/start/ale-master/autoload/ale/socket.vim	/^function! ale#socket#Send(channel_id, data) abort$/;"	f
ale#statusline#Count	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^function! ale#statusline#Count(buffer) abort$/;"	f
ale#statusline#FirstProblem	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^function! ale#statusline#FirstProblem(buffer, type) abort$/;"	f
ale#statusline#Update	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^function! ale#statusline#Update(buffer, loclist) abort$/;"	f
ale#swift#FindProjectRoot	pack/vendor/start/ale-master/autoload/ale/swift.vim	/^function! ale#swift#FindProjectRoot(buffer) abort$/;"	f
ale#swift#GetAppleSwiftFormatCommand	pack/vendor/start/ale-master/autoload/ale/swift.vim	/^function! ale#swift#GetAppleSwiftFormatCommand(buffer) abort$/;"	f
ale#swift#GetAppleSwiftFormatConfigArgs	pack/vendor/start/ale-master/autoload/ale/swift.vim	/^function! ale#swift#GetAppleSwiftFormatConfigArgs(buffer) abort$/;"	f
ale#swift#GetAppleSwiftFormatExecutable	pack/vendor/start/ale-master/autoload/ale/swift.vim	/^function! ale#swift#GetAppleSwiftFormatExecutable(buffer) abort$/;"	f
ale#symbol#ClearLSPData	pack/vendor/start/ale-master/autoload/ale/symbol.vim	/^function! ale#symbol#ClearLSPData() abort$/;"	f
ale#symbol#GetMap	pack/vendor/start/ale-master/autoload/ale/symbol.vim	/^function! ale#symbol#GetMap() abort$/;"	f
ale#symbol#HandleLSPResponse	pack/vendor/start/ale-master/autoload/ale/symbol.vim	/^function! ale#symbol#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#symbol#Search	pack/vendor/start/ale-master/autoload/ale/symbol.vim	/^function! ale#symbol#Search(args) abort$/;"	f
ale#symbol#SetMap	pack/vendor/start/ale-master/autoload/ale/symbol.vim	/^function! ale#symbol#SetMap(map) abort$/;"	f
ale#test#FlushJobs	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! ale#test#FlushJobs() abort$/;"	f
ale#test#GetFilename	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! ale#test#GetFilename(path) abort$/;"	f
ale#test#GetLoclistWithoutNewerKeys	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! ale#test#GetLoclistWithoutNewerKeys() abort$/;"	f
ale#test#GetPreviewWindowText	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! ale#test#GetPreviewWindowText() abort$/;"	f
ale#test#GetQflistWithoutNewerKeys	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! ale#test#GetQflistWithoutNewerKeys() abort$/;"	f
ale#test#RestoreDirectory	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! ale#test#RestoreDirectory() abort$/;"	f
ale#test#SetDirectory	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! ale#test#SetDirectory(docker_path) abort$/;"	f
ale#test#SetFilename	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! ale#test#SetFilename(path) abort$/;"	f
ale#test#WaitForJobs	pack/vendor/start/ale-master/autoload/ale/test.vim	/^function! ale#test#WaitForJobs(deadline) abort$/;"	f
ale#toggle#Disable	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! ale#toggle#Disable() abort$/;"	f
ale#toggle#DisableBuffer	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! ale#toggle#DisableBuffer(buffer) abort$/;"	f
ale#toggle#Enable	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! ale#toggle#Enable() abort$/;"	f
ale#toggle#EnableBuffer	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! ale#toggle#EnableBuffer(buffer) abort$/;"	f
ale#toggle#Reset	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! ale#toggle#Reset() abort$/;"	f
ale#toggle#ResetBuffer	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! ale#toggle#ResetBuffer(buffer) abort$/;"	f
ale#toggle#Toggle	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! ale#toggle#Toggle() abort$/;"	f
ale#toggle#ToggleBuffer	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! ale#toggle#ToggleBuffer(buffer) abort$/;"	f
ale#uri#Decode	pack/vendor/start/ale-master/autoload/ale/uri.vim	/^function! ale#uri#Decode(value) abort$/;"	f
ale#uri#Encode	pack/vendor/start/ale-master/autoload/ale/uri.vim	/^function! ale#uri#Encode(value) abort$/;"	f
ale#uri#GetURIHandler	pack/vendor/start/ale-master/autoload/ale/uri.vim	/^function! ale#uri#GetURIHandler(uri) abort$/;"	f
ale#uri#jdt#OpenJDTLink	pack/vendor/start/ale-master/autoload/ale/uri/jdt.vim	/^function! ale#uri#jdt#OpenJDTLink(encoded_uri, line, column, options, conn_id) abort$/;"	f
ale#uri#jdt#ReadJDTLink	pack/vendor/start/ale-master/autoload/ale/uri/jdt.vim	/^function! ale#uri#jdt#ReadJDTLink(encoded_uri) abort$/;"	f
ale#util#BinarySearch	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#BinarySearch(loclist, buffer, line, column) abort$/;"	f
ale#util#Col	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#Col(str, chr) abort$/;"	f
ale#util#EscapePCRE	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#EscapePCRE(unsafe_string) abort$/;"	f
ale#util#EscapeVim	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#EscapeVim(unsafe_string) abort$/;"	f
ale#util#Execute	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#Execute(expr) abort$/;"	f
ale#util#FeedKeys	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#FeedKeys(...) abort$/;"	f
ale#util#FindItemAtCursor	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#FindItemAtCursor(buffer) abort$/;"	f
ale#util#FunctionArgCount	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#FunctionArgCount(function) abort$/;"	f
ale#util#FuzzyJSONDecode	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#FuzzyJSONDecode(data, default) abort$/;"	f
ale#util#GetBufferContents	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#GetBufferContents(buffer) abort$/;"	f
ale#util#GetFunction	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#GetFunction(string_or_ref) abort$/;"	f
ale#util#GetItemPriority	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#GetItemPriority(item) abort$/;"	f
ale#util#GetLineCount	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#GetLineCount(buffer) abort$/;"	f
ale#util#GetMatches	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#GetMatches(lines, patterns) abort$/;"	f
ale#util#HasBuflineApi	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#HasBuflineApi() abort$/;"	f
ale#util#InSandbox	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#InSandbox() abort$/;"	f
ale#util#Input	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#Input(message, value, ...) abort$/;"	f
ale#util#JoinNeovimOutput	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#JoinNeovimOutput(job, last_line, data, mode, callback) abort$/;"	f
ale#util#LocItemCompare	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#LocItemCompare(left, right) abort$/;"	f
ale#util#LocItemCompareWithText	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#LocItemCompareWithText(left, right) abort$/;"	f
ale#util#MapMatches	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#MapMatches(lines, patterns, Callback) abort$/;"	f
ale#util#Mode	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#Mode(...) abort$/;"	f
ale#util#Open	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#Open(filename, line, column, options) abort$/;"	f
ale#util#SetBufferContents	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#SetBufferContents(buffer, lines) abort$/;"	f
ale#util#ShowMessage	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#ShowMessage(string, ...) abort$/;"	f
ale#util#StartPartialTimer	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#StartPartialTimer(delay, callback, args) abort$/;"	f
ale#util#StopPartialTimer	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#StopPartialTimer(timer_id) abort$/;"	f
ale#util#Tempname	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#Tempname() abort$/;"	f
ale#util#ToResource	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#ToResource(uri) abort$/;"	f
ale#util#ToURI	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#ToURI(resource) abort$/;"	f
ale#util#Writefile	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! ale#util#Writefile(buffer, lines, filename) abort$/;"	f
ale#virtualtext#Clear	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#Clear(buf) abort$/;"	f
ale#virtualtext#GetHlGroup	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#GetHlGroup(type, style) abort$/;"	f
ale#virtualtext#SetTexts	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#SetTexts(buf, loclist) abort$/;"	f
ale#virtualtext#ShowCursorWarning	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarning(...) abort$/;"	f
ale#virtualtext#ShowCursorWarningWithDelay	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarningWithDelay() abort$/;"	f
ale#virtualtext#ShowMessage	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowMessage(message, hl_group, buf, line) abort$/;"	f
ale_floating_preview_window	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^        augroup ale_floating_preview_window$/;"	a
ale_floating_preview_window	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^    augroup ale_floating_preview_window$/;"	a
ale_linters#ada#adals#GetAdaLSConfig	pack/vendor/start/ale-master/ale_linters/ada/adals.vim	/^function! ale_linters#ada#adals#GetAdaLSConfig(buffer) abort$/;"	f
ale_linters#ada#adals#GetRootDirectory	pack/vendor/start/ale-master/ale_linters/ada/adals.vim	/^function! ale_linters#ada#adals#GetRootDirectory(buffer) abort$/;"	f
ale_linters#ada#gcc#GetCommand	pack/vendor/start/ale-master/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#ada#gcc#Handle	pack/vendor/start/ale-master/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#ansible#ansible_lint#GetCommand	pack/vendor/start/ale-master/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#GetCommand(buffer, version) abort$/;"	f
ale_linters#ansible#ansible_lint#GetExecutable	pack/vendor/start/ale-master/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#GetExecutable(buffer) abort$/;"	f
ale_linters#ansible#ansible_lint#Handle	pack/vendor/start/ale-master/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#Handle(buffer, version, lines) abort$/;"	f
ale_linters#apiblueprint#drafter#HandleErrors	pack/vendor/start/ale-master/ale_linters/apiblueprint/drafter.vim	/^function! ale_linters#apiblueprint#drafter#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#asm#gcc#GetCommand	pack/vendor/start/ale-master/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#asm#gcc#Handle	pack/vendor/start/ale-master/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#avra#avra#GetCommand	pack/vendor/start/ale-master/ale_linters/avra/avra.vim	/^function! ale_linters#avra#avra#GetCommand(buffer) abort$/;"	f
ale_linters#avra#avra#Handle	pack/vendor/start/ale-master/ale_linters/avra/avra.vim	/^function! ale_linters#avra#avra#Handle(buffer, lines) abort$/;"	f
ale_linters#awk#gawk#GetCommand	pack/vendor/start/ale-master/ale_linters/awk/gawk.vim	/^function! ale_linters#awk#gawk#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#GetCommand	pack/vendor/start/ale-master/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#Handle	pack/vendor/start/ale-master/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#Handle(buffer, lines) abort$/;"	f
ale_linters#bib#bibclean#get_type	pack/vendor/start/ale-master/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#get_type(str) abort$/;"	f
ale_linters#bib#bibclean#match_entry	pack/vendor/start/ale-master/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_entry(line) abort$/;"	f
ale_linters#bib#bibclean#match_msg	pack/vendor/start/ale-master/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_msg(line) abort$/;"	f
ale_linters#bib#bibclean#match_value	pack/vendor/start/ale-master/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_value(line) abort$/;"	f
ale_linters#bicep#bicep#Command	pack/vendor/start/ale-master/ale_linters/bicep/bicep.vim	/^function! ale_linters#bicep#bicep#Command(buffer) abort$/;"	f
ale_linters#bicep#bicep#Executable	pack/vendor/start/ale-master/ale_linters/bicep/bicep.vim	/^function! ale_linters#bicep#bicep#Executable(buffer) abort$/;"	f
ale_linters#bicep#bicep#Handle	pack/vendor/start/ale-master/ale_linters/bicep/bicep.vim	/^function! ale_linters#bicep#bicep#Handle(buffer, lines) abort$/;"	f
ale_linters#bitbake#oelint_adv#Command	pack/vendor/start/ale-master/ale_linters/bitbake/oelint_adv.vim	/^function! ale_linters#bitbake#oelint_adv#Command(buffer) abort$/;"	f
ale_linters#bitbake#oelint_adv#Handle	pack/vendor/start/ale-master/ale_linters/bitbake/oelint_adv.vim	/^function! ale_linters#bitbake#oelint_adv#Handle(buffer, lines) abort$/;"	f
ale_linters#c#cc#GetCommand	pack/vendor/start/ale-master/ale_linters/c/cc.vim	/^function! ale_linters#c#cc#GetCommand(buffer, output) abort$/;"	f
ale_linters#c#cc#GetExecutable	pack/vendor/start/ale-master/ale_linters/c/cc.vim	/^function! ale_linters#c#cc#GetExecutable(buffer) abort$/;"	f
ale_linters#c#clangd#GetCommand	pack/vendor/start/ale-master/ale_linters/c/clangd.vim	/^function! ale_linters#c#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#c#clangtidy#GetCommand	pack/vendor/start/ale-master/ale_linters/c/clangtidy.vim	/^function! ale_linters#c#clangtidy#GetCommand(buffer, output) abort$/;"	f
ale_linters#c#cppcheck#GetCommand	pack/vendor/start/ale-master/ale_linters/c/cppcheck.vim	/^function! ale_linters#c#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#c#cpplint#GetCommand	pack/vendor/start/ale-master/ale_linters/c/cpplint.vim	/^function! ale_linters#c#cpplint#GetCommand(buffer) abort$/;"	f
ale_linters#c#cquery#GetInitializationOptions	pack/vendor/start/ale-master/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#c#cquery#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#c#flawfinder#GetCommand	pack/vendor/start/ale-master/ale_linters/c/flawfinder.vim	/^function! ale_linters#c#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#cairo#starknet#GetCommand	pack/vendor/start/ale-master/ale_linters/cairo/starknet.vim	/^function! ale_linters#cairo#starknet#GetCommand(buffer) abort$/;"	f
ale_linters#cairo#starknet#Handle	pack/vendor/start/ale-master/ale_linters/cairo/starknet.vim	/^function! ale_linters#cairo#starknet#Handle(buffer, lines) abort$/;"	f
ale_linters#chef#cookstyle#GetCommand	pack/vendor/start/ale-master/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#GetCommand(buffer) abort$/;"	f
ale_linters#chef#cookstyle#Handle	pack/vendor/start/ale-master/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#chef#foodcritic#GetCommand	pack/vendor/start/ale-master/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#GetCommand(buffer) abort$/;"	f
ale_linters#chef#foodcritic#Handle	pack/vendor/start/ale-master/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#clojure#clj_kondo#GetCommand	pack/vendor/start/ale-master/ale_linters/clojure/clj_kondo.vim	/^function! ale_linters#clojure#clj_kondo#GetCommand(buffer) abort$/;"	f
ale_linters#clojure#clj_kondo#HandleCljKondoFormat	pack/vendor/start/ale-master/ale_linters/clojure/clj_kondo.vim	/^function! ale_linters#clojure#clj_kondo#HandleCljKondoFormat(buffer, lines) abort$/;"	f
ale_linters#clojure#joker#HandleJokerFormat	pack/vendor/start/ale-master/ale_linters/clojure/joker.vim	/^function! ale_linters#clojure#joker#HandleJokerFormat(buffer, lines) abort$/;"	f
ale_linters#cloudformation#cfn_python_lint#Handle	pack/vendor/start/ale-master/ale_linters/cloudformation/cfn_python_lint.vim	/^function! ale_linters#cloudformation#cfn_python_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#cmake#cmake_lint#Command	pack/vendor/start/ale-master/ale_linters/cmake/cmake_lint.vim	/^function! ale_linters#cmake#cmake_lint#Command(buffer) abort$/;"	f
ale_linters#cmake#cmake_lint#Executable	pack/vendor/start/ale-master/ale_linters/cmake/cmake_lint.vim	/^function! ale_linters#cmake#cmake_lint#Executable(buffer) abort$/;"	f
ale_linters#cmake#cmake_lint#Handle	pack/vendor/start/ale-master/ale_linters/cmake/cmake_lint.vim	/^function! ale_linters#cmake#cmake_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#cmake#cmakelint#Command	pack/vendor/start/ale-master/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Command(buffer) abort$/;"	f
ale_linters#cmake#cmakelint#Executable	pack/vendor/start/ale-master/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Executable(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetCommand	pack/vendor/start/ale-master/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetExecutable	pack/vendor/start/ale-master/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetCommand	pack/vendor/start/ale-master/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetExecutable	pack/vendor/start/ale-master/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#Handle	pack/vendor/start/ale-master/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#Handle(buffer, lines) abort$/;"	f
ale_linters#cpp#cc#GetCommand	pack/vendor/start/ale-master/ale_linters/cpp/cc.vim	/^function! ale_linters#cpp#cc#GetCommand(buffer, output) abort$/;"	f
ale_linters#cpp#cc#GetExecutable	pack/vendor/start/ale-master/ale_linters/cpp/cc.vim	/^function! ale_linters#cpp#cc#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#clangcheck#GetCommand	pack/vendor/start/ale-master/ale_linters/cpp/clangcheck.vim	/^function! ale_linters#cpp#clangcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangd#GetCommand	pack/vendor/start/ale-master/ale_linters/cpp/clangd.vim	/^function! ale_linters#cpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangtidy#GetCommand	pack/vendor/start/ale-master/ale_linters/cpp/clangtidy.vim	/^function! ale_linters#cpp#clangtidy#GetCommand(buffer, output) abort$/;"	f
ale_linters#cpp#clazy#GetCommand	pack/vendor/start/ale-master/ale_linters/cpp/clazy.vim	/^function! ale_linters#cpp#clazy#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cppcheck#GetCommand	pack/vendor/start/ale-master/ale_linters/cpp/cppcheck.vim	/^function! ale_linters#cpp#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cpplint#GetCommand	pack/vendor/start/ale-master/ale_linters/cpp/cpplint.vim	/^function! ale_linters#cpp#cpplint#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetInitializationOptions	pack/vendor/start/ale-master/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#cpp#flawfinder#GetCommand	pack/vendor/start/ale-master/ale_linters/cpp/flawfinder.vim	/^function! ale_linters#cpp#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#ameba#GetCommand	pack/vendor/start/ale-master/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#ameba#HandleAmebaOutput	pack/vendor/start/ale-master/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#HandleAmebaOutput(buffer, lines) abort$/;"	f
ale_linters#crystal#crystal#GetCommand	pack/vendor/start/ale-master/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#crystal#Handle	pack/vendor/start/ale-master/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#csc#GetCommand	pack/vendor/start/ale-master/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#csc#GetCwd	pack/vendor/start/ale-master/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#GetCwd(buffer) abort$/;"	f
ale_linters#cs#csc#Handle	pack/vendor/start/ale-master/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcs#GetCommand	pack/vendor/start/ale-master/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcs#Handle	pack/vendor/start/ale-master/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcsc#GetCommand	pack/vendor/start/ale-master/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcsc#GetCwd	pack/vendor/start/ale-master/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCwd(buffer) abort$/;"	f
ale_linters#cs#mcsc#Handle	pack/vendor/start/ale-master/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#Handle(buffer, lines) abort$/;"	f
ale_linters#css#csslint#GetCommand	pack/vendor/start/ale-master/ale_linters/css/csslint.vim	/^function! ale_linters#css#csslint#GetCommand(buffer) abort$/;"	f
ale_linters#css#stylelint#GetCommand	pack/vendor/start/ale-master/ale_linters/css/stylelint.vim	/^function! ale_linters#css#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#css#vscodecss#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/css/vscodecss.vim	/^function! ale_linters#css#vscodecss#GetProjectRoot(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#GetCommand	pack/vendor/start/ale-master/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#GetCommand(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#Handle	pack/vendor/start/ale-master/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#Handle(buffer, lines) abort$/;"	f
ale_linters#cuda#clangd#GetCommand	pack/vendor/start/ale-master/ale_linters/cuda/clangd.vim	/^function! ale_linters#cuda#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#GetCommand	pack/vendor/start/ale-master/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#HandleNVCCFormat	pack/vendor/start/ale-master/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#HandleNVCCFormat(buffer, lines) abort$/;"	f
ale_linters#cypher#cypher_lint#Handle	pack/vendor/start/ale-master/ale_linters/cypher/cypher_lint.vim	/^function! ale_linters#cypher#cypher_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dls#FindProjectRoot	pack/vendor/start/ale-master/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#d#dls#GetExecutable	pack/vendor/start/ale-master/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#GetExecutable(buffer) abort$/;"	f
ale_linters#d#dmd#DMDCommand	pack/vendor/start/ale-master/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#DMDCommand(buffer, dub_output, meta) abort$/;"	f
ale_linters#d#dmd#Handle	pack/vendor/start/ale-master/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dmd#RunDUBCommand	pack/vendor/start/ale-master/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#RunDUBCommand(buffer) abort$/;"	f
ale_linters#dafny#dafny#GetCommand	pack/vendor/start/ale-master/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#GetCommand(buffer) abort$/;"	f
ale_linters#dafny#dafny#Handle	pack/vendor/start/ale-master/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#analysis_server#GetCommand	pack/vendor/start/ale-master/ale_linters/dart/analysis_server.vim	/^function! ale_linters#dart#analysis_server#GetCommand(buffer) abort$/;"	f
ale_linters#dart#analysis_server#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/dart/analysis_server.vim	/^function! ale_linters#dart#analysis_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#dart#dart_analyze#Handle	pack/vendor/start/ale-master/ale_linters/dart/dart_analyze.vim	/^function! ale_linters#dart#dart_analyze#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#language_server#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#desktop#desktop_file_validate#Handle	pack/vendor/start/ale-master/ale_linters/desktop/desktop_file_validate.vim	/^function! ale_linters#desktop#desktop_file_validate#Handle(buffer, lines) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetCommand	pack/vendor/start/ale-master/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetType	pack/vendor/start/ale-master/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetType(type) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#Handle	pack/vendor/start/ale-master/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#dockerfile#hadolint#GetCommand	pack/vendor/start/ale-master/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#GetExecutable	pack/vendor/start/ale-master/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetExecutable(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#Handle	pack/vendor/start/ale-master/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#credo#GetCommand	pack/vendor/start/ale-master/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#credo#GetConfigFile	pack/vendor/start/ale-master/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetConfigFile() abort$/;"	f
ale_linters#elixir#credo#GetMode	pack/vendor/start/ale-master/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetMode() abort$/;"	f
ale_linters#elixir#credo#Handle	pack/vendor/start/ale-master/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dialyxir#Handle	pack/vendor/start/ale-master/ale_linters/elixir/dialyxir.vim	/^function! ale_linters#elixir#dialyxir#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dogma#Handle	pack/vendor/start/ale-master/ale_linters/elixir/dogma.vim	/^function! ale_linters#elixir#dogma#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#elixir_ls#GetExecutable	pack/vendor/start/ale-master/ale_linters/elixir/elixir_ls.vim	/^function! ale_linters#elixir#elixir_ls#GetExecutable(buffer) abort$/;"	f
ale_linters#elixir#mix#GetCommand	pack/vendor/start/ale-master/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#mix#Handle	pack/vendor/start/ale-master/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#FileIsBuffer	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#FileIsBuffer(path) abort$/;"	f
ale_linters#elm#make#GetCommand	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCommand(buffer) abort$/;"	f
ale_linters#elm#make#GetCwd	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCwd(buffer) abort$/;"	f
ale_linters#elm#make#GetExecutable	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetExecutable(buffer) abort$/;"	f
ale_linters#elm#make#GetPackageFile	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetPackageFile(buffer) abort$/;"	f
ale_linters#elm#make#GetRootDir	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetRootDir(buffer) abort$/;"	f
ale_linters#elm#make#Handle	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#HandleElm018Line	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm018Line(line, output) abort$/;"	f
ale_linters#elm#make#HandleElm019Line	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm019Line(line, output) abort$/;"	f
ale_linters#elm#make#IsTest	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsTest(buffer) abort$/;"	f
ale_linters#elm#make#IsVersionGte19	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsVersionGte19(buffer) abort$/;"	f
ale_linters#elm#make#ParseMessage	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessage(message) abort$/;"	f
ale_linters#elm#make#ParseMessageItem	pack/vendor/start/ale-master/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessageItem(item) abort$/;"	f
ale_linters#erlang#dialyzer#FindPlt	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#FindPlt(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetCommand	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetExecutable	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetPlt	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetPlt(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetRebar3Profile	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetRebar3Profile(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#Handle	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#elvis#Handle	pack/vendor/start/ale-master/ale_linters/erlang/elvis.vim	/^function! ale_linters#erlang#elvis#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#erlc#GetCommand	pack/vendor/start/ale-master/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#erlc#GetExecutable	pack/vendor/start/ale-master/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetExecutable(buffer) abort$/;"	f
ale_linters#erlang#erlc#Handle	pack/vendor/start/ale-master/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#GetCommand	pack/vendor/start/ale-master/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#erlang#syntaxerl#Handle	pack/vendor/start/ale-master/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#RunHelpCommand	pack/vendor/start/ale-master/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#RunHelpCommand(buffer) abort$/;"	f
ale_linters#eruby#erb#GetCommand	pack/vendor/start/ale-master/ale_linters/eruby/erb.vim	/^function! ale_linters#eruby#erb#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#erblint#GetCommand	pack/vendor/start/ale-master/ale_linters/eruby/erblint.vim	/^function! ale_linters#eruby#erblint#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#erblint#Handle	pack/vendor/start/ale-master/ale_linters/eruby/erblint.vim	/^function! ale_linters#eruby#erblint#Handle(buffer, lines) abort$/;"	f
ale_linters#eruby#erubi#GetCommand	pack/vendor/start/ale-master/ale_linters/eruby/erubi.vim	/^function! ale_linters#eruby#erubi#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#eruby#erubis#GetCommand	pack/vendor/start/ale-master/ale_linters/eruby/erubis.vim	/^function! ale_linters#eruby#erubis#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetCommand	pack/vendor/start/ale-master/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetType	pack/vendor/start/ale-master/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetType(severity) abort$/;"	f
ale_linters#eruby#ruumba#Handle	pack/vendor/start/ale-master/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#Handle(buffer, lines) abort$/;"	f
ale_linters#fish#fish#Handle	pack/vendor/start/ale-master/ale_linters/fish/fish.vim	/^function! ale_linters#fish#fish#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#gcc#GetCommand	pack/vendor/start/ale-master/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#fortran#gcc#Handle	pack/vendor/start/ale-master/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#language_server#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/fortran/language_server.vim	/^function! ale_linters#fortran#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#GetCommand	pack/vendor/start/ale-master/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#GetCommand(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#Handle	pack/vendor/start/ale-master/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#Handle(buffer, lines) abort$/;"	f
ale_linters#gitcommit#gitlint#GetCommand	pack/vendor/start/ale-master/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetCommand(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#GetExecutable	pack/vendor/start/ale-master/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetExecutable(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#Handle	pack/vendor/start/ale-master/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslang#GetCommand	pack/vendor/start/ale-master/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslang#Handle	pack/vendor/start/ale-master/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslls#GetCommand	pack/vendor/start/ale-master/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslls#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#FindProjectRoot	pack/vendor/start/ale-master/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#GetCommand	pack/vendor/start/ale-master/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetCommand	pack/vendor/start/ale-master/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetMatches	pack/vendor/start/ale-master/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetMatches(lines) abort$/;"	f
ale_linters#go#gobuild#Handler	pack/vendor/start/ale-master/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gofmt#GetCommand	pack/vendor/start/ale-master/ale_linters/go/gofmt.vim	/^function! ale_linters#go#gofmt#GetCommand(buffer) abort$/;"	f
ale_linters#go#golangci_lint#GetCommand	pack/vendor/start/ale-master/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetCommand(buffer) abort$/;"	f
ale_linters#go#golangci_lint#GetMatches	pack/vendor/start/ale-master/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetMatches(lines) abort$/;"	f
ale_linters#go#golangci_lint#Handler	pack/vendor/start/ale-master/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#Handler(buffer, lines) abort$/;"	f
ale_linters#go#golint#GetCommand	pack/vendor/start/ale-master/ale_linters/go/golint.vim	/^function! ale_linters#go#golint#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetCommand	pack/vendor/start/ale-master/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetMatches	pack/vendor/start/ale-master/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetMatches(lines) abort$/;"	f
ale_linters#go#gometalinter#Handler	pack/vendor/start/ale-master/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gopls#FindProjectRoot	pack/vendor/start/ale-master/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#gopls#GetCommand	pack/vendor/start/ale-master/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#GetCommand(buffer) abort$/;"	f
ale_linters#go#gotype#GetCommand	pack/vendor/start/ale-master/ale_linters/go/gotype.vim	/^function! ale_linters#go#gotype#GetCommand(buffer) abort$/;"	f
ale_linters#go#gotype#GetExecutable	pack/vendor/start/ale-master/ale_linters/go/gotype.vim	/^function! ale_linters#go#gotype#GetExecutable(buffer) abort$/;"	f
ale_linters#go#govet#GetCommand	pack/vendor/start/ale-master/ale_linters/go/govet.vim	/^function! ale_linters#go#govet#GetCommand(buffer) abort$/;"	f
ale_linters#go#langserver#GetCommand	pack/vendor/start/ale-master/ale_linters/go/langserver.vim	/^function! ale_linters#go#langserver#GetCommand(buffer) abort$/;"	f
ale_linters#go#revive#GetCommand	pack/vendor/start/ale-master/ale_linters/go/revive.vim	/^function! ale_linters#go#revive#GetCommand(buffer) abort$/;"	f
ale_linters#go#staticcheck#GetCommand	pack/vendor/start/ale-master/ale_linters/go/staticcheck.vim	/^function! ale_linters#go#staticcheck#GetCommand(buffer) abort$/;"	f
ale_linters#hack#hack#GetExecutable	pack/vendor/start/ale-master/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hack#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetProjectRoot(buffer) abort$/;"	f
ale_linters#hack#hhast#GetExecutable	pack/vendor/start/ale-master/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hhast#GetInitializationOptions	pack/vendor/start/ale-master/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#hack#hhast#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetCommand	pack/vendor/start/ale-master/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetCommand(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetExecutable	pack/vendor/start/ale-master/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetExecutable(buffer) abort$/;"	f
ale_linters#haml#hamllint#Handle	pack/vendor/start/ale-master/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#Handle(buffer, lines) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommand	pack/vendor/start/ale-master/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommand(buffer, version) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommandWithVersionCheck	pack/vendor/start/ale-master/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommandWithVersionCheck(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetExecutable	pack/vendor/start/ale-master/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetExecutable(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#Handle	pack/vendor/start/ale-master/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#cabal_ghc#GetCommand	pack/vendor/start/ale-master/ale_linters/haskell/cabal_ghc.vim	/^function! ale_linters#haskell#cabal_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc#GetCommand	pack/vendor/start/ale-master/ale_linters/haskell/ghc.vim	/^function! ale_linters#haskell#ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc_mod#GetCommand	pack/vendor/start/ale-master/ale_linters/haskell/ghc_mod.vim	/^function! ale_linters#haskell#ghc_mod#GetCommand (buffer) abort$/;"	f
ale_linters#haskell#hdevtools#GetCommand	pack/vendor/start/ale-master/ale_linters/haskell/hdevtools.vim	/^function! ale_linters#haskell#hdevtools#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetCommand	pack/vendor/start/ale-master/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haskell#hlint#GetCommand	pack/vendor/start/ale-master/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hlint#Handle	pack/vendor/start/ale-master/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#hls#FindRootFile	pack/vendor/start/ale-master/ale_linters/haskell/hls.vim	/^function! ale_linters#haskell#hls#FindRootFile(buffer) abort$/;"	f
ale_linters#haskell#hls#GetCommand	pack/vendor/start/ale-master/ale_linters/haskell/hls.vim	/^function! ale_linters#haskell#hls#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hls#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/haskell/hls.vim	/^function! ale_linters#haskell#hls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haskell#stack_build#GetCommand	pack/vendor/start/ale-master/ale_linters/haskell/stack_build.vim	/^function! ale_linters#haskell#stack_build#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#stack_ghc#GetCommand	pack/vendor/start/ale-master/ale_linters/haskell/stack_ghc.vim	/^function! ale_linters#haskell#stack_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#html#angular#GetCommand	pack/vendor/start/ale-master/ale_linters/html/angular.vim	/^function! ale_linters#html#angular#GetCommand(buffer) abort$/;"	f
ale_linters#html#angular#GetExecutable	pack/vendor/start/ale-master/ale_linters/html/angular.vim	/^function! ale_linters#html#angular#GetExecutable(buffer) abort$/;"	f
ale_linters#html#angular#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/html/angular.vim	/^function! ale_linters#html#angular#GetProjectRoot(buffer) abort$/;"	f
ale_linters#html#htmlhint#GetCommand	pack/vendor/start/ale-master/ale_linters/html/htmlhint.vim	/^function! ale_linters#html#htmlhint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetCommand	pack/vendor/start/ale-master/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetExecutable	pack/vendor/start/ale-master/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#html#tidy#GetCommand	pack/vendor/start/ale-master/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#GetCommand(buffer) abort$/;"	f
ale_linters#html#tidy#Handle	pack/vendor/start/ale-master/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#Handle(buffer, lines) abort$/;"	f
ale_linters#html#vscodehtml#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/html/vscodehtml.vim	/^function! ale_linters#html#vscodehtml#GetProjectRoot(buffer) abort$/;"	f
ale_linters#idris#idris#GetCommand	pack/vendor/start/ale-master/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#GetCommand(buffer) abort$/;"	f
ale_linters#idris#idris#Handle	pack/vendor/start/ale-master/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#Handle(buffer, lines) abort$/;"	f
ale_linters#ink#ls#FindProjectRoot	pack/vendor/start/ale-master/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#ink#ls#GetCommand	pack/vendor/start/ale-master/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#GetCommand(buffer) abort$/;"	f
ale_linters#ink#ls#GetExecutable	pack/vendor/start/ale-master/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#GetExecutable(buffer) abort$/;"	f
ale_linters#inko#inko#GetCommand	pack/vendor/start/ale-master/ale_linters/inko/inko.vim	/^function! ale_linters#inko#inko#GetCommand(buffer) abort$/;"	f
ale_linters#ispc#ispc#GetCommand	pack/vendor/start/ale-master/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#GetCommand(buffer) abort$/;"	f
ale_linters#ispc#ispc#Handle	pack/vendor/start/ale-master/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#Handle(buffer, lines) abort$/;"	f
ale_linters#java#checkstyle#GetCommand	pack/vendor/start/ale-master/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#GetCommand(buffer) abort$/;"	f
ale_linters#java#checkstyle#Handle	pack/vendor/start/ale-master/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#java#eclipselsp#Command	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Command(buffer, version) abort$/;"	f
ale_linters#java#eclipselsp#CommandWithVersion	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#CommandWithVersion(buffer, version_lines, meta) abort$/;"	f
ale_linters#java#eclipselsp#ConfigurationPath	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#ConfigurationPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#Executable	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Executable(buffer) abort$/;"	f
ale_linters#java#eclipselsp#JarPath	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#JarPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#Javaagent	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Javaagent(buffer) abort$/;"	f
ale_linters#java#eclipselsp#RunWithVersionCheck	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#java#eclipselsp#TargetPath	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#TargetPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#VersionCheck	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#VersionCheck(version_lines) abort$/;"	f
ale_linters#java#eclipselsp#WorkspacePath	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#WorkspacePath(buffer) abort$/;"	f
ale_linters#java#javac#GetCommand	pack/vendor/start/ale-master/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#java#javac#Handle	pack/vendor/start/ale-master/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#Handle(buffer, lines) abort$/;"	f
ale_linters#java#javac#RunWithImportPaths	pack/vendor/start/ale-master/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#java#javalsp#Command	pack/vendor/start/ale-master/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Command(buffer) abort$/;"	f
ale_linters#java#javalsp#Config	pack/vendor/start/ale-master/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Config(buffer) abort$/;"	f
ale_linters#java#javalsp#Executable	pack/vendor/start/ale-master/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Executable(buffer) abort$/;"	f
ale_linters#java#pmd#GetCommand	pack/vendor/start/ale-master/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#GetCommand(buffer) abort$/;"	f
ale_linters#java#pmd#Handle	pack/vendor/start/ale-master/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow#GetCommand	pack/vendor/start/ale-master/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetCommand(buffer, version) abort$/;"	f
ale_linters#javascript#flow#GetExecutable	pack/vendor/start/ale-master/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#flow#Handle	pack/vendor/start/ale-master/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow_ls#FindProjectRoot	pack/vendor/start/ale-master/ale_linters/javascript/flow_ls.vim	/^function! ale_linters#javascript#flow_ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#javascript#jscs#GetCommand	pack/vendor/start/ale-master/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#jscs#Handle	pack/vendor/start/ale-master/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#jshint#GetCommand	pack/vendor/start/ale-master/ale_linters/javascript/jshint.vim	/^function! ale_linters#javascript#jshint#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetCommand	pack/vendor/start/ale-master/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetExecutable	pack/vendor/start/ale-master/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jq#Handle	pack/vendor/start/ale-master/ale_linters/json/jq.vim	/^function! ale_linters#json#jq#Handle(buffer, lines) abort$/;"	f
ale_linters#json#jsonlint#GetCommand	pack/vendor/start/ale-master/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetCommand(buffer) abort$/;"	f
ale_linters#json#jsonlint#GetExecutable	pack/vendor/start/ale-master/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jsonlint#Handle	pack/vendor/start/ale-master/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#Handle(buffer, lines) abort$/;"	f
ale_linters#json#vscodejson#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/json/vscodejson.vim	/^function! ale_linters#json#vscodejson#GetProjectRoot(buffer) abort$/;"	f
ale_linters#jsonnet#jsonnet_lint#GetCommand	pack/vendor/start/ale-master/ale_linters/jsonnet/jsonnet_lint.vim	/^function! ale_linters#jsonnet#jsonnet_lint#GetCommand(buffer) abort$/;"	f
ale_linters#jsonnet#jsonnet_lint#Handle	pack/vendor/start/ale-master/ale_linters/jsonnet/jsonnet_lint.vim	/^function! ale_linters#jsonnet#jsonnet_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#jsonnet#jsonnetfmt#GetCommand	pack/vendor/start/ale-master/ale_linters/jsonnet/jsonnetfmt.vim	/^function! ale_linters#jsonnet#jsonnetfmt#GetCommand(buffer) abort$/;"	f
ale_linters#jsonnet#jsonnetfmt#Handle	pack/vendor/start/ale-master/ale_linters/jsonnet/jsonnetfmt.vim	/^function! ale_linters#jsonnet#jsonnetfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#julia#languageserver#GetCommand	pack/vendor/start/ale-master/ale_linters/julia/languageserver.vim	/^function! ale_linters#julia#languageserver#GetCommand(buffer) abort$/;"	f
ale_linters#kotlin#kotlinc#GetCommand	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#kotlin#kotlinc#Handle	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#Handle(buffer, lines) abort$/;"	f
ale_linters#kotlin#kotlinc#RunWithImportPaths	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#kotlin#languageserver#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/kotlin/languageserver.vim	/^function! ale_linters#kotlin#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#less#lessc#GetCommand	pack/vendor/start/ale-master/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#GetCommand(buffer) abort$/;"	f
ale_linters#less#lessc#Handle	pack/vendor/start/ale-master/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#Handle(buffer, lines) abort$/;"	f
ale_linters#less#stylelint#GetCommand	pack/vendor/start/ale-master/ale_linters/less/stylelint.vim	/^function! ale_linters#less#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#llvm#llc#HandleErrors	pack/vendor/start/ale-master/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#lua#luac#Handle	pack/vendor/start/ale-master/ale_linters/lua/luac.vim	/^function! ale_linters#lua#luac#Handle(buffer, lines) abort$/;"	f
ale_linters#lua#luacheck#GetCommand	pack/vendor/start/ale-master/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#GetCommand(buffer) abort$/;"	f
ale_linters#lua#luacheck#Handle	pack/vendor/start/ale-master/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#lua#selene#GetCommand	pack/vendor/start/ale-master/ale_linters/lua/selene.vim	/^function! ale_linters#lua#selene#GetCommand(buffer) abort$/;"	f
ale_linters#lua#selene#Handle	pack/vendor/start/ale-master/ale_linters/lua/selene.vim	/^function! ale_linters#lua#selene#Handle(buffer, lines) abort$/;"	f
ale_linters#make#checkmake#Handle	pack/vendor/start/ale-master/ale_linters/make/checkmake.vim	/^function! ale_linters#make#checkmake#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#markdownlint#GetCommand	pack/vendor/start/ale-master/ale_linters/markdown/markdownlint.vim	/^function! ale_linters#markdown#markdownlint#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#mdl#GetCommand	pack/vendor/start/ale-master/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#mdl#GetExecutable	pack/vendor/start/ale-master/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetExecutable(buffer) abort$/;"	f
ale_linters#markdown#mdl#Handle	pack/vendor/start/ale-master/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#remark_lint#GetCommand	pack/vendor/start/ale-master/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#remark_lint#Handle	pack/vendor/start/ale-master/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#vale#GetCommand	pack/vendor/start/ale-master/ale_linters/markdown/vale.vim	/^function! ale_linters#markdown#vale#GetCommand(buffer) abort$/;"	f
ale_linters#matlab#mlint#Handle	pack/vendor/start/ale-master/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#Handle(buffer, lines) abort$/;"	f
ale_linters#mercury#mmc#GetCommand	pack/vendor/start/ale-master/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#GetCommand(buffer) abort$/;"	f
ale_linters#mercury#mmc#Handle	pack/vendor/start/ale-master/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#Handle(buffer, lines) abort$/;"	f
ale_linters#nasm#nasm#GetCommand	pack/vendor/start/ale-master/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#GetCommand(buffer) abort$/;"	f
ale_linters#nasm#nasm#Handle	pack/vendor/start/ale-master/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimcheck#GetCommand	pack/vendor/start/ale-master/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimcheck#Handle	pack/vendor/start/ale-master/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimlsp#GetCommand	pack/vendor/start/ale-master/ale_linters/nim/nimlsp.vim	/^function! ale_linters#nim#nimlsp#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimlsp#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/nim/nimlsp.vim	/^function! ale_linters#nim#nimlsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#nix#nix#Command	pack/vendor/start/ale-master/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Command(buffer, output, meta) abort$/;"	f
ale_linters#nix#nix#Handle	pack/vendor/start/ale-master/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Handle(buffer, lines) abort$/;"	f
ale_linters#nix#rnix_lsp#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/nix/rnix_lsp.vim	/^function! ale_linters#nix#rnix_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#nix#statix#GetCommand	pack/vendor/start/ale-master/ale_linters/nix/statix.vim	/^function! ale_linters#nix#statix#GetCommand(buffer) abort$/;"	f
ale_linters#objc#clang#GetCommand	pack/vendor/start/ale-master/ale_linters/objc/clang.vim	/^function! ale_linters#objc#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objc#clangd#GetCommand	pack/vendor/start/ale-master/ale_linters/objc/clangd.vim	/^function! ale_linters#objc#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clang#GetCommand	pack/vendor/start/ale-master/ale_linters/objcpp/clang.vim	/^function! ale_linters#objcpp#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clangd#GetCommand	pack/vendor/start/ale-master/ale_linters/objcpp/clangd.vim	/^function! ale_linters#objcpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#ocaml#merlin#Handle	pack/vendor/start/ale-master/ale_linters/ocaml/merlin.vim	/^function! ale_linters#ocaml#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#ocamlinterface#merlin#Handle	pack/vendor/start/ale-master/ale_linters/ocamlinterface/merlin.vim	/^function! ale_linters#ocamlinterface#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#openapi#ibm_validator#GetCommand	pack/vendor/start/ale-master/ale_linters/openapi/ibm_validator.vim	/^function! ale_linters#openapi#ibm_validator#GetCommand(buffer) abort$/;"	f
ale_linters#openapi#ibm_validator#Handle	pack/vendor/start/ale-master/ale_linters/openapi/ibm_validator.vim	/^function! ale_linters#openapi#ibm_validator#Handle(buffer, lines) abort$/;"	f
ale_linters#openscad#sca2d#GetCommand	pack/vendor/start/ale-master/ale_linters/openscad/sca2d.vim	/^function! ale_linters#openscad#sca2d#GetCommand(buffer) abort$/;"	f
ale_linters#openscad#sca2d#GetExecutable	pack/vendor/start/ale-master/ale_linters/openscad/sca2d.vim	/^function! ale_linters#openscad#sca2d#GetExecutable(buffer) abort$/;"	f
ale_linters#perl#perl#GetCommand	pack/vendor/start/ale-master/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perl#Handle	pack/vendor/start/ale-master/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perlcritic#GetCommand	pack/vendor/start/ale-master/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perlcritic#GetProfile	pack/vendor/start/ale-master/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetProfile(buffer) abort$/;"	f
ale_linters#perl#perlcritic#Handle	pack/vendor/start/ale-master/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#perl6#perl6#ExtractError	pack/vendor/start/ale-master/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#ExtractError(dict, item, type, buffer) abort$/;"	f
ale_linters#perl6#perl6#GetCommand	pack/vendor/start/ale-master/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetCommand(buffer) abort$/;"	f
ale_linters#perl6#perl6#GetExecutable	pack/vendor/start/ale-master/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetExecutable(buffer) abort$/;"	f
ale_linters#perl6#perl6#Handle	pack/vendor/start/ale-master/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#Handle(buffer, lines) abort$/;"	f
ale_linters#php#intelephense#GetInitializationOptions	pack/vendor/start/ale-master/ale_linters/php/intelephense.vim	/^function! ale_linters#php#intelephense#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#php#intelephense#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/php/intelephense.vim	/^function! ale_linters#php#intelephense#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#langserver#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#phan#GetCommand	pack/vendor/start/ale-master/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetCommand(buffer) abort$/;"	f
ale_linters#php#phan#GetExecutable	pack/vendor/start/ale-master/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phan#Handle	pack/vendor/start/ale-master/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#php#Handle	pack/vendor/start/ale-master/ale_linters/php/php.vim	/^function! ale_linters#php#php#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpactor#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/php/phpactor.vim	/^function! ale_linters#php#phpactor#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#phpcs#GetCommand	pack/vendor/start/ale-master/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpcs#Handle	pack/vendor/start/ale-master/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpmd#GetCommand	pack/vendor/start/ale-master/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpmd#Handle	pack/vendor/start/ale-master/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpstan#GetCommand	pack/vendor/start/ale-master/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#GetCommand(buffer, version) abort$/;"	f
ale_linters#php#phpstan#Handle	pack/vendor/start/ale-master/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#psalm#GetCommand	pack/vendor/start/ale-master/ale_linters/php/psalm.vim	/^function! ale_linters#php#psalm#GetCommand(buffer) abort$/;"	f
ale_linters#php#psalm#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/php/psalm.vim	/^function! ale_linters#php#psalm#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#tlint#GetCommand	pack/vendor/start/ale-master/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetCommand(buffer) abort$/;"	f
ale_linters#php#tlint#GetExecutable	pack/vendor/start/ale-master/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetExecutable(buffer) abort$/;"	f
ale_linters#php#tlint#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#tlint#Handle	pack/vendor/start/ale-master/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#Handle(buffer, lines) abort$/;"	f
ale_linters#po#msgfmt#Handle	pack/vendor/start/ale-master/ale_linters/po/msgfmt.vim	/^function! ale_linters#po#msgfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#pony#ponyc#GetCommand	pack/vendor/start/ale-master/ale_linters/pony/ponyc.vim	/^function! ale_linters#pony#ponyc#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetCommand	pack/vendor/start/ale-master/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetExecutable	pack/vendor/start/ale-master/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#powershell#Handle	pack/vendor/start/ale-master/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#Handle(buffer, lines) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetCommand	pack/vendor/start/ale-master/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetExecutable	pack/vendor/start/ale-master/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#Handle	pack/vendor/start/ale-master/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#prolog#swipl#GetCommand	pack/vendor/start/ale-master/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#GetCommand(buffer) abort$/;"	f
ale_linters#prolog#swipl#Handle	pack/vendor/start/ale-master/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#Handle(buffer, lines) abort$/;"	f
ale_linters#proto#buf_lint#GetCommand	pack/vendor/start/ale-master/ale_linters/proto/buf_lint.vim	/^function! ale_linters#proto#buf_lint#GetCommand(buffer) abort$/;"	f
ale_linters#proto#protoc_gen_lint#GetCommand	pack/vendor/start/ale-master/ale_linters/proto/protoc_gen_lint.vim	/^function! ale_linters#proto#protoc_gen_lint#GetCommand(buffer) abort$/;"	f
ale_linters#proto#protolint#GetCommand	pack/vendor/start/ale-master/ale_linters/proto/protolint.vim	/^function! ale_linters#proto#protolint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#GetCommand	pack/vendor/start/ale-master/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#Handle	pack/vendor/start/ale-master/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#languageserver#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/puppet/languageserver.vim	/^function! ale_linters#puppet#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#puppet#puppet#GetCommand	pack/vendor/start/ale-master/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#GetCommand(buffer) abort$/;"	f
ale_linters#puppet#puppet#Handle	pack/vendor/start/ale-master/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#puppetlint#GetCommand	pack/vendor/start/ale-master/ale_linters/puppet/puppetlint.vim	/^function! ale_linters#puppet#puppetlint#GetCommand(buffer) abort$/;"	f
ale_linters#purescript#ls#FindProjectRoot	pack/vendor/start/ale-master/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#purescript#ls#GetCommand	pack/vendor/start/ale-master/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#GetCommand(buffer) abort$/;"	f
ale_linters#purescript#ls#GetExecutable	pack/vendor/start/ale-master/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#GetExecutable(buffer) abort$/;"	f
ale_linters#pyrex#cython#GetCommand	pack/vendor/start/ale-master/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#GetCommand(buffer) abort$/;"	f
ale_linters#pyrex#cython#Handle	pack/vendor/start/ale-master/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#Handle(buffer, lines) abort$/;"	f
ale_linters#python#bandit#GetCommand	pack/vendor/start/ale-master/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetCommand(buffer) abort$/;"	f
ale_linters#python#bandit#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetExecutable(buffer) abort$/;"	f
ale_linters#python#bandit#Handle	pack/vendor/start/ale-master/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#GetCommand	pack/vendor/start/ale-master/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#flake8#GetCwd	pack/vendor/start/ale-master/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCwd(buffer) abort$/;"	f
ale_linters#python#flake8#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flake8#Handle	pack/vendor/start/ale-master/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#RunWithVersionCheck	pack/vendor/start/ale-master/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#python#flakehell#GetCommand	pack/vendor/start/ale-master/ale_linters/python/flakehell.vim	/^function! ale_linters#python#flakehell#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#flakehell#GetCwd	pack/vendor/start/ale-master/ale_linters/python/flakehell.vim	/^function! ale_linters#python#flakehell#GetCwd(buffer) abort$/;"	f
ale_linters#python#flakehell#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/flakehell.vim	/^function! ale_linters#python#flakehell#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flakehell#Handle	pack/vendor/start/ale-master/ale_linters/python/flakehell.vim	/^function! ale_linters#python#flakehell#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flakehell#RunWithVersionCheck	pack/vendor/start/ale-master/ale_linters/python/flakehell.vim	/^function! ale_linters#python#flakehell#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#python#jedils#GetCommand	pack/vendor/start/ale-master/ale_linters/python/jedils.vim	/^function! ale_linters#python#jedils#GetCommand(buffer) abort$/;"	f
ale_linters#python#jedils#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/jedils.vim	/^function! ale_linters#python#jedils#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#GetCommand	pack/vendor/start/ale-master/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCommand(buffer) abort$/;"	f
ale_linters#python#mypy#GetCwd	pack/vendor/start/ale-master/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCwd(buffer) abort$/;"	f
ale_linters#python#mypy#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#Handle	pack/vendor/start/ale-master/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#Handle(buffer, lines) abort$/;"	f
ale_linters#python#prospector#GetCommand	pack/vendor/start/ale-master/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetCommand(buffer) abort$/;"	f
ale_linters#python#prospector#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetExecutable(buffer) abort$/;"	f
ale_linters#python#prospector#Handle	pack/vendor/start/ale-master/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pycodestyle#GetCommand	pack/vendor/start/ale-master/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pycodestyle#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pycodestyle#Handle	pack/vendor/start/ale-master/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pydocstyle#GetCommand	pack/vendor/start/ale-master/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pydocstyle#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pydocstyle#Handle	pack/vendor/start/ale-master/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyflakes#GetCommand	pack/vendor/start/ale-master/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyflakes#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyflakes#Handle	pack/vendor/start/ale-master/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylama#GetCommand	pack/vendor/start/ale-master/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#pylama#GetCwd	pack/vendor/start/ale-master/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetCwd(buffer) abort$/;"	f
ale_linters#python#pylama#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylama#Handle	pack/vendor/start/ale-master/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#Handle(buffer, version, lines) abort$/;"	f
ale_linters#python#pylama#RunWithVersionCheck	pack/vendor/start/ale-master/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#python#pylint#GetCommand	pack/vendor/start/ale-master/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#pylint#GetCwd	pack/vendor/start/ale-master/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCwd(buffer) abort$/;"	f
ale_linters#python#pylint#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylint#Handle	pack/vendor/start/ale-master/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylsp#GetCommand	pack/vendor/start/ale-master/ale_linters/python/pylsp.vim	/^function! ale_linters#python#pylsp#GetCommand(buffer) abort$/;"	f
ale_linters#python#pylsp#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/pylsp.vim	/^function! ale_linters#python#pylsp#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyre#GetCommand	pack/vendor/start/ale-master/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyre#GetCwd	pack/vendor/start/ale-master/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetCwd(buffer) abort$/;"	f
ale_linters#python#pyre#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyright#GetConfig	pack/vendor/start/ale-master/ale_linters/python/pyright.vim	/^function! ale_linters#python#pyright#GetConfig(buffer) abort$/;"	f
ale_linters#python#unimport#GetCommand	pack/vendor/start/ale-master/ale_linters/python/unimport.vim	/^function! ale_linters#python#unimport#GetCommand(buffer) abort$/;"	f
ale_linters#python#unimport#GetCwd	pack/vendor/start/ale-master/ale_linters/python/unimport.vim	/^function! ale_linters#python#unimport#GetCwd(buffer) abort$/;"	f
ale_linters#python#unimport#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/unimport.vim	/^function! ale_linters#python#unimport#GetExecutable(buffer) abort$/;"	f
ale_linters#python#unimport#Handle	pack/vendor/start/ale-master/ale_linters/python/unimport.vim	/^function! ale_linters#python#unimport#Handle(buffer, lines) abort$/;"	f
ale_linters#python#vulture#GetCommand	pack/vendor/start/ale-master/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetCommand(buffer) abort$/;"	f
ale_linters#python#vulture#GetCwd	pack/vendor/start/ale-master/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetCwd(buffer) abort$/;"	f
ale_linters#python#vulture#GetExecutable	pack/vendor/start/ale-master/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetExecutable(buffer) abort$/;"	f
ale_linters#python#vulture#Handle	pack/vendor/start/ale-master/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmlfmt#Handle	pack/vendor/start/ale-master/ale_linters/qml/qmlfmt.vim	/^function! ale_linters#qml#qmlfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmllint#Handle	pack/vendor/start/ale-master/ale_linters/qml/qmllint.vim	/^function! ale_linters#qml#qmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#r#languageserver#GetCommand	pack/vendor/start/ale-master/ale_linters/r/languageserver.vim	/^function! ale_linters#r#languageserver#GetCommand(buffer) abort$/;"	f
ale_linters#r#languageserver#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/r/languageserver.vim	/^function! ale_linters#r#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#r#lintr#GetCommand	pack/vendor/start/ale-master/ale_linters/r/lintr.vim	/^function! ale_linters#r#lintr#GetCommand(buffer) abort$/;"	f
ale_linters#racket#raco#Handle	pack/vendor/start/ale-master/ale_linters/racket/raco.vim	/^function! ale_linters#racket#raco#Handle(buffer, lines) abort$/;"	f
ale_linters#reason#ls#FindProjectRoot	pack/vendor/start/ale-master/ale_linters/reason/ls.vim	/^function! ale_linters#reason#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#reason#merlin#Handle	pack/vendor/start/ale-master/ale_linters/reason/merlin.vim	/^function! ale_linters#reason#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#rego#opacheck#GetCommand	pack/vendor/start/ale-master/ale_linters/rego/opacheck.vim	/^function! ale_linters#rego#opacheck#GetCommand(buffer) abort$/;"	f
ale_linters#rego#opacheck#GetExecutable	pack/vendor/start/ale-master/ale_linters/rego/opacheck.vim	/^function! ale_linters#rego#opacheck#GetExecutable(buffer) abort$/;"	f
ale_linters#rego#opacheck#Handle	pack/vendor/start/ale-master/ale_linters/rego/opacheck.vim	/^function! ale_linters#rego#opacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#robot#rflint#GetCommand	pack/vendor/start/ale-master/ale_linters/robot/rflint.vim	/^function! ale_linters#robot#rflint#GetCommand(buffer) abort$/;"	f
ale_linters#robot#rflint#GetExecutable	pack/vendor/start/ale-master/ale_linters/robot/rflint.vim	/^function! ale_linters#robot#rflint#GetExecutable(buffer) abort$/;"	f
ale_linters#robot#rflint#Handle	pack/vendor/start/ale-master/ale_linters/robot/rflint.vim	/^function! ale_linters#robot#rflint#Handle(buffer, lines) abort$/;"	f
ale_linters#rst#rstcheck#Handle	pack/vendor/start/ale-master/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#brakeman#GetCommand	pack/vendor/start/ale-master/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#brakeman#Handle	pack/vendor/start/ale-master/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#debride#GetCommand	pack/vendor/start/ale-master/ale_linters/ruby/debride.vim	/^function! ale_linters#ruby#debride#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#debride#HandleOutput	pack/vendor/start/ale-master/ale_linters/ruby/debride.vim	/^function! ale_linters#ruby#debride#HandleOutput(buffer, lines) abort$/;"	f
ale_linters#ruby#rails_best_practices#GetCommand	pack/vendor/start/ale-master/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rails_best_practices#Handle	pack/vendor/start/ale-master/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#reek#GetCommand	pack/vendor/start/ale-master/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#GetCommand(buffer, version) abort$/;"	f
ale_linters#ruby#reek#Handle	pack/vendor/start/ale-master/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rubocop#GetCommand	pack/vendor/start/ale-master/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rubocop#GetType	pack/vendor/start/ale-master/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetType(severity) abort$/;"	f
ale_linters#ruby#solargraph#GetCommand	pack/vendor/start/ale-master/ale_linters/ruby/solargraph.vim	/^function! ale_linters#ruby#solargraph#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#sorbet#GetCommand	pack/vendor/start/ale-master/ale_linters/ruby/sorbet.vim	/^function! ale_linters#ruby#sorbet#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#standardrb#GetCommand	pack/vendor/start/ale-master/ale_linters/ruby/standardrb.vim	/^function! ale_linters#ruby#standardrb#GetCommand(buffer) abort$/;"	f
ale_linters#rust#analyzer#GetCommand	pack/vendor/start/ale-master/ale_linters/rust/analyzer.vim	/^function! ale_linters#rust#analyzer#GetCommand(buffer) abort$/;"	f
ale_linters#rust#analyzer#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/rust/analyzer.vim	/^function! ale_linters#rust#analyzer#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#cargo#GetCargoExecutable	pack/vendor/start/ale-master/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCargoExecutable(bufnr) abort$/;"	f
ale_linters#rust#cargo#GetCommand	pack/vendor/start/ale-master/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCommand(buffer, version) abort$/;"	f
ale_linters#rust#cargo#GetCwd	pack/vendor/start/ale-master/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCwd(buffer) abort$/;"	f
ale_linters#rust#rls#GetCommand	pack/vendor/start/ale-master/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetCommand(buffer) abort$/;"	f
ale_linters#rust#rls#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#rustc#RustcCommand	pack/vendor/start/ale-master/ale_linters/rust/rustc.vim	/^function! ale_linters#rust#rustc#RustcCommand(buffer) abort$/;"	f
ale_linters#salt#salt_lint#GetCommand	pack/vendor/start/ale-master/ale_linters/salt/salt_lint.vim	/^function! ale_linters#salt#salt_lint#GetCommand(buffer) abort$/;"	f
ale_linters#salt#salt_lint#Handle	pack/vendor/start/ale-master/ale_linters/salt/salt_lint.vim	/^function! ale_linters#salt#salt_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#sass#sasslint#GetCommand	pack/vendor/start/ale-master/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#sass#sasslint#GetExecutable	pack/vendor/start/ale-master/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scala#metals#GetCommand	pack/vendor/start/ale-master/ale_linters/scala/metals.vim	/^function! ale_linters#scala#metals#GetCommand(buffer) abort$/;"	f
ale_linters#scala#metals#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/scala/metals.vim	/^function! ale_linters#scala#metals#GetProjectRoot(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetAddress	pack/vendor/start/ale-master/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetAddress(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#scala#scalastyle#GetCommand	pack/vendor/start/ale-master/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#GetCommand(buffer) abort$/;"	f
ale_linters#scala#scalastyle#Handle	pack/vendor/start/ale-master/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#sasslint#GetCommand	pack/vendor/start/ale-master/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#scss#sasslint#GetExecutable	pack/vendor/start/ale-master/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scss#scsslint#Handle	pack/vendor/start/ale-master/ale_linters/scss/scsslint.vim	/^function! ale_linters#scss#scsslint#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#stylelint#GetCommand	pack/vendor/start/ale-master/ale_linters/scss/stylelint.vim	/^function! ale_linters#scss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sh#bashate#GetCommand	pack/vendor/start/ale-master/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#GetCommand(buffer) abort$/;"	f
ale_linters#sh#bashate#GetExecutable	pack/vendor/start/ale-master/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#bashate#Handle	pack/vendor/start/ale-master/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#Handle(buffer, lines) abort$/;"	f
ale_linters#sh#language_server#GetCommand	pack/vendor/start/ale-master/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetCommand(buffer) abort$/;"	f
ale_linters#sh#language_server#GetExecutable	pack/vendor/start/ale-master/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#language_server#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#sh#shell#GetCommand	pack/vendor/start/ale-master/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetCommand(buffer) abort$/;"	f
ale_linters#sh#shell#GetExecutable	pack/vendor/start/ale-master/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shell#Handle	pack/vendor/start/ale-master/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#Handle(buffer, lines) abort$/;"	f
ale_linters#slim#slimlint#GetCommand	pack/vendor/start/ale-master/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#GetCommand(buffer) abort$/;"	f
ale_linters#slim#slimlint#Handle	pack/vendor/start/ale-master/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sml#smlnj_cm#GetCommand	pack/vendor/start/ale-master/ale_linters/sml/smlnj_cm.vim	/^function! ale_linters#sml#smlnj_cm#GetCommand(buffer) abort$/;"	f
ale_linters#solidity#solc#GetCommand	pack/vendor/start/ale-master/ale_linters/solidity/solc.vim	/^function! ale_linters#solidity#solc#GetCommand(buffer) abort$/;"	f
ale_linters#solidity#solc#Handle	pack/vendor/start/ale-master/ale_linters/solidity/solc.vim	/^function! ale_linters#solidity#solc#Handle(buffer, lines) abort$/;"	f
ale_linters#spec#rpmlint#GetCommand	pack/vendor/start/ale-master/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#GetCommand(buffer, version) abort$/;"	f
ale_linters#spec#rpmlint#Handle	pack/vendor/start/ale-master/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqlint#Handle	pack/vendor/start/ale-master/ale_linters/sql/sqlint.vim	/^function! ale_linters#sql#sqlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqllint#Handle	pack/vendor/start/ale-master/ale_linters/sql/sqllint.vim	/^function! ale_linters#sql#sqllint#Handle(buffer, lines) abort$/;"	f
ale_linters#stylus#stylelint#GetCommand	pack/vendor/start/ale-master/ale_linters/stylus/stylelint.vim	/^function! ale_linters#stylus#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sugarss#stylelint#GetCommand	pack/vendor/start/ale-master/ale_linters/sugarss/stylelint.vim	/^function! ale_linters#sugarss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#svelte#svelteserver#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/svelte/svelteserver.vim	/^function! ale_linters#svelte#svelteserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#swift#appleswiftformat#GetLinterCommand	pack/vendor/start/ale-master/ale_linters/swift/appleswiftformat.vim	/^function! ale_linters#swift#appleswiftformat#GetLinterCommand(buffer) abort$/;"	f
ale_linters#swift#appleswiftformat#Handle	pack/vendor/start/ale-master/ale_linters/swift/appleswiftformat.vim	/^function! ale_linters#swift#appleswiftformat#Handle(buffer, lines) abort$/;"	f
ale_linters#swift#swiftlint#GetCommand	pack/vendor/start/ale-master/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetCommand(buffer) abort$/;"	f
ale_linters#swift#swiftlint#GetExecutable	pack/vendor/start/ale-master/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetExecutable(buffer) abort$/;"	f
ale_linters#swift#swiftlint#Handle	pack/vendor/start/ale-master/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#Handle(buffer, lines) abort$/;"	f
ale_linters#systemd#systemd_analyze#Handle	pack/vendor/start/ale-master/ale_linters/systemd/systemd_analyze.vim	/^function! ale_linters#systemd#systemd_analyze#Handle(buffer, lines) abort$/;"	f
ale_linters#tcl#nagelfar#GetCommand	pack/vendor/start/ale-master/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#GetCommand(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#Handle	pack/vendor/start/ale-master/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#checkov#GetCommand	pack/vendor/start/ale-master/ale_linters/terraform/checkov.vim	/^function! ale_linters#terraform#checkov#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#checkov#GetExecutable	pack/vendor/start/ale-master/ale_linters/terraform/checkov.vim	/^function! ale_linters#terraform#checkov#GetExecutable(buffer) abort$/;"	f
ale_linters#terraform#checkov#Handle	pack/vendor/start/ale-master/ale_linters/terraform/checkov.vim	/^function! ale_linters#terraform#checkov#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#terraform#GetCommand	pack/vendor/start/ale-master/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform#GetDetail	pack/vendor/start/ale-master/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetDetail(error) abort$/;"	f
ale_linters#terraform#terraform#GetExecutable	pack/vendor/start/ale-master/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetExecutable(buffer) abort$/;"	f
ale_linters#terraform#terraform#GetType	pack/vendor/start/ale-master/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetType(severity) abort$/;"	f
ale_linters#terraform#terraform#Handle	pack/vendor/start/ale-master/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#terraform_ls#GetCommand	pack/vendor/start/ale-master/ale_linters/terraform/terraform_ls.vim	/^function! ale_linters#terraform#terraform_ls#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform_ls#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/terraform/terraform_ls.vim	/^function! ale_linters#terraform#terraform_ls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#terraform#terraform_ls#GetTerraformExecutable	pack/vendor/start/ale-master/ale_linters/terraform/terraform_ls.vim	/^function! ale_linters#terraform#terraform_ls#GetTerraformExecutable(buffer) abort$/;"	f
ale_linters#terraform#terraform_lsp#GetCommand	pack/vendor/start/ale-master/ale_linters/terraform/terraform_lsp.vim	/^function! ale_linters#terraform#terraform_lsp#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform_lsp#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/terraform/terraform_lsp.vim	/^function! ale_linters#terraform#terraform_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#terraform#tflint#GetCommand	pack/vendor/start/ale-master/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#tflint#Handle	pack/vendor/start/ale-master/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#chktex#GetCommand	pack/vendor/start/ale-master/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#GetCommand(buffer) abort$/;"	f
ale_linters#tex#chktex#Handle	pack/vendor/start/ale-master/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#lacheck#Handle	pack/vendor/start/ale-master/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#texlab#GetCommand	pack/vendor/start/ale-master/ale_linters/tex/texlab.vim	/^function! ale_linters#tex#texlab#GetCommand(buffer) abort$/;"	f
ale_linters#tex#texlab#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/tex/texlab.vim	/^function! ale_linters#tex#texlab#GetProjectRoot(buffer) abort$/;"	f
ale_linters#thrift#thrift#GetCommand	pack/vendor/start/ale-master/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#GetCommand(buffer) abort$/;"	f
ale_linters#thrift#thrift#Handle	pack/vendor/start/ale-master/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#Handle(buffer, lines) abort$/;"	f
ale_linters#thrift#thriftcheck#GetCommand	pack/vendor/start/ale-master/ale_linters/thrift/thriftcheck.vim	/^function! ale_linters#thrift#thriftcheck#GetCommand(buffer) abort$/;"	f
ale_linters#thrift#thriftcheck#Handle	pack/vendor/start/ale-master/ale_linters/thrift/thriftcheck.vim	/^function! ale_linters#thrift#thriftcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#standard#GetCommand	pack/vendor/start/ale-master/ale_linters/typescript/standard.vim	/^function! ale_linters#typescript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#standard#GetExecutable	pack/vendor/start/ale-master/ale_linters/typescript/standard.vim	/^function! ale_linters#typescript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#typescript#tslint#GetCommand	pack/vendor/start/ale-master/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#tslint#Handle	pack/vendor/start/ale-master/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#typecheck#Handle	pack/vendor/start/ale-master/ale_linters/typescript/typecheck.vim	/^function! ale_linters#typescript#typecheck#Handle(buffer, lines) abort$/;"	f
ale_linters#v#v#GetCommand	pack/vendor/start/ale-master/ale_linters/v/v.vim	/^function! ale_linters#v#v#GetCommand(buffer) abort$/;"	f
ale_linters#v#v#Handler	pack/vendor/start/ale-master/ale_linters/v/v.vim	/^function! ale_linters#v#v#Handler(buffer, lines) abort$/;"	f
ale_linters#vala#vala_lint#GetCommand	pack/vendor/start/ale-master/ale_linters/vala/vala_lint.vim	/^function! ale_linters#vala#vala_lint#GetCommand(buffer) abort$/;"	f
ale_linters#vala#vala_lint#GetExecutable	pack/vendor/start/ale-master/ale_linters/vala/vala_lint.vim	/^function! ale_linters#vala#vala_lint#GetExecutable(buffer) abort$/;"	f
ale_linters#vala#vala_lint#Handle	pack/vendor/start/ale-master/ale_linters/vala/vala_lint.vim	/^function! ale_linters#vala#vala_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#iverilog#GetCommand	pack/vendor/start/ale-master/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#iverilog#Handle	pack/vendor/start/ale-master/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#verilator#GetCommand	pack/vendor/start/ale-master/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#verilator#Handle	pack/vendor/start/ale-master/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#vlog#GetCommand	pack/vendor/start/ale-master/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#vlog#Handle	pack/vendor/start/ale-master/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#xvlog#GetCommand	pack/vendor/start/ale-master/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#xvlog#Handle	pack/vendor/start/ale-master/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#yosys#GetCommand	pack/vendor/start/ale-master/ale_linters/verilog/yosys.vim	/^function! ale_linters#verilog#yosys#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#yosys#Handle	pack/vendor/start/ale-master/ale_linters/verilog/yosys.vim	/^function! ale_linters#verilog#yosys#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#ghdl#GetCommand	pack/vendor/start/ale-master/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#ghdl#Handle	pack/vendor/start/ale-master/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#vcom#GetCommand	pack/vendor/start/ale-master/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#vcom#Handle	pack/vendor/start/ale-master/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#xvhdl#GetCommand	pack/vendor/start/ale-master/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#xvhdl#Handle	pack/vendor/start/ale-master/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetCommand	pack/vendor/start/ale-master/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetCommand(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetCwd	pack/vendor/start/ale-master/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetCwd(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetExecutable	pack/vendor/start/ale-master/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetExecutable(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#Handle	pack/vendor/start/ale-master/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#vimls#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/vim/vimls.vim	/^function! ale_linters#vim#vimls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#vim#vint#GetCommand	pack/vendor/start/ale-master/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#GetCommand(buffer, version) abort$/;"	f
ale_linters#vim#vint#Handle	pack/vendor/start/ale-master/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#Handle(buffer, lines) abort$/;"	f
ale_linters#vue#vls#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/vue/vls.vim	/^function! ale_linters#vue#vls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#vue#volar#GetInitializationOptions	pack/vendor/start/ale-master/ale_linters/vue/volar.vim	/^function! ale_linters#vue#volar#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#vue#volar#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/vue/volar.vim	/^function! ale_linters#vue#volar#GetProjectRoot(buffer) abort$/;"	f
ale_linters#xml#xmllint#GetCommand	pack/vendor/start/ale-master/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#GetCommand(buffer) abort$/;"	f
ale_linters#xml#xmllint#Handle	pack/vendor/start/ale-master/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#circleci#Handle	pack/vendor/start/ale-master/ale_linters/yaml/circleci.vim	/^function! ale_linters#yaml#circleci#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#gitlablint#GetCommand	pack/vendor/start/ale-master/ale_linters/yaml/gitlablint.vim	/^function! ale_linters#yaml#gitlablint#GetCommand(buffer) abort$/;"	f
ale_linters#yaml#gitlablint#Handle	pack/vendor/start/ale-master/ale_linters/yaml/gitlablint.vim	/^function! ale_linters#yaml#gitlablint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#ls#FindProjectRoot	pack/vendor/start/ale-master/ale_linters/yaml/ls.vim	/^function! ale_linters#yaml#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#yaml#ls#GetCommand	pack/vendor/start/ale-master/ale_linters/yaml/ls.vim	/^function! ale_linters#yaml#ls#GetCommand(buffer) abort$/;"	f
ale_linters#yaml#ls#GetExecutable	pack/vendor/start/ale-master/ale_linters/yaml/ls.vim	/^function! ale_linters#yaml#ls#GetExecutable(buffer) abort$/;"	f
ale_linters#yaml#swaglint#Handle	pack/vendor/start/ale-master/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#Handle(buffer, lines) abort$/;"	f
ale_linters#yang#yang_lsp#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/yang/yang_lsp.vim	/^function! ale_linters#yang#yang_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#zeek#zeek#HandleErrors	pack/vendor/start/ale-master/ale_linters/zeek/zeek.vim	/^function! ale_linters#zeek#zeek#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#zig#zls#GetProjectRoot	pack/vendor/start/ale-master/ale_linters/zig/zls.vim	/^function! ale_linters#zig#zls#GetProjectRoot(buffer) abort$/;"	f
args_file	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^    args_file = ['.clang_complete', '.clang']$/;"	v	class:Clang
ast_pat	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^ast_pat = re.compile($/;"	v
asyncomplete#sources#ale#completor	pack/vendor/start/ale-master/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#completor(options, context) abort$/;"	f
asyncomplete#sources#ale#get_source_options	pack/vendor/start/ale-master/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#get_source_options(...) abort$/;"	f
asyncomplete#sources#ale#get_triggers	pack/vendor/start/ale-master/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#get_triggers() abort$/;"	f
asyncrun#fullname	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#fullname(f)$/;"	f
asyncrun#get_root	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#get_root(path, ...)$/;"	f
asyncrun#macos#check	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#check()$/;"	f
asyncrun#macos#iterm_activate	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#iterm_activate(pid)$/;"	f
asyncrun#macos#iterm_new_version	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#iterm_new_version() abort$/;"	f
asyncrun#macos#iterm_spawn2	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#iterm_spawn2(script, opts, activate) abort$/;"	f
asyncrun#macos#iterm_spawn3	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#iterm_spawn3(script, opts, activate) abort$/;"	f
asyncrun#macos#open_iterm	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#open_iterm(script, opts)$/;"	f
asyncrun#macos#open_system	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#open_system(title, script, profile)$/;"	f
asyncrun#macos#open_terminal	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#open_terminal(title, script, profile, active)$/;"	f
asyncrun#macos#osascript	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#osascript(content, wait)$/;"	f
asyncrun#macos#pause_script	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#pause_script()$/;"	f
asyncrun#macos#script_name	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#script_name(name)$/;"	f
asyncrun#macos#script_write	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#script_write(name, content)$/;"	f
asyncrun#macos#start_command	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! asyncrun#macos#start_command(runner, opts)$/;"	f
asyncrun#path_join	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#path_join(home, name)$/;"	f
asyncrun#path_win2unix	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#path_win2unix(winpath, prefix)$/;"	f
asyncrun#program#shebang#translate	pack/vendor/start/asyncrun.vim/autoload/asyncrun/program/shebang.vim	/^function! asyncrun#program#shebang#translate(opts)$/;"	f
asyncrun#quickfix_toggle	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#quickfix_toggle(size, ...)$/;"	f
asyncrun#reset	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#reset()$/;"	f
asyncrun#run	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#run(bang, opts, args, ...)$/;"	f
asyncrun#runner#external#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/external.vim	/^function! asyncrun#runner#external#run(opts)$/;"	f
asyncrun#runner#floaterm#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/floaterm.vim	/^function! asyncrun#runner#floaterm#run(opts)$/;"	f
asyncrun#runner#floaterm_reuse#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/floaterm_reuse.vim	/^function! asyncrun#runner#floaterm_reuse#run(opts)$/;"	f
asyncrun#runner#gnome#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/gnome.vim	/^function! asyncrun#runner#gnome#run(opts)$/;"	f
asyncrun#runner#gnome_tab#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/gnome_tab.vim	/^function! asyncrun#runner#gnome_tab#run(opts)$/;"	f
asyncrun#runner#iterm#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/iterm.vim	/^function! asyncrun#runner#iterm#run(opts)$/;"	f
asyncrun#runner#konsole#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/konsole.vim	/^function! asyncrun#runner#konsole#run(opts)$/;"	f
asyncrun#runner#macos#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/macos.vim	/^function! asyncrun#runner#macos#run(opts)$/;"	f
asyncrun#runner#quickui#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/quickui.vim	/^function! asyncrun#runner#quickui#run(argv)$/;"	f
asyncrun#runner#termhelp#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/termhelp.vim	/^function! asyncrun#runner#termhelp#run(args)$/;"	f
asyncrun#runner#tmux#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/tmux.vim	/^function! asyncrun#runner#tmux#run(opts)$/;"	f
asyncrun#runner#toggleterm#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/toggleterm.vim	/^function! asyncrun#runner#toggleterm#run(opts)$/;"	f
asyncrun#runner#xfce#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/xfce.vim	/^function! asyncrun#runner#xfce#run(opts)$/;"	f
asyncrun#runner#xterm#run	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/xterm.vim	/^function! asyncrun#runner#xterm#run(opts)$/;"	f
asyncrun#script_write	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#script_write(command, pause)$/;"	f
asyncrun#status	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#status()$/;"	f
asyncrun#stop	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#stop(bang)$/;"	f
asyncrun#translate	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#translate(program, command)$/;"	f
asyncrun#utils#errmsg	pack/vendor/start/asyncrun.vim/autoload/asyncrun/utils.vim	/^function! asyncrun#utils#errmsg(msg)$/;"	f
asyncrun#utils#isolate	pack/vendor/start/asyncrun.vim/autoload/asyncrun/utils.vim	/^function! asyncrun#utils#isolate(request, keep, ...) abort$/;"	f
asyncrun#utils#replace	pack/vendor/start/asyncrun.vim/autoload/asyncrun/utils.vim	/^function! asyncrun#utils#replace(text, old, new)$/;"	f
asyncrun#utils#require	pack/vendor/start/asyncrun.vim/autoload/asyncrun/utils.vim	/^function! asyncrun#utils#require(what)$/;"	f
asyncrun#utils#set_title	pack/vendor/start/asyncrun.vim/autoload/asyncrun/utils.vim	/^function! asyncrun#utils#set_title(title, expanded)$/;"	f
asyncrun#utils#shellescape	pack/vendor/start/asyncrun.vim/autoload/asyncrun/utils.vim	/^function! asyncrun#utils#shellescape(...) abort$/;"	f
asyncrun#utils#strip	pack/vendor/start/asyncrun.vim/autoload/asyncrun/utils.vim	/^function! asyncrun#utils#strip(text)$/;"	f
asyncrun#utils#tempname	pack/vendor/start/asyncrun.vim/autoload/asyncrun/utils.vim	/^function! asyncrun#utils#tempname() abort$/;"	f
asyncrun#version	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! asyncrun#version()$/;"	f
asyncrun_augroup	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	augroup asyncrun_augroup$/;"	a
asyncrun_event.program	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^function! g:asyncrun_event.program(name)$/;"	f
asyncrun_event.runner	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^function! g:asyncrun_event.runner(name)$/;"	f
b	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map b <Plug>(easymotion-b)$/;"	m
b	pack/vendor/start/vim-easymotion-master/t/operator_pending_spec.vim	/^        omap b <Plug>(easymotion-b)$/;"	m
b	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> b             :call startify#set_mark('B')<cr>$/;"	m
b.get_group	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_group	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_posttitle	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_posttitle(i) dict$/;"	f
b.get_pretitle	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_pretitle(i) dict$/;"	f
b.get_title	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_title(i) dict$/;"	f
b.get_title	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_title(i) dict$/;"	f
b:current_syntax	pack/vendor/start/ale-master/syntax/ale-fix-suggest.vim	/^let b:current_syntax = 'ale-fix-suggest'$/;"	v
b:current_syntax	pack/vendor/start/ale-master/syntax/ale-preview-selection.vim	/^let b:current_syntax = 'ale-preview-selection'$/;"	v
b:current_syntax	pack/vendor/start/tagbar-master/syntax/tagbar.vim	/^let b:current_syntax = 'tagbar'$/;"	v
b:current_syntax	pack/vendor/start/vim-startify-master/syntax/startify.vim	/^let b:current_syntax = 'startify'$/;"	v
bindeval	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^    def bindeval(value):$/;"	f	function:_patch_nvim	file:
bindeval	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def bindeval(self, category):$/;"	m	class:Vim
c/c++	pack/vendor/start/completor.vim-master/README.md	/^#### c\/c++$/;"	t
c/c++ practices (without using lsp)	pack/vendor/start/completor.vim-master/README.md	/^#### c\/c++ practices (without using lsp)$/;"	t
caseInsensitive	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      caseInsensitive: true$/;"	p	class:complete.query
ch	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      end: {line: line, ch: col},$/;"	p	class:complete.query.end
change_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def change_request(self):$/;"	m	class:Lsp
check_subseq	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^def check_subseq(src, target):$/;"	f
close	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/floaterm.vim	/^		augroup close-floaterm-runner$/;"	a
colors_name	colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
command	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def command(self, cmd):$/;"	m	class:Vim
comp	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^        var comp = {word: completion.name, menu: completion.type};$/;"	c	class:AnonymousFunctionb79ae6440600
complete	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^  function complete(filename, line, col, data) {$/;"	f
completions	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^    def completions(self, completer, base):$/;"	m	class:Common
completor	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^  augroup completor$/;"	a
completor	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^augroup completor$/;"	a
completor#action#_on_complete_done	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! completor#action#_on_complete_done()$/;"	f
completor#action#_on_insert_enter	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! completor#action#_on_insert_enter()$/;"	f
completor#action#_on_insert_leave	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! completor#action#_on_insert_leave()$/;"	f
completor#action#callback	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! completor#action#callback(msg)$/;"	f
completor#action#current_status	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! completor#action#current_status()$/;"	f
completor#action#do	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! completor#action#do(action, info, status, args)$/;"	f
completor#action#stream	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! completor#action#stream(name, msg)$/;"	f
completor#action#trigger	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! completor#action#trigger(items)$/;"	f
completor#compat#job_send	pack/vendor/start/completor.vim-master/autoload/completor/compat.vim	/^  function! completor#compat#job_send(job, data)$/;"	f
completor#compat#job_start_oneshot	pack/vendor/start/completor.vim-master/autoload/completor/compat.vim	/^  function! completor#compat#job_start_oneshot(cmd, options, ...)$/;"	f
completor#compat#job_start_oneshot	pack/vendor/start/completor.vim-master/autoload/completor/compat.vim	/^  function! completor#compat#job_start_oneshot(cmd, options, use_stdin)$/;"	f
completor#compat#job_status	pack/vendor/start/completor.vim-master/autoload/completor/compat.vim	/^  function! completor#compat#job_status(job)$/;"	f
completor#compat#job_stop	pack/vendor/start/completor.vim-master/autoload/completor/compat.vim	/^  function! completor#compat#job_stop(name, ...)$/;"	f
completor#daemon#kill	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function! completor#daemon#kill()$/;"	f
completor#daemon#process	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function! completor#daemon#process(action, cmd, name, options, args)$/;"	f
completor#daemon#send	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function! completor#daemon#send(req)$/;"	f
completor#disable_autocomplete	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! completor#disable_autocomplete()$/;"	f
completor#disable_text_change	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^func! completor#disable_text_change()$/;"	f
completor#do	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! completor#do(action, ...) range$/;"	f
completor#enable_autocomplete	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! completor#enable_autocomplete()$/;"	f
completor#enable_text_change	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^func! completor#enable_text_change()$/;"	f
completor#popup#disable_popup_hide	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! completor#popup#disable_popup_hide()$/;"	f
completor#popup#enable_popup_hide	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! completor#popup#enable_popup_hide()$/;"	f
completor#popup#hide	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! completor#popup#hide()$/;"	f
completor#popup#init	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! completor#popup#init()$/;"	f
completor#popup#safe_hide	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! completor#popup#safe_hide()$/;"	f
completor#popup#show	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! completor#popup#show(words)$/;"	f
completor#support_popup	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! completor#support_popup()$/;"	f
completor#utils#add_offset	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#add_offset(items, offset)$/;"	f
completor#utils#gen_request	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#gen_request(action, args)$/;"	f
completor#utils#get_completer	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#get_completer(ft, inputted)$/;"	f
completor#utils#get_start_column	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#get_start_column()$/;"	f
completor#utils#in_comment_or_string	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#in_comment_or_string()$/;"	f
completor#utils#is_message_end	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#is_message_end(msg)$/;"	f
completor#utils#load	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#load(ft, action, inputted, meta)$/;"	f
completor#utils#on_data	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#on_data(action, msg)$/;"	f
completor#utils#on_exit	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#on_exit()$/;"	f
completor#utils#on_stream	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#on_stream(name, action, msg)$/;"	f
completor#utils#reset	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#reset()$/;"	f
completor#utils#setup_python	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#setup_python()$/;"	f
completor#utils#tempname	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^function! completor#utils#tempname()$/;"	f
completor_event	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^  augroup completor_event$/;"	a
completor_popup	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^  augroup completor_popup$/;"	a
config_logging	pack/vendor/start/completor.vim-master/pythonx/completor/_log.py	/^def config_logging(f):$/;"	f
content_length	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^def content_length(header):$/;"	f
copy_to	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def copy_to(self, comp):$/;"	m	class:Completor
create_buffer	pack/vendor/start/completor.vim-master/tests/conftest.py	/^def create_buffer():$/;"	f
current_directory	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def current_directory(self):$/;"	m	class:Completor
cursor	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def cursor(self):$/;"	m	class:Completor
cursor	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def cursor(self, value):$/;"	m	class:Completor
cursor_line	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def cursor_line(self):$/;"	m	class:Completor
cursor_word	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def cursor_word(self):$/;"	m	class:Completor
daemon	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/__init__.py	/^    daemon = True$/;"	v	class:Tern
daemon	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    daemon = False$/;"	v	class:Completor
daemon_send	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def daemon_send(data):$/;"	m	class:Completor
data	pack/vendor/start/completor.vim-master/tests/test_go.py	/^    data = [$/;"	v	class:TestDoc
deco	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^    def deco(func):$/;"	f	function:ignore_exception	file:
default	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def default(self, obj):$/;"	m	class:VimEncoder
defaultConfig	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^  var defaultConfig = {$/;"	c	class:genConfig
dependencies	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/package.json	/^  "dependencies": {$/;"	o
dependencyBudget	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    dependencyBudget: tern.defaultOptions.dependencyBudget$/;"	p	class:genConfig.defaultConfig
dictionary	pack/vendor/start/completor.vim-master/README.md	/^#### dictionary$/;"	t
dirname	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/__init__.py	/^dirname = os.path.dirname(__file__)$/;"	v
disabled	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def disabled(self):$/;"	m	class:Completor
doc	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    var doc = {query: query, files: [file]};$/;"	c	class:complete
doc_comment	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    plugins: {doc_comment: true},$/;"	p	class:genConfig.defaultConfig.plugins
docs	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      docs: true,$/;"	p	class:complete.query
echo	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^def echo(message, severity='info'):$/;"	f
ecmaScript	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    ecmaScript: true,$/;"	p	class:genConfig.defaultConfig
ecmaVersion	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    ecmaVersion: 6,$/;"	p	class:genConfig.defaultConfig
elm_ls#GetOptions	pack/vendor/start/ale-master/ale_linters/elm/elm_ls.vim	/^function! elm_ls#GetOptions(buffer) abort$/;"	f
elm_ls#GetRootDir	pack/vendor/start/ale-master/ale_linters/elm/elm_ls.vim	/^function! elm_ls#GetRootDir(buffer) abort$/;"	f
end	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      end: {line: line, ch: col},$/;"	c	class:complete.query
environment	pack/vendor/start/vim-airline-master/.github/ISSUE_TEMPLATE.md	/^#### environment$/;"	t
error	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    error = VimError$/;"	v	class:Vim
escape_types	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^escape_types = ['go', 'json']$/;"	v
escapes	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^escapes = re.compile(r'''\\\\([\\\\\\x60*{}[\\]()#+\\-.!_>~|"$%&'\\\/:;<=?@^])''',$/;"	v
eval	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def eval(self, expr):$/;"	m	class:Vim
expandWordForward	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      expandWordForward: false,$/;"	p	class:complete.query
expected	pack/vendor/start/completor.vim-master/tests/test_go.py	/^    expected = {$/;"	v	class:TestDoc
expected	pack/vendor/start/completor.vim-master/tests/test_go.py	/^    expected = {$/;"	v	class:TestGetCmdInfo
expected behavior	pack/vendor/start/vim-airline-master/.github/ISSUE_TEMPLATE.md	/^#### expected behavior$/;"	t
f	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map f <Plug>(easymotion-f)$/;"	m
f	pack/vendor/start/vim-easymotion-master/t/operator_pending_spec.vim	/^        omap f <Plug>(easymotion-f)$/;"	m
f/	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map f\/ <Plug>(easymotion-fn)$/;"	m
file	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      file: '#0',$/;"	p	class:complete.query
file	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    var file = {$/;"	c	class:complete
file_content	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def file_content(self):$/;"	m	class:Lsp
filename	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def filename(self):$/;"	m	class:Completor
files	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    var doc = {query: query, files: [file]};$/;"	p	class:complete.doc
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/ale.py	/^    filetype = 'ale'$/;"	v	class:ALE
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^    filetype = 'common'$/;"	v	class:Common
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^    filetype = 'buffer'$/;"	v	class:Buffer
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^    filetype = 'filename'$/;"	v	class:Filename
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^    filetype = 'neoinclude'$/;"	v	class:Neoinclude
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/common/omni.py	/^    filetype = 'omni'$/;"	v	class:Omni
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/common/ultisnips.py	/^    filetype = 'ultisnips'$/;"	v	class:Ultisnips
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^    filetype = 'cpp'$/;"	v	class:Clang
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    filetype = 'go'$/;"	v	class:Go
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/__init__.py	/^    filetype = 'javascript'$/;"	v	class:Tern
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    filetype = 'lsp'$/;"	v	class:Lsp
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    filetype = 'python'$/;"	v	class:Jedi
filetype	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^    filetype = 'rust'$/;"	v	class:Racer
filetype	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    filetype = Unusable()$/;"	v	class:Completor
filetype	pack/vendor/start/completor.vim-master/tests/test_completor.py	/^    filetype = 'hello'$/;"	v	class:HelloCompleter
filter	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      filter: true,$/;"	p	class:complete.query
filter	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^        def filter(self, record):$/;"	m	class:main.Filter
filter	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def filter(self, record):$/;"	m	class:LogFilter
filter_items	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^def filter_items(items, input_data):$/;"	f
find	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^def find(current_dir, input_data, offset):$/;"	f
findDefs	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^function findDefs(projectDir, config) {$/;"	f
findFile	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^function findFile(file, projectDir, fallbackDir) {$/;"	f
find_config_file	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def find_config_file(file):$/;"	m	class:Completor
format_cmd	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/__init__.py	/^    def format_cmd(self):$/;"	m	class:Tern
format_cmd	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def format_cmd(self):$/;"	m	class:Completor
format_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def format_request(self):$/;"	m	class:Lsp
format_text	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^def format_text(data):$/;"	f
fs	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var fs = require('fs');$/;"	v
function	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^    def function(name):$/;"	f	function:_patch_nvim	file:
g:	pack/vendor/start/ale-master/autoload/ale.vim	/^        let g:[l:full_name] = a:default$/;"	v
g:	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:AutoPairs	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '```':'```', '"""':'"""', "'''":/;"	v
g:AutoPairsCenterLine	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsFlyMode	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapCh	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCh = 1$/;"	v
g:AutoPairsMapSpace	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsMoveCharacter	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsMoveCharacter = "()[]{}\\"'"$/;"	v
g:AutoPairsMultilineClose	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsMultilineClose = 1$/;"	v
g:AutoPairsShortcutBackInsert	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:AutoPairsWildClosedPair	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let g:AutoPairsWildClosedPair = ''$/;"	v
g:CtrlSpaceStatuslineFunction	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlspace.vim	/^  let g:CtrlSpaceStatuslineFunction = "airline#extensions#ctrlspace#statusline()"$/;"	v
g:EasyMotion_add_search_history	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_add_search_history = get(g: , 'EasyMotion_add_search_history' , 1)$/;"	v
g:EasyMotion_command_line_key_mappings	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_command_line_key_mappings =$/;"	v
g:EasyMotion_cursor_highlight	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_cursor_highlight   = get(g: , 'EasyMotion_cursor_highlight'   , 1)$/;"	v
g:EasyMotion_disable_two_key_combo	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_disable_two_key_combo     =$/;"	v
g:EasyMotion_do_mapping	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_do_mapping         = get(g: , 'EasyMotion_do_mapping'         , 1)$/;"	v
g:EasyMotion_do_shade	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_do_shade           = get(g: , 'EasyMotion_do_shade'           , 1)$/;"	v
g:EasyMotion_enter_jump_first	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_enter_jump_first   = get(g: , 'EasyMotion_enter_jump_first'   , 0)$/;"	v
g:EasyMotion_force_csapprox	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_force_csapprox     = get(g: , 'EasyMotion_force_csapprox'     , 0)$/;"	v
g:EasyMotion_grouping	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_grouping           = get(g: , 'EasyMotion_grouping'           , 1)$/;"	v
g:EasyMotion_hl2_first_group_target	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_first_group_target  = get(g:,$/;"	v
g:EasyMotion_hl2_second_group_target	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_second_group_target = get(g:,$/;"	v
g:EasyMotion_hl_group_shade	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_shade          = get(g:,$/;"	v
g:EasyMotion_hl_group_target	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_target         = get(g:,$/;"	v
g:EasyMotion_hl_inc_cursor	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_cursor     = get(g:,$/;"	v
g:EasyMotion_hl_inc_search	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_search     = get(g:,$/;"	v
g:EasyMotion_hl_move	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_move           = get(g:,$/;"	v
g:EasyMotion_ignore_exception	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^    let g:EasyMotion_ignore_exception = 0$/;"	v
g:EasyMotion_inc_highlight	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_inc_highlight      = get(g: , 'EasyMotion_inc_highlight'      , 1)$/;"	v
g:EasyMotion_keys	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_keys               = get(g:,$/;"	v
g:EasyMotion_keys	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	pack/vendor/start/vim-easymotion-master/t/operator_pending_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_keys	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_landing_highlight	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_landing_highlight  = get(g: , 'EasyMotion_landing_highlight'  , 0)$/;"	v
g:EasyMotion_loaded	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_loaded = 1$/;"	v
g:EasyMotion_maximal_jumpmarks	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^        let g:EasyMotion_maximal_jumpmarks  = 2 " Error for value 1 unanalyzed. $/;"	v
g:EasyMotion_move_highlight	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_move_highlight     = get(g: , 'EasyMotion_move_highlight'     , 1)$/;"	v
g:EasyMotion_off_screen_search	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_off_screen_search  = get(g: , 'EasyMotion_off_screen_search'  , 1)$/;"	v
g:EasyMotion_off_screen_search	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 0$/;"	v
g:EasyMotion_off_screen_search	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 1$/;"	v
g:EasyMotion_prompt	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_prompt             =$/;"	v
g:EasyMotion_re_anywhere	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^    let g:EasyMotion_re_anywhere = get(g:, 'EasyMotion_re_anywhere', re)$/;"	v
g:EasyMotion_re_line_anywhere	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^    let g:EasyMotion_re_line_anywhere = get(g:, 'EasyMotion_re_line_anywhere', re)$/;"	v
g:EasyMotion_show_prompt	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_show_prompt        = get(g: , 'EasyMotion_show_prompt'        , 1)$/;"	v
g:EasyMotion_skipfoldedline	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_skipfoldedline     = get(g: , 'EasyMotion_skipfoldedline'     , 1)$/;"	v
g:EasyMotion_smartcase	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_smartcase          = get(g: , 'EasyMotion_smartcase'          , 0)$/;"	v
g:EasyMotion_smartcase	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 0$/;"	v
g:EasyMotion_smartcase	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_space_jump_first	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_space_jump_first   = get(g: , 'EasyMotion_space_jump_first'   , 0)$/;"	v
g:EasyMotion_startofline	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_startofline        = get(g: , 'EasyMotion_startofline'        , 1)$/;"	v
g:EasyMotion_use_migemo	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^        let g:EasyMotion_use_migemo = 0$/;"	v
g:EasyMotion_use_migemo	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_use_migemo         = get(g: , 'EasyMotion_use_migemo'         , 0)$/;"	v
g:EasyMotion_use_migemo	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_use_migemo = 1$/;"	v
g:EasyMotion_use_regexp	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_use_regexp         = get(g: , 'EasyMotion_use_regexp'         , 1)$/;"	v
g:EasyMotion_use_regexp	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 0$/;"	v
g:EasyMotion_use_regexp	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 1$/;"	v
g:EasyMotion_use_smartsign_jp	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_jp = 1$/;"	v
g:EasyMotion_use_smartsign_us	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 0$/;"	v
g:EasyMotion_use_smartsign_us	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_smartsign_us	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_upper	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_use_upper          = get(g: , 'EasyMotion_use_upper'          , 0)$/;"	v
g:EasyMotion_verbose	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let g:EasyMotion_verbose            = get(g: , 'EasyMotion_verbose'            , 1)$/;"	v
g:EasyMotion_verbose	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 0$/;"	v
g:EasyMotion_verbose	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 1$/;"	v
g:NERDDelimiterMap	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^let g:NERDDelimiterMap = s:delimiterMap$/;"	v
g:NERDTree	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoCenter	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenter            = get(g:, 'NERDTreeAutoCenter',            1)$/;"	v
g:NERDTreeAutoCenterThreshold	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenterThreshold   = get(g:, 'NERDTreeAutoCenterThreshold',   3)$/;"	v
g:NERDTreeAutoDeleteBuffer	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeBookmarks = []$/;"	v
g:NERDTreeBookmarksFile	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksFile         = get(g:, 'NERDTreeBookmarksFile',         expand('$HOME') ./;"	v
g:NERDTreeBookmarksSort	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksSort         = get(g:, 'NERDTreeBookmarksSort',         1)$/;"	v
g:NERDTreeCascadeOpenSingleChildDir	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeOpenSingleChildDir = get(g:, 'NERDTreeCascadeOpenSingleChildDir', 1)$/;"	v
g:NERDTreeCascadeSingleChildDir	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeSingleChildDir     = get(g:, 'NERDTreeCascadeSingleChildDir',     1)$/;"	v
g:NERDTreeCaseSensitiveSort	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeCaseSensitiveSort     = get(g:, 'NERDTreeCaseSensitiveSort',     0)$/;"	v
g:NERDTreeChDirMode	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeChDirMode             = get(g:, 'NERDTreeChDirMode',             0)$/;"	v
g:NERDTreeCopyCmd	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyCmd      = get(g:, 'NERDTreeCopyCmd',      'cp -r ')$/;"	v
g:NERDTreeCopyDirCmd	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyDirCmd   = get(g:, 'NERDTreeCopyDirCmd',   'xcopy \/s \/e \/i \/y \/q ')$/;"	v
g:NERDTreeCopyFileCmd	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyFileCmd  = get(g:, 'NERDTreeCopyFileCmd',  'copy \/y ')$/;"	v
g:NERDTreeCreatePrefix	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeCreatePrefix          = get(g:, 'NERDTreeCreatePrefix',          'silent')$/;"	v
g:NERDTreeCreator	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeCustomOpenArgs	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^        let g:NERDTreeCustomOpenArgs = get(g:, 'NERDTreeCustomOpenArgs', {})$/;"	v
g:NERDTreeCustomOpenArgs	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^        let g:NERDTreeCustomOpenArgs = l:defaultOpenArgs$/;"	v
g:NERDTreeDirArrowCollapsible	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '~')$/;"	v
g:NERDTreeDirArrowCollapsible	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '▾')$/;"	v
g:NERDTreeDirArrowExpandable	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '+')$/;"	v
g:NERDTreeDirArrowExpandable	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '▸')$/;"	v
g:NERDTreeDirNode	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	pack/vendor/start/nerdtree-master/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	pack/vendor/start/nerdtree-master/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeGlyphReadOnly	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeGlyphReadOnly = get(g:, 'NERDTreeGlyphReadOnly', 'RO')$/;"	v
g:NERDTreeHighlightCursorline	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeHighlightCursorline   = get(g:, 'NERDTreeHighlightCursorline',   1)$/;"	v
g:NERDTreeHijackNetrw	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeHijackNetrw           = get(g:, 'NERDTreeHijackNetrw',           1)$/;"	v
g:NERDTreeIgnore	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeIgnore                = get(g:, 'NERDTreeIgnore',                ['\\~$'])$/;"	v
g:NERDTreeInvalidBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeInvalidBookmarks = []$/;"	v
g:NERDTreeKeyMap	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapActivateNode	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapActivateNode    = get(g:, 'NERDTreeMapActivateNode',    'o')$/;"	v
g:NERDTreeMapCWD	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapCWD             = get(g:, 'NERDTreeMapCWD',             'CD')$/;"	v
g:NERDTreeMapChangeRoot	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapChangeRoot      = get(g:, 'NERDTreeMapChangeRoot',      'C')$/;"	v
g:NERDTreeMapChdir	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapChdir           = get(g:, 'NERDTreeMapChdir',           'cd')$/;"	v
g:NERDTreeMapCloseChildren	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseChildren   = get(g:, 'NERDTreeMapCloseChildren',   'X')$/;"	v
g:NERDTreeMapCloseDir	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseDir        = get(g:, 'NERDTreeMapCloseDir',        'x')$/;"	v
g:NERDTreeMapCustomOpen	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapCustomOpen      = get(g:, 'NERDTreeMapCustomOpen',      '<CR>')$/;"	v
g:NERDTreeMapDeleteBookmark	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapDeleteBookmark  = get(g:, 'NERDTreeMapDeleteBookmark',  'D')$/;"	v
g:NERDTreeMapHelp	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapHelp            = get(g:, 'NERDTreeMapHelp',            '?')$/;"	v
g:NERDTreeMapJumpFirstChild	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpFirstChild  = get(g:, 'NERDTreeMapJumpFirstChild',  'K')$/;"	v
g:NERDTreeMapJumpLastChild	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpLastChild   = get(g:, 'NERDTreeMapJumpLastChild',   'J')$/;"	v
g:NERDTreeMapJumpNextSibling	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpNextSibling = get(g:, 'NERDTreeMapJumpNextSibling', '<C-j>')$/;"	v
g:NERDTreeMapJumpParent	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpParent      = get(g:, 'NERDTreeMapJumpParent',      'p')$/;"	v
g:NERDTreeMapJumpPrevSibling	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpPrevSibling = get(g:, 'NERDTreeMapJumpPrevSibling', '<C-k>')$/;"	v
g:NERDTreeMapJumpRoot	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpRoot        = get(g:, 'NERDTreeMapJumpRoot',        'P')$/;"	v
g:NERDTreeMapMenu	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapMenu            = get(g:, 'NERDTreeMapMenu',            'm')$/;"	v
g:NERDTreeMapOpenExpl	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenExpl        = get(g:, 'NERDTreeMapOpenExpl',        'e')$/;"	v
g:NERDTreeMapOpenInTab	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTab       = get(g:, 'NERDTreeMapOpenInTab',       't')$/;"	v
g:NERDTreeMapOpenInTabSilent	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTabSilent = get(g:, 'NERDTreeMapOpenInTabSilent', 'T')$/;"	v
g:NERDTreeMapOpenRecursively	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenRecursively = get(g:, 'NERDTreeMapOpenRecursively', 'O')$/;"	v
g:NERDTreeMapOpenSplit	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenSplit       = get(g:, 'NERDTreeMapOpenSplit',       'i')$/;"	v
g:NERDTreeMapOpenVSplit	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenVSplit      = get(g:, 'NERDTreeMapOpenVSplit',      's')$/;"	v
g:NERDTreeMapPreview	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreview         = get(g:, 'NERDTreeMapPreview',         'g'.NERDTreeMapActivate/;"	v
g:NERDTreeMapPreviewSplit	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewSplit    = get(g:, 'NERDTreeMapPreviewSplit',    'g'.NERDTreeMapOpenSpli/;"	v
g:NERDTreeMapPreviewVSplit	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewVSplit   = get(g:, 'NERDTreeMapPreviewVSplit',   'g'.NERDTreeMapOpenVSpl/;"	v
g:NERDTreeMapQuit	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapQuit            = get(g:, 'NERDTreeMapQuit',            'q')$/;"	v
g:NERDTreeMapRefresh	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefresh         = get(g:, 'NERDTreeMapRefresh',         'r')$/;"	v
g:NERDTreeMapRefreshRoot	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefreshRoot     = get(g:, 'NERDTreeMapRefreshRoot',     'R')$/;"	v
g:NERDTreeMapToggleBookmarks	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleBookmarks = get(g:, 'NERDTreeMapToggleBookmarks', 'B')$/;"	v
g:NERDTreeMapToggleFiles	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFiles     = get(g:, 'NERDTreeMapToggleFiles',     'F')$/;"	v
g:NERDTreeMapToggleFilters	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFilters   = get(g:, 'NERDTreeMapToggleFilters',   'f')$/;"	v
g:NERDTreeMapToggleHidden	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleHidden    = get(g:, 'NERDTreeMapToggleHidden',    'I')$/;"	v
g:NERDTreeMapToggleZoom	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleZoom      = get(g:, 'NERDTreeMapToggleZoom',      'A')$/;"	v
g:NERDTreeMapUpdir	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdir           = get(g:, 'NERDTreeMapUpdir',           'u')$/;"	v
g:NERDTreeMapUpdirKeepOpen	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdirKeepOpen   = get(g:, 'NERDTreeMapUpdirKeepOpen',   'U')$/;"	v
g:NERDTreeMarkBookmarks	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMarkBookmarks         = get(g:, 'NERDTreeMarkBookmarks',         1)$/;"	v
g:NERDTreeMenuController	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuDown	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMenuDown           = get(g:, 'NERDTreeMenuDown',           'j')$/;"	v
g:NERDTreeMenuItem	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMenuUp	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMenuUp             = get(g:, 'NERDTreeMenuUp',             'k')$/;"	v
g:NERDTreeMinimalMenu	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalMenu           = get(g:, 'NERDTreeMinimalMenu',           0)$/;"	v
g:NERDTreeMinimalUI	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalUI             = get(g:, 'NERDTreeMinimalUI',             0)$/;"	v
g:NERDTreeMouseMode	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeMouseMode             = get(g:, 'NERDTreeMouseMode',             1)$/;"	v
g:NERDTreeNaturalSort	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeNaturalSort           = get(g:, 'NERDTreeNaturalSort',           0)$/;"	v
g:NERDTreeNodeDelimiter	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00a0")$/;"	v
g:NERDTreeNodeDelimiter	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00b7")$/;"	v
g:NERDTreeNodeDelimiter	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\x07")$/;"	v
g:NERDTreeNotificationThreshold	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeNotificationThreshold = get(g:, 'NERDTreeNotificationThreshold', 100)$/;"	v
g:NERDTreeOldSortOrder	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^    let g:NERDTreeOldSortOrder = g:NERDTreeSortOrder$/;"	v
g:NERDTreeOldSortOrder	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^                let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^        let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	pack/vendor/start/nerdtree-master/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeQuitOnOpen	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeQuitOnOpen            = get(g:, 'NERDTreeQuitOnOpen',            0)$/;"	v
g:NERDTreeRemoveDirCmd	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rm -rf ')$/;"	v
g:NERDTreeRemoveDirCmd	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rmdir \/s \/q ')$/;"	v
g:NERDTreeRespectWildIgnore	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeRespectWildIgnore     = get(g:, 'NERDTreeRespectWildIgnore',     0)$/;"	v
g:NERDTreeShowBookmarks	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeShowBookmarks         = get(g:, 'NERDTreeShowBookmarks',         0)$/;"	v
g:NERDTreeShowFiles	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeShowFiles             = get(g:, 'NERDTreeShowFiles',             1)$/;"	v
g:NERDTreeShowHidden	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeShowHidden            = get(g:, 'NERDTreeShowHidden',            0)$/;"	v
g:NERDTreeShowLineNumbers	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeShowLineNumbers       = get(g:, 'NERDTreeShowLineNumbers',       0)$/;"	v
g:NERDTreeSortDirs	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeSortDirs              = get(g:, 'NERDTreeSortDirs',              1)$/;"	v
g:NERDTreeSortHiddenFirst	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeSortHiddenFirst       = get(g:, 'NERDTreeSortHiddenFirst',       1)$/;"	v
g:NERDTreeSortOrder	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeSortOrder    = get(g:, 'NERDTreeSortOrder', ['\\\/$', '*', '\\.swp$', '\\.bak$', '/;"	v
g:NERDTreeStatusline	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeStatusline = get(g:, 'NERDTreeStatusline', "%{exists('b:NERDTree')?b:NERDTree.root/;"	v
g:NERDTreeUI	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUseTCD	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeUseTCD                = get(g:, 'NERDTreeUseTCD',                0)$/;"	v
g:NERDTreeWinPos	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeWinPos  = get(g:, 'NERDTreeWinPos', 'left')$/;"	v
g:NERDTreeWinSize	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let g:NERDTreeWinSize = get(g:, 'NERDTreeWinSize', 31)$/;"	v
g:__ale_c_project_filenames	pack/vendor/start/ale-master/autoload/ale/c.vim	/^let g:__ale_c_project_filenames = ['.git\/HEAD', 'configure', 'Makefile', 'CMakeLists.txt']$/;"	v
g:__gutentags_vim_is_leaving	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    let g:__gutentags_vim_is_leaving = 1$/;"	v
g:__gutentags_vim_is_leaving	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:__gutentags_vim_is_leaving = 0$/;"	v
g:airline#extensions#example#number_of_cats	pack/vendor/start/vim-airline-master/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#localsearch#inverted	pack/vendor/start/vim-airline-master/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#inverted = get(g:, 'airline#extensions#localsearch#inverted/;"	v
g:airline#extensions#localsearch#loaded	pack/vendor/start/vim-airline-master/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#loaded = 001$/;"	v
g:airline#extensions#obsession#indicator_text	pack/vendor/start/vim-airline-master/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
g:airline#extensions#quickfix#location_text	pack/vendor/start/vim-airline-master/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	pack/vendor/start/vim-airline-master/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#rufo#symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/rufo.vim	/^  let g:airline#extensions#rufo#symbol = 'RuFo'$/;"	v
g:airline#extensions#tabline#exclude_buffers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#exclude_buffers = []$/;"	v
g:airline#extensions#tabline#exclude_buffers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:airline#extensions#tabline#exclude_buffers = []$/;"	v
g:airline#extensions#tabline#show_tabs	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#show_tabs = 0$/;"	v
g:airline#extensions#tabline#show_tabs	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#show_tabs = 1$/;"	v
g:airline#extensions#whitespace#enabled	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^    let g:airline#extensions#whitespace#enabled = s:enabled$/;"	v
g:airline#extensions#windowswap#indicator_text	pack/vendor/start/vim-airline-master/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#extensions#wordcount#filetypes	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^  let g:airline#extensions#wordcount#filetypes = filetypes$/;"	v
g:airline#highlighter#normal_fg_hi	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^      let g:airline#highlighter#normal_fg_hi = synIDattr(synIDtrans(hlID('Normal')), 'fg', 'cter/;"	v
g:airline#init#bootstrapping	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^  let g:airline#init#bootstrapping = 1$/;"	v
g:airline#init#is_windows	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^  let g:airline#init#is_windows = has('win32') || has('win64')$/;"	v
g:airline#init#vim_async	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^  let g:airline#init#vim_async = (v:version >= 800 && has('job'))$/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.commandline = airline#themes#generate_color_map(s:airline_a_co/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inact/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert,/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal,/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modifi/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.terminal = airline#themes#generate_color_map(s:airline_a_inser/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual,/;"	v
g:airline#themes#dark#palette	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#visual_active	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^  let g:airline#visual_active = (mode() =~? '[vs]')$/;"	v
g:airline_inactive_funcrefs	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^let g:airline_inactive_funcrefs = get(g:, 'airline_inactive_statusline_funcrefs', [])$/;"	v
g:airline_last_window_changed	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^  let g:airline_last_window_changed = l:key$/;"	v
g:airline_section_a	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^    let g:airline_section_a = airline#section#create_left(['mode', 'crypt', 'paste', 'keymap', '/;"	v
g:airline_section_b	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^      let g:airline_section_b = airline#section#create(['hunks', 'branch', 'battery'])$/;"	v
g:airline_section_b	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^      let g:airline_section_b = airline#section#create(['hunks', 'branch'])$/;"	v
g:airline_section_c	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'file', spc, 'readonly', 'coc_stat/;"	v
g:airline_section_c	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'path', spc, 'readonly', 'coc_stat/;"	v
g:airline_section_error	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^    let g:airline_section_error = airline#section#create(['ycm_error_count', 'syntastic-err', 'e/;"	v
g:airline_section_gutter	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^    let g:airline_section_gutter = airline#section#create(['%='])$/;"	v
g:airline_section_warning	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^      let g:airline_section_warning .= airline#section#create(['whitespace'])$/;"	v
g:airline_section_warning	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^    let g:airline_section_warning = airline#section#create(['ycm_warning_count',  'syntastic-war/;"	v
g:airline_section_x	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^    let g:airline_section_x = airline#section#create_right(['coc_current_function', 'bookmark', /;"	v
g:airline_section_y	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^    let g:airline_section_y = airline#section#create_right(['ffenc'])$/;"	v
g:airline_section_z	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['%p%%', 'linenr', 'colnr'])$/;"	v
g:airline_section_z	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['windowswap', 'obsession', '%p%%', 'line/;"	v
g:airline_statusline_funcrefs	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_theme	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^      let g:airline_theme = a:name$/;"	v
g:airline_theme	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^  let g:airline_theme = get(g:, 'airline_theme', 'dark')$/;"	v
g:airline_theme	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^        let g:airline_theme=s:random_theme()$/;"	v
g:airline_theme	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^    let g:airline_theme = 'dark'$/;"	v
g:ale#util#error_priority	pack/vendor/start/ale-master/autoload/ale/util.vim	/^let g:ale#util#error_priority = 5$/;"	v
g:ale#util#info_priority	pack/vendor/start/ale-master/autoload/ale/util.vim	/^let g:ale#util#info_priority = 3$/;"	v
g:ale#util#nul_file	pack/vendor/start/ale-master/autoload/ale/util.vim	/^        let g:ale#util#nul_file = 'nul'$/;"	v
g:ale#util#nul_file	pack/vendor/start/ale-master/autoload/ale/util.vim	/^    let g:ale#util#nul_file = '\/dev\/null'$/;"	v
g:ale#util#style_error_priority	pack/vendor/start/ale-master/autoload/ale/util.vim	/^let g:ale#util#style_error_priority = 2$/;"	v
g:ale#util#style_warning_priority	pack/vendor/start/ale-master/autoload/ale/util.vim	/^let g:ale#util#style_warning_priority = 1$/;"	v
g:ale#util#warning_priority	pack/vendor/start/ale-master/autoload/ale/util.vim	/^let g:ale#util#warning_priority = 4$/;"	v
g:ale_bicep_bicep_executable	pack/vendor/start/ale-master/ale_linters/bicep/bicep.vim	/^let g:ale_bicep_bicep_executable =$/;"	v
g:ale_bicep_bicep_options	pack/vendor/start/ale-master/ale_linters/bicep/bicep.vim	/^let g:ale_bicep_bicep_options =$/;"	v
g:ale_buffer_info	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^        let g:ale_buffer_info[a:buffer] = {$/;"	v
g:ale_buffer_info	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^        let g:ale_buffer_info[a:buffer].loclist = l:loclist$/;"	v
g:ale_buffer_info	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^    let g:ale_buffer_info[a:buffer].count = l:count$/;"	v
g:ale_buffer_info	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^    let g:ale_buffer_info[a:buffer].first_problems = l:first_problems$/;"	v
g:ale_buffer_info	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_buffer_info = {}$/;"	v
g:ale_c_build_dir_names	pack/vendor/start/ale-master/autoload/ale/c.vim	/^let g:ale_c_build_dir_names = get(g:, 'ale_c_build_dir_names', [$/;"	v
g:ale_change_sign_column_color	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_change_sign_column_color = get(g:, 'ale_change_sign_column_color', 0)$/;"	v
g:ale_close_preview_on_insert	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_close_preview_on_insert = get(g:, 'ale_close_preview_on_insert', 0)$/;"	v
g:ale_cmake_cmake_lint_executable	pack/vendor/start/ale-master/ale_linters/cmake/cmake_lint.vim	/^let g:ale_cmake_cmake_lint_executable =$/;"	v
g:ale_cmake_cmake_lint_options	pack/vendor/start/ale-master/ale_linters/cmake/cmake_lint.vim	/^let g:ale_cmake_cmake_lint_options =$/;"	v
g:ale_cmake_cmakelint_executable	pack/vendor/start/ale-master/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_executable =$/;"	v
g:ale_cmake_cmakelint_options	pack/vendor/start/ale-master/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_options =$/;"	v
g:ale_command_wrapper	pack/vendor/start/ale-master/autoload/ale/job.vim	/^let g:ale_command_wrapper = get(g:, 'ale_command_wrapper', '')$/;"	v
g:ale_completion_autoimport	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let g:ale_completion_autoimport = get(g:, 'ale_completion_autoimport', 1)$/;"	v
g:ale_completion_delay	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let g:ale_completion_delay = get(g:, 'ale_completion_delay', 100)$/;"	v
g:ale_completion_enabled	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^    let g:ale_completion_enabled = 0$/;"	v
g:ale_completion_enabled	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^    let g:ale_completion_enabled = 1$/;"	v
g:ale_completion_enabled	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_completion_enabled = get(g:, 'ale_completion_enabled', 0)$/;"	v
g:ale_completion_excluded_words	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let g:ale_completion_excluded_words = get(g:, 'ale_completion_excluded_words', [])$/;"	v
g:ale_completion_max_suggestions	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let g:ale_completion_max_suggestions = get(g:, 'ale_completion_max_suggestions', 50)$/;"	v
g:ale_completion_symbols	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let g:ale_completion_symbols = get(g:, 'ale_completion_symbols', {$/;"	v
g:ale_completion_tsserver_remove_warnings	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let g:ale_completion_tsserver_remove_warnings = get(g:, 'ale_completion_tsserver_remove_warnings/;"	v
g:ale_cpp_clang_options	vimrc	/^let g:ale_cpp_clang_options = '-std=c++1z -Wall'$/;"	v
g:ale_create_dummy_temporary_file	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    let g:ale_create_dummy_temporary_file = 1$/;"	v
g:ale_cs_mcs_options	pack/vendor/start/ale-master/ale_linters/cs/mcs.vim	/^let g:ale_cs_mcs_options = get(g:, 'ale_cs_mcs_options', '')$/;"	v
g:ale_cursor_detail	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_cursor_detail = get(g:, 'ale_cursor_detail', 0)$/;"	v
g:ale_default_navigation	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^let g:ale_default_navigation = get(g:, 'ale_default_navigation', 'buffer')$/;"	v
g:ale_default_navigation	pack/vendor/start/ale-master/autoload/ale/references.vim	/^let g:ale_default_navigation = get(g:, 'ale_default_navigation', 'buffer')$/;"	v
g:ale_deno_executable	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_deno_executable = get(g:, 'ale_deno_executable', 'deno')$/;"	v
g:ale_detail_to_floating_preview	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_detail_to_floating_preview = get(g:, 'ale_detail_to_floating_preview', 0)$/;"	v
g:ale_disable_lsp	pack/vendor/start/ale-master/autoload/ale.vim	/^let g:ale_disable_lsp = get(g:, 'ale_disable_lsp', 0)$/;"	v
g:ale_echo_cursor	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_echo_cursor = get(g:, 'ale_echo_cursor', 1)$/;"	v
g:ale_echo_delay	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^let g:ale_echo_delay = get(g:, 'ale_echo_delay', 10)$/;"	v
g:ale_echo_msg_error_str	pack/vendor/start/ale-master/autoload/ale.vim	/^let g:ale_echo_msg_error_str = get(g:, 'ale_echo_msg_error_str', 'Error')$/;"	v
g:ale_echo_msg_format	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^let g:ale_echo_msg_format = get(g:, 'ale_echo_msg_format', '%code: %%s')$/;"	v
g:ale_echo_msg_info_str	pack/vendor/start/ale-master/autoload/ale.vim	/^let g:ale_echo_msg_info_str = get(g:, 'ale_echo_msg_info_str', 'Info')$/;"	v
g:ale_echo_msg_log_str	pack/vendor/start/ale-master/autoload/ale.vim	/^let g:ale_echo_msg_log_str = get(g:, 'ale_echo_msg_log_str', 'Log')$/;"	v
g:ale_echo_msg_warning_str	pack/vendor/start/ale-master/autoload/ale.vim	/^let g:ale_echo_msg_warning_str = get(g:, 'ale_echo_msg_warning_str', 'Warning')$/;"	v
g:ale_enabled	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^    let g:ale_enabled = !get(g:, 'ale_enabled')$/;"	v
g:ale_enabled	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_enabled = get(g:, 'ale_enabled', 1)$/;"	v
g:ale_erlang_dialyzer_executable	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_executable =$/;"	v
g:ale_erlang_dialyzer_options	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_options =$/;"	v
g:ale_erlang_dialyzer_plt_file	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_plt_file =$/;"	v
g:ale_erlang_dialyzer_rebar3_profile	pack/vendor/start/ale-master/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_rebar3_profile =$/;"	v
g:ale_erlang_erlc_executable	pack/vendor/start/ale-master/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_executable = get(g:, 'ale_erlang_erlc_executable', 'erlc')$/;"	v
g:ale_erlang_erlc_options	pack/vendor/start/ale-master/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_options = get(g:, 'ale_erlang_erlc_options', '')$/;"	v
g:ale_exclude_highlights	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_exclude_highlights = get(g:, 'ale_exclude_highlights', [])$/;"	v
g:ale_filename_mappings	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filename_mappings	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filename_mappings	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filetype_blacklist	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_filetype_blacklist = [$/;"	v
g:ale_fix_buffer_data	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^        let g:ale_fix_buffer_data[a:buffer] = l:data$/;"	v
g:ale_fix_buffer_data	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^    let g:ale_fix_buffer_data[a:buffer] = {$/;"	v
g:ale_fix_buffer_data	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_fix_buffer_data = {}$/;"	v
g:ale_fix_on_save	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_fix_on_save = get(g:, 'ale_fix_on_save', 0)$/;"	v
g:ale_fix_on_save_ignore	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^let g:ale_fix_on_save_ignore = get(g:, 'ale_fix_on_save_ignore', {})$/;"	v
g:ale_fixers	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_fixers = get(g:, 'ale_fixers', {})$/;"	v
g:ale_fixers	vimrc	/^let g:ale_fixers = {$/;"	v
g:ale_floating_preview	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_floating_preview = get(g:, 'ale_floating_preview', 0)$/;"	v
g:ale_floating_window_border	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_floating_window_border = get(g:, 'ale_floating_window_border', ['|', '-', '+', '+', '+/;"	v
g:ale_go_go111module	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_go_go111module = get(g:, 'ale_go_go111module', '')$/;"	v
g:ale_history_enabled	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_history_enabled = get(g:, 'ale_history_enabled', 1)$/;"	v
g:ale_history_log_output	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_history_log_output = get(g:, 'ale_history_log_output', 1)$/;"	v
g:ale_hover_cursor	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_hover_cursor = get(g:, 'ale_hover_cursor', 1)$/;"	v
g:ale_hover_to_floating_preview	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_hover_to_floating_preview = get(g:, 'ale_hover_to_floating_preview', 0)$/;"	v
g:ale_hover_to_preview	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_hover_to_preview = get(g:, 'ale_hover_to_preview', 0)$/;"	v
g:ale_html_tidy_executable	pack/vendor/start/ale-master/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_executable = get(g:, 'ale_html_tidy_executable', 'tidy')$/;"	v
g:ale_html_tidy_options	pack/vendor/start/ale-master/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_options = get(g:, 'ale_html_tidy_options', '-q -e -language en')$/;"	v
g:ale_java_pmd_options	pack/vendor/start/ale-master/ale_linters/java/pmd.vim	/^    let g:ale_java_pmd_options = '-R category\/java\/bestpractices.xml'$/;"	v
g:ale_keep_list_window_open	pack/vendor/start/ale-master/autoload/ale/list.vim	/^let g:ale_keep_list_window_open = get(g:, 'ale_keep_list_window_open', 0)$/;"	v
g:ale_kotlin_kotlinc_classpath	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_classpath = get(g:, 'ale_kotlin_kotlinc_classpath', '')$/;"	v
g:ale_kotlin_kotlinc_config_file	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_config_file = get(g:, 'ale_kotlin_kotlinc_config_file', '.ale_kotlinc_c/;"	v
g:ale_kotlin_kotlinc_enable_config	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_enable_config = get(g:, 'ale_kotlin_kotlinc_enable_config', 0)$/;"	v
g:ale_kotlin_kotlinc_module_filename	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_module_filename = get(g:, 'ale_kotlin_kotlinc_module_filename', 'module/;"	v
g:ale_kotlin_kotlinc_options	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_options = get(g:, 'ale_kotlin_kotlinc_options', '')$/;"	v
g:ale_kotlin_kotlinc_sourcepath	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_sourcepath = get(g:, 'ale_kotlin_kotlinc_sourcepath', '')$/;"	v
g:ale_kotlin_kotlinc_use_module_file	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_use_module_file = get(g:, 'ale_kotlin_kotlinc_use_module_file', 0)$/;"	v
g:ale_lint_delay	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_lint_delay = get(g:, 'ale_lint_delay', 200)$/;"	v
g:ale_lint_on_enter	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_lint_on_enter = get(g:, 'ale_lint_on_enter', 1)$/;"	v
g:ale_lint_on_filetype_changed	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_lint_on_filetype_changed = get(g:, 'ale_lint_on_filetype_changed', 1)$/;"	v
g:ale_lint_on_insert_leave	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_lint_on_insert_leave = get(g:, 'ale_lint_on_insert_leave', 1)$/;"	v
g:ale_lint_on_save	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_lint_on_save = get(g:, 'ale_lint_on_save', 1)$/;"	v
g:ale_lint_on_text_changed	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_lint_on_text_changed = get(g:, 'ale_lint_on_text_changed', 'normal')$/;"	v
g:ale_linter_aliases	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_linter_aliases = get(g:, 'ale_linter_aliases', {})$/;"	v
g:ale_linters	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_linters = get(g:, 'ale_linters', {})$/;"	v
g:ale_linters	vimrc	/^let g:ale_linters = {$/;"	v
g:ale_linters_explicit	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_linters_explicit = get(g:, 'ale_linters_explicit', 0)$/;"	v
g:ale_linters_ignore	pack/vendor/start/ale-master/autoload/ale.vim	/^let g:ale_linters_ignore = get(g:, 'ale_linters_ignore', {})$/;"	v
g:ale_list_vertical	pack/vendor/start/ale-master/autoload/ale/list.vim	/^let g:ale_list_vertical = get(g:, 'ale_list_vertical', 0)$/;"	v
g:ale_list_window_size	pack/vendor/start/ale-master/autoload/ale/list.vim	/^let g:ale_list_window_size = get(g:, 'ale_list_window_size', 10)$/;"	v
g:ale_loclist_msg_format	pack/vendor/start/ale-master/autoload/ale/list.vim	/^let g:ale_loclist_msg_format = get(g:, 'ale_loclist_msg_format',$/;"	v
g:ale_lsp_error_messages	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^        let g:ale_lsp_error_messages[a:linter_name] = []$/;"	v
g:ale_lsp_error_messages	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^    let g:ale_lsp_error_messages = get(g:, 'ale_lsp_error_messages', {})$/;"	v
g:ale_lsp_next_message_id	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^        let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_message_id	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^    let g:ale_lsp_next_message_id += 1$/;"	v
g:ale_lsp_next_message_id	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_version_id	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^        let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lsp_next_version_id	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^    let g:ale_lsp_next_version_id += 1$/;"	v
g:ale_lsp_next_version_id	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lsp_show_message_format	pack/vendor/start/ale-master/autoload/ale.vim	/^let g:ale_lsp_show_message_format = get(g:, 'ale_lsp_show_message_format', '%severity%:%linter%:/;"	v
g:ale_lsp_show_message_severity	pack/vendor/start/ale-master/autoload/ale.vim	/^let g:ale_lsp_show_message_severity = get(g:, 'ale_lsp_show_message_severity', 'error')$/;"	v
g:ale_lsp_suggestions	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_lsp_suggestions = get(g:, 'ale_lsp_suggestions', 0)$/;"	v
g:ale_lsp_types	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let g:ale_lsp_types = {$/;"	v
g:ale_max_buffer_history_size	pack/vendor/start/ale-master/autoload/ale/history.vim	/^let g:ale_max_buffer_history_size = get(g:, 'ale_max_buffer_history_size', 20)$/;"	v
g:ale_max_signs	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_max_signs = get(g:, 'ale_max_signs', -1)$/;"	v
g:ale_objc_clang_options	pack/vendor/start/ale-master/ale_linters/objc/clang.vim	/^    let g:ale_objc_clang_options = '-std=c11 -Wall'$/;"	v
g:ale_objcpp_clang_options	pack/vendor/start/ale-master/ale_linters/objcpp/clang.vim	/^    let g:ale_objcpp_clang_options = '-std=c++14 -Wall'$/;"	v
g:ale_open_list	pack/vendor/start/ale-master/autoload/ale/list.vim	/^    let g:ale_open_list = 1$/;"	v
g:ale_open_list	pack/vendor/start/ale-master/autoload/ale/list.vim	/^    let g:ale_open_list = l:open_list_bak$/;"	v
g:ale_open_list	pack/vendor/start/ale-master/autoload/ale/list.vim	/^let g:ale_open_list = get(g:, 'ale_open_list', 0)$/;"	v
g:ale_perl6_perl6_executable	pack/vendor/start/ale-master/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_executable =$/;"	v
g:ale_perl6_perl6_options	pack/vendor/start/ale-master/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_options =$/;"	v
g:ale_php_phan_executable	pack/vendor/start/ale-master/ale_linters/php/phan.vim	/^let g:ale_php_phan_executable = get(g:, 'ale_php_phan_executable', 'phan')$/;"	v
g:ale_php_phan_minimum_severity	pack/vendor/start/ale-master/ale_linters/php/phan.vim	/^let g:ale_php_phan_minimum_severity = get(g:, 'ale_php_phan_minimum_severity', 0)$/;"	v
g:ale_php_phan_use_client	pack/vendor/start/ale-master/ale_linters/php/phan.vim	/^let g:ale_php_phan_use_client = get(g:, 'ale_php_phan_use_client', 0)$/;"	v
g:ale_php_phpcs_standard	pack/vendor/start/ale-master/ale_linters/php/phpcs.vim	/^let g:ale_php_phpcs_standard = get(g:, 'ale_php_phpcs_standard', '')$/;"	v
g:ale_php_phpmd_executable	pack/vendor/start/ale-master/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_executable = get(g:, 'ale_php_phpmd_executable', 'phpmd')$/;"	v
g:ale_php_phpmd_ruleset	pack/vendor/start/ale-master/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_ruleset = get(g:, 'ale_php_phpmd_ruleset', 'cleancode,codesize,controversial/;"	v
g:ale_php_phpstan_autoload	pack/vendor/start/ale-master/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_autoload = get(g:, 'ale_php_phpstan_autoload', '')$/;"	v
g:ale_php_phpstan_configuration	pack/vendor/start/ale-master/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_configuration = get(g:, 'ale_php_phpstan_configuration', '')$/;"	v
g:ale_php_phpstan_executable	pack/vendor/start/ale-master/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_executable = get(g:, 'ale_php_phpstan_executable', 'phpstan')$/;"	v
g:ale_php_phpstan_level	pack/vendor/start/ale-master/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_level = get(g:, 'ale_php_phpstan_level', '')$/;"	v
g:ale_php_phpstan_memory_limit	pack/vendor/start/ale-master/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_memory_limit = get(g:, 'ale_php_phpstan_memory_limit', '')$/;"	v
g:ale_popup_menu_enabled	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_popup_menu_enabled = get(g:, 'ale_popup_menu_enabled', has('gui_running'))$/;"	v
g:ale_puppet_puppetlint_executable	pack/vendor/start/ale-master/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_executable = 'puppet-lint'$/;"	v
g:ale_puppet_puppetlint_options	pack/vendor/start/ale-master/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_options = ''$/;"	v
g:ale_python_auto_pipenv	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_python_auto_pipenv = get(g:, 'ale_python_auto_pipenv', 0)$/;"	v
g:ale_python_auto_poetry	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_python_auto_poetry = get(g:, 'ale_python_auto_poetry', 0)$/;"	v
g:ale_python_prospector_executable	pack/vendor/start/ale-master/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_executable =$/;"	v
g:ale_python_prospector_options	pack/vendor/start/ale-master/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_options =$/;"	v
g:ale_python_prospector_use_global	pack/vendor/start/ale-master/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_use_global = get(g:, 'ale_python_prospector_use_global', get(g:, 'al/;"	v
g:ale_r_lintr_lint_package	pack/vendor/start/ale-master/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_lint_package = get(g:, 'ale_r_lintr_lint_package', 0)$/;"	v
g:ale_r_lintr_options	pack/vendor/start/ale-master/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_options = get(g:, 'ale_r_lintr_options', 'with_defaults()')$/;"	v
g:ale_rename_tsserver_find_in_comments	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^let g:ale_rename_tsserver_find_in_comments = get(g:, 'ale_rename_tsserver_find_in_comments')$/;"	v
g:ale_rename_tsserver_find_in_strings	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^let g:ale_rename_tsserver_find_in_strings = get(g:, 'ale_rename_tsserver_find_in_strings')$/;"	v
g:ale_root	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    let g:ale_root = {}$/;"	v
g:ale_root	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_root = get(g:, 'ale_root', {})$/;"	v
g:ale_run_synchronously	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    let g:ale_run_synchronously = 1$/;"	v
g:ale_run_synchronously_callbacks	pack/vendor/start/ale-master/autoload/ale/command.vim	/^            let g:ale_run_synchronously_callbacks = []$/;"	v
g:ale_run_synchronously_emulate_commands	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^    let g:ale_run_synchronously_emulate_commands = 1$/;"	v
g:ale_rust_ignore_error_codes	pack/vendor/start/ale-master/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_error_codes = []$/;"	v
g:ale_rust_ignore_secondary_spans	pack/vendor/start/ale-master/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_secondary_spans = 0$/;"	v
g:ale_set_balloons	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_set_balloons = get(g:, 'ale_set_balloons', has('balloon_eval') && has('gui_running'))$/;"	v
g:ale_set_highlights	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_set_highlights = get(g:, 'ale_set_highlights', has('syntax'))$/;"	v
g:ale_set_loclist	pack/vendor/start/ale-master/autoload/ale/list.vim	/^    let g:ale_set_loclist = !a:populate_quickfix$/;"	v
g:ale_set_loclist	pack/vendor/start/ale-master/autoload/ale/list.vim	/^    let g:ale_set_loclist = l:loclist_bak$/;"	v
g:ale_set_loclist	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_set_loclist = get(g:, 'ale_set_loclist', 1)$/;"	v
g:ale_set_quickfix	pack/vendor/start/ale-master/autoload/ale/list.vim	/^    let g:ale_set_quickfix = a:populate_quickfix$/;"	v
g:ale_set_quickfix	pack/vendor/start/ale-master/autoload/ale/list.vim	/^    let g:ale_set_quickfix = l:quickfix_bak$/;"	v
g:ale_set_quickfix	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_set_quickfix = get(g:, 'ale_set_quickfix', 0)$/;"	v
g:ale_set_signs	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_set_signs = get(g:, 'ale_set_signs', has('signs'))$/;"	v
g:ale_sh_shell_default_shell	pack/vendor/start/ale-master/ale_linters/sh/shell.vim	/^        let g:ale_sh_shell_default_shell = 'bash'$/;"	v
g:ale_sh_shell_default_shell	pack/vendor/start/ale-master/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = fnamemodify($SHELL, ':t')$/;"	v
g:ale_sh_shell_default_shell	pack/vendor/start/ale-master/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = g:ale_linters_sh_shell_default_shell$/;"	v
g:ale_sign_column_always	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_sign_column_always = get(g:, 'ale_sign_column_always', 0)$/;"	v
g:ale_sign_error	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_sign_error = get(g:, 'ale_sign_error', '>>')$/;"	v
g:ale_sign_highlight_linenrs	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_sign_highlight_linenrs = get(g:, 'ale_sign_highlight_linenrs', 0)$/;"	v
g:ale_sign_info	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_sign_info = get(g:, 'ale_sign_info', g:ale_sign_warning)$/;"	v
g:ale_sign_offset	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_sign_offset = get(g:, 'ale_sign_offset', 1000000)$/;"	v
g:ale_sign_priority	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_sign_priority = get(g:, 'ale_sign_priority', 30)$/;"	v
g:ale_sign_style_error	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_sign_style_error = get(g:, 'ale_sign_style_error', g:ale_sign_error)$/;"	v
g:ale_sign_style_warning	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_sign_style_warning = get(g:, 'ale_sign_style_warning', g:ale_sign_warning)$/;"	v
g:ale_sign_warning	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let g:ale_sign_warning = get(g:, 'ale_sign_warning', '--')$/;"	v
g:ale_tex_chktex_executable	pack/vendor/start/ale-master/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_executable =$/;"	v
g:ale_tex_chktex_options	pack/vendor/start/ale-master/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_options =$/;"	v
g:ale_tsserver_types	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let g:ale_tsserver_types = {$/;"	v
g:ale_type_map	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^let g:ale_type_map = get(g:, 'ale_type_map', {})$/;"	v
g:ale_update_tagstack	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^let g:ale_update_tagstack = get(g:, 'ale_update_tagstack', 1)$/;"	v
g:ale_verilog_verilator_options	pack/vendor/start/ale-master/ale_linters/verilog/verilator.vim	/^    let g:ale_verilog_verilator_options = ''$/;"	v
g:ale_virtualenv_dir_names	pack/vendor/start/ale-master/autoload/ale/python.vim	/^let g:ale_virtualenv_dir_names = get(g:, 'ale_virtualenv_dir_names', [$/;"	v
g:ale_virtualtext_cursor	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_virtualtext_cursor = get(g:, 'ale_virtualtext_cursor', 0)$/;"	v
g:ale_virtualtext_delay	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^let g:ale_virtualtext_delay = get(g:, 'ale_virtualtext_delay', 10)$/;"	v
g:ale_want_results_buffer	pack/vendor/start/ale-master/autoload/ale.vim	/^    let g:ale_want_results_buffer = a:buffer$/;"	v
g:ale_warn_about_trailing_blank_lines	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_warn_about_trailing_blank_lines = get(g:, 'ale_warn_about_trailing_blank_lines', 1)$/;"	v
g:ale_warn_about_trailing_whitespace	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:ale_warn_about_trailing_whitespace = get(g:, 'ale_warn_about_trailing_whitespace', 1)$/;"	v
g:ale_xml_xmllint_executable	pack/vendor/start/ale-master/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_executable = get(g:, 'ale_xml_xmllint_executable', 'xmllint')$/;"	v
g:ale_xml_xmllint_options	pack/vendor/start/ale-master/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_options = get(g:, 'ale_xml_xmllint_options', '')$/;"	v
g:asyncrun_auto	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_auto = get(g:, 'asyncrun_auto', '')$/;"	v
g:asyncrun_bell	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_bell = get(g:, 'asyncrun_bell', 0)$/;"	v
g:asyncrun_bell	vimrc	/^let g:asyncrun_bell = 1$/;"	v
g:asyncrun_cmd	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_cmd = l:command$/;"	v
g:asyncrun_code	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_code = code$/;"	v
g:asyncrun_code	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_code = s:async_code$/;"	v
g:asyncrun_code	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_code = get(g:, 'asyncrun_code', '')$/;"	v
g:asyncrun_encs	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_encs = get(g:, 'asyncrun_encs', '')$/;"	v
g:asyncrun_event	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_event = get(g:, 'asyncrun_event', {})$/;"	v
g:asyncrun_event	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^let g:asyncrun_event = get(g:, 'asyncrun_event', {})$/;"	v
g:asyncrun_exit	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_exit = get(g:, 'asyncrun_exit', '')$/;"	v
g:asyncrun_gui	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^			let g:asyncrun_gui = 1$/;"	v
g:asyncrun_gui	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_gui = 1$/;"	v
g:asyncrun_gui	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_gui = s:asyncrun_gui$/;"	v
g:asyncrun_gui	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_gui = has('gui_running')$/;"	v
g:asyncrun_hook	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_hook = get(g:, 'asyncrun_hook', '')$/;"	v
g:asyncrun_info	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_info = a:args$/;"	v
g:asyncrun_info	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_info = get(g:, 'asyncrun_info', '')$/;"	v
g:asyncrun_last	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_last = get(g:, 'asyncrun_last', 0)$/;"	v
g:asyncrun_local	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_local = get(g:, 'asyncrun_local', 1)$/;"	v
g:asyncrun_mode	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_mode = get(g:, 'asyncrun_mode', 0)$/;"	v
g:asyncrun_name	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_name = ''$/;"	v
g:asyncrun_name	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_name = info.name$/;"	v
g:asyncrun_name	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_name = ''$/;"	v
g:asyncrun_open	vimrc	/^let g:asyncrun_open = 6$/;"	v
g:asyncrun_program	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_program = get(g:, 'asyncrun_program', {})$/;"	v
g:asyncrun_program	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^			let g:asyncrun_program[name] = test$/;"	v
g:asyncrun_program	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^let g:asyncrun_program = get(g:, 'asyncrun_program', {})$/;"	v
g:asyncrun_qfid	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_qfid = has('patch-8.0.1023') || has('nvim-0.6.1')$/;"	v
g:asyncrun_runner	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_runner = get(g:, 'asyncrun_runner', {})$/;"	v
g:asyncrun_runner	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^			let g:asyncrun_runner[name] = test$/;"	v
g:asyncrun_runner	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^let g:asyncrun_runner = get(g:, 'asyncrun_runner', {})$/;"	v
g:asyncrun_save	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_save = get(g:, 'asyncrun_save', 0)$/;"	v
g:asyncrun_script	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_script = get(g:, 'asyncrun_script', '')$/;"	v
g:asyncrun_shell	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_shell = get(g:, 'asyncrun_shell', '')$/;"	v
g:asyncrun_shell_error	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^				let g:asyncrun_shell_error = py3eval('c')$/;"	v
g:asyncrun_shell_error	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^				let g:asyncrun_shell_error = pyeval('c')$/;"	v
g:asyncrun_shell_error	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^			let g:asyncrun_shell_error = v:shell_error$/;"	v
g:asyncrun_shellflag	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_shellflag = get(g:, 'asyncrun_shellflag', '')$/;"	v
g:asyncrun_silent	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_silent = get(g:, 'asyncrun_silent', 1)$/;"	v
g:asyncrun_skip	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_skip = get(g:, 'asyncrun_skip', 0)$/;"	v
g:asyncrun_status	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_status = "failure"$/;"	v
g:asyncrun_status	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_status = "running"$/;"	v
g:asyncrun_status	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_status = "success"$/;"	v
g:asyncrun_status	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_status = get(g:, 'asyncrun_status', '')$/;"	v
g:asyncrun_stdin	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_stdin = has('win32') || has('win64') || has('win95')$/;"	v
g:asyncrun_stop	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_stop = get(g:, 'asyncrun_stop', '')$/;"	v
g:asyncrun_strict	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_strict = get(g:, 'asyncrun_strict', 0)$/;"	v
g:asyncrun_support	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_support = 0$/;"	v
g:asyncrun_text	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let g:asyncrun_text = opts.text$/;"	v
g:asyncrun_text	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_text = s:async_info.text$/;"	v
g:asyncrun_text	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_text = get(g:, 'asyncrun_text', '')$/;"	v
g:asyncrun_timer	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_timer = get(g:, 'asyncrun_timer', 50)$/;"	v
g:asyncrun_translator	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_translator = get(g:, 'asyncrun_translator', {})$/;"	v
g:asyncrun_trim	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_trim = get(g:, 'asyncrun_trim', 0)$/;"	v
g:asyncrun_windows	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let g:asyncrun_windows = 1$/;"	v
g:asyncrun_windows	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let g:asyncrun_windows = 0$/;"	v
g:autoloaded_startify	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let g:autoloaded_startify = 1$/;"	v
g:battery#update_statusline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/battery.vim	/^    let g:battery#update_statusline = 1$/;"	v
g:bufferline_active_buffer_left	pack/vendor/start/vim-airline-master/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_left = ''$/;"	v
g:bufferline_active_buffer_right	pack/vendor/start/vim-airline-master/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_right = ''$/;"	v
g:bufferline_active_highlight	pack/vendor/start/vim-airline-master/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_highlight = 'bufferline_selected'$/;"	v
g:bufferline_inactive_highlight	pack/vendor/start/vim-airline-master/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_inactive_highlight = 'airline_c'$/;"	v
g:bufferline_separator	pack/vendor/start/vim-airline-master/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_separator = g:airline_symbols.space$/;"	v
g:c_clangformat_use_local_file	vimrc	/^let g:c_clangformat_use_local_file = '\/home\/codekali\/.clang-format'$/;"	v
g:clever_f_use_migemo	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let g:clever_f_use_migemo = 0$/;"	v
g:completor_blacklist	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_blacklist = get(g:, 'completor_blacklist', s:default_blacklist)$/;"	v
g:completor_complete_options	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_complete_options = get(g:, 'completor_complete_options', 'menuone,noselect,previ/;"	v
g:completor_completion_delay	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_completion_delay = get(g:, 'completor_completion_delay', 80)$/;"	v
g:completor_def_split	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_def_split = get(g:, 'completor_def_split', '')$/;"	v
g:completor_doc_position	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_doc_position = get(g:, 'completor_doc_position', 'bottom')$/;"	v
g:completor_filename_completion_in_only_comment	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_filename_completion_in_only_comment = get(g:, 'completor_filename_completion_in_/;"	v
g:completor_filesize_limit	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_filesize_limit = get(g:, 'completor_filesize_limit', 1024) * 1024$/;"	v
g:completor_filetype_map	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_filetype_map = extend(s:default_type_map, get(g:, 'completor_filetype_map', {}))$/;"	v
g:completor_min_chars	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_min_chars = get(g:, 'completor_min_chars', 2)$/;"	v
g:completor_refresh_always	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_refresh_always = get(g:, 'completor_refresh_always', 1)$/;"	v
g:completor_use_popup_window	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:completor_use_popup_window = get(g:, 'completor_use_popup_window', 0)$/;"	v
g:ctrlp_status_func	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlp.vim	/^  let g:ctrlp_status_func = {$/;"	v
g:cursormode_exit_mode	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^  let g:cursormode_exit_mode='n'$/;"	v
g:dir	pack/vendor/start/ale-master/autoload/ale/test.vim	/^    let g:dir = getcwd() " no-custom-checks$/;"	v
g:fern_force_overwrite_statusline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fern.vim	/^  let g:fern_force_overwrite_statusline = 0$/;"	v
g:gina#component#repo#commit_length	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^    let g:gina#component#repo#commit_length = s:sha1size$/;"	v
g:gina_force_overwrite_statusline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/gina.vim	/^  let g:gina_force_overwrite_statusline = 0$/;"	v
g:gutentags_add_ctrlp_root_markers	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_auto_add_pycscope	pack/vendor/start/vim-gutentags/autoload/gutentags/pycscope.vim	/^    let g:gutentags_auto_add_pycscope = 1$/;"	v
g:gutentags_background_update	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cache_dir	vimrc	/^let g:gutentags_cache_dir = s:vim_tags$/;"	v
g:gutentags_cscope_build_inverted_index	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_extra_args	vimrc	/^let g:gutentags_ctags_extra_args += ['--c++-kinds=+px','--c++-kinds=+l']$/;"	v
g:gutentags_ctags_extra_args	vimrc	/^let g:gutentags_ctags_extra_args += ['--c-kinds=+px','--c-kinds=+l']$/;"	v
g:gutentags_ctags_extra_args	vimrc	/^let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']$/;"	v
g:gutentags_ctags_options_file	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_ctags_tagfile	vimrc	/^let g:gutentags_ctags_tagfile = '.tags'$/;"	v
g:gutentags_debug	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', $/;"	v
g:gutentags_fake	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root	vimrc	/^let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project']$/;"	v
g:gutentags_project_root_finder	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_pycscope_executable	pack/vendor/start/vim-gutentags/autoload/gutentags/pycscope.vim	/^    let g:gutentags_pycscope_executable = 'pycscope'$/;"	v
g:gutentags_pyscopefile	pack/vendor/start/vim-gutentags/autoload/gutentags/pycscope.vim	/^    let g:gutentags_pyscopefile = 'pycscope.out'$/;"	v
g:gutentags_res_dir	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^            let g:gutentags_trace = l:prev_trace$/;"	v
g:gutentags_trace	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = 1$/;"	v
g:gutentags_trace	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:loaded_airline	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_ale	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:loaded_ale = 1$/;"	v
g:loaded_ale_dont_use_this_in_other_plugins_please	pack/vendor/start/ale-master/plugin/ale.vim	/^let g:loaded_ale_dont_use_this_in_other_plugins_please = 1$/;"	v
g:loaded_completor_plugin	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let g:loaded_completor_plugin = 1$/;"	v
g:loaded_cursormode	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^let g:loaded_cursormode = 1$/;"	v
g:loaded_gutentags	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_nerdtree_autoload	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	pack/vendor/start/nerdtree-master/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_solarized_menu	colors/solarized.vim	/^    let g:loaded_solarized_menu = 1$/;"	v
g:loaded_startify	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^let g:loaded_startify = 1$/;"	v
g:loaded_tagbar	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_vim_airline_zoomwintab	pack/vendor/start/vim-airline-master/autoload/airline/extensions/zoomwintab.vim	/^let g:loaded_vim_airline_zoomwintab = 1$/;"	v
g:loaded_xtabline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:loaded_xtabline = 1$/;"	v
g:netrw_force_overwrite_statusline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/netrw.vim	/^  let g:netrw_force_overwrite_statusline = 0$/;"	v
g:obsession_append	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:obsession_append = [string]$/;"	v
g:promptline_symbols	pack/vendor/start/vim-airline-master/autoload/airline/extensions/promptline.vim	/^    let g:promptline_symbols = {$/;"	v
g:repeat_tick	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^                    let g:repeat_tick = b:changedtick$/;"	v
g:startify_change_cmd	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^    let g:startify_change_cmd = 'lcd'$/;"	v
g:startify_change_cmd	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  let g:startify_change_cmd = get(g:, 'startify_change_cmd', 'lcd')$/;"	v
g:startify_custom_header	pack/vendor/start/vim-startify-master/test/vimrc	/^let g:startify_custom_header = []$/;"	v
g:startify_custom_header_quotes	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let g:startify_custom_header_quotes = exists('g:startify_custom_header_quotes')$/;"	v
g:startify_enable_special	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let g:startify_enable_special = get(g:, 'startify_enable_special', 1)$/;"	v
g:startify_files_number	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let g:startify_files_number = get(g:, 'startify_files_number', 10)$/;"	v
g:startify_fortune_use_unicode	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let g:startify_fortune_use_unicode = &encoding == 'utf-8' && get(g:, 'startify_fortune_use_unico/;"	v
g:startify_header	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^    let g:startify_header += ['']  " add blank line$/;"	v
g:startify_header	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  let g:startify_header = exists('g:startify_custom_header')$/;"	v
g:startify_locked	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^let g:startify_locked = 0$/;"	v
g:startify_padding_left	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let g:startify_padding_left = get(g:, 'startify_padding_left', 3)$/;"	v
g:startify_relative_path	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let g:startify_relative_path = get(g:, 'startify_relative_path') ? ':~:.' : ':p:~'$/;"	v
g:startify_relative_path	pack/vendor/start/vim-startify-master/test/vimrc	/^let g:startify_relative_path = 1$/;"	v
g:startify_session_dir	pack/vendor/start/vim-startify-master/test/vimrc	/^let g:startify_session_dir = 'session'$/;"	v
g:startify_skiplist	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let g:startify_skiplist = extend(get(g:, 'startify_skiplist', []), [$/;"	v
g:startify_transformations	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let g:startify_transformations = get(g:, 'startify_transformations', [])$/;"	v
g:syntastic_stl_format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = _backup$/;"	v
g:syntastic_stl_format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_err', '%E{[%fe/;"	v
g:syntastic_stl_format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_warn', '%W{[%f/;"	v
g:taboo_tabline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
g:tagbar#icon_closed	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let g:tagbar#icon_closed = g:tagbar_iconchars[0]$/;"	v
g:tagbar#icon_open	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let g:tagbar#icon_open   = g:tagbar_iconchars[1]$/;"	v
g:tagbar_autoclose	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^    let g:tagbar_autoclose = !g:tagbar_autoclose$/;"	v
g:tagbar_case_insensitive	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^    let g:tagbar_case_insensitive = !g:tagbar_case_insensitive$/;"	v
g:tagbar_ctags_bin	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^                let g:tagbar_ctags_bin = ctags$/;"	v
g:tagbar_ctags_bin	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = expand(g:tagbar_ctags_bin)$/;"	v
g:tagbar_height	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^            let g:tagbar_height = g:tagbar_vertical$/;"	v
g:tagbar_hide_nonpublic	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^    let g:tagbar_hide_nonpublic = !g:tagbar_hide_nonpublic$/;"	v
g:tagbar_iconchars	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▸', '▾']$/;"	v
g:tagbar_position	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^            let g:tagbar_position = 'botright vertical'$/;"	v
g:tagbar_position	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^            let g:tagbar_position = 'leftabove'$/;"	v
g:tagbar_position	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^            let g:tagbar_position = 'rightbelow'$/;"	v
g:tagbar_position	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^            let g:tagbar_position = 'topleft vertical'$/;"	v
g:tagbar_sort	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^        let g:tagbar_sort = !g:tagbar_sort$/;"	v
g:tagbar_status_func	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^  let g:tagbar_status_func = 'airline#extensions#tagbar#get_status'$/;"	v
g:unite_force_overwrite_statusline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/unite.vim	/^  let g:unite_force_overwrite_statusline = 0$/;"	v
g:vimfiler_force_overwrite_statusline	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^    let g:vimfiler_force_overwrite_statusline = 0$/;"	v
g:xtab_cwds	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:xtab_cwds[tabpagenr()-1] = t:cwd$/;"	v
g:xtabline_alt_action	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:xtabline_alt_action = get(g:, 'xtabline_alt_action', "buffer #")$/;"	v
g:xtabline_changing_buffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:xtabline_changing_buffer = 1$/;"	v
g:xtabline_include_previews	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:xtabline_include_previews = get(g:, 'xtabline_include_previews', 1)$/;"	v
gather_candidates	pack/vendor/start/ale-master/rplugin/python3/deoplete/sources/ale.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
genConfig	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^function genConfig() {$/;"	f
gen_entry	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^def gen_entry(pat, dirname, basename, offset):$/;"	f
gen_hover_doc	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^def gen_hover_doc(ft, value):$/;"	f
gen_jump_list	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^def gen_jump_list(ft, name, data):$/;"	f
gen_position_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def gen_position_request(self, category):$/;"	m	class:Lsp
gen_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def gen_request(self, action, args):$/;"	m	class:Lsp
gen_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def gen_request(self, params=None):$/;"	m	class:Base
gen_request	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def gen_request(self, action=b'complete', args=None):$/;"	m	class:Completor
gen_request	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def gen_request(args):$/;"	f
gen_uri	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/utils.py	/^def gen_uri(path):$/;"	f
get	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def get(filetype, ft=None, input_data=None):$/;"	f
get	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^        def get(self, *args, **kwargs):$/;"	m	class:_patch_nvim.vars_wrapper
get_cmd_info	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^    def get_cmd_info(self, action):$/;"	m	class:Clang
get_cmd_info	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def get_cmd_info(self, action):$/;"	m	class:Go
get_cmd_info	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def get_cmd_info(self, action):$/;"	m	class:Lsp
get_cmd_info	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    def get_cmd_info(self, action):$/;"	m	class:Jedi
get_cmd_info	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^    def get_cmd_info(self, action):$/;"	m	class:Racer
get_cmd_info	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def get_cmd_info(self, action):$/;"	m	class:Completor
get_complete_position	pack/vendor/start/ale-master/rplugin/python3/deoplete/sources/ale.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_completer	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def get_completer(args):$/;"	f
get_completion_word	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^def get_completion_word(item, insert_text):$/;"	f
get_current_buffer_encoding	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^from completor import Completor, vim, LIMIT, get_encoding as get_current_buffer_encoding$/;"	x
get_current_completer	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def get_current_completer():$/;"	f
get_encoding	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^def get_encoding(nr):$/;"	f
get_encoding	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def get_encoding():$/;"	f
get_offset	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def get_offset(self):$/;"	m	class:Go
get_option	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def get_option(key):$/;"	m	class:Completor
get_start_column	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def get_start_column(args):$/;"	f
get_token_path	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def get_token_path(line, column, word):$/;"	f
get_version	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def get_version(self, f):$/;"	m	class:Lsp
get_word	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def get_word(text):$/;"	f
getftime	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^def getftime(nr):$/;"	f
glob	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var glob = require('glob');$/;"	v
go	pack/vendor/start/completor.vim-master/README.md	/^#### go$/;"	t
group	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def group(data, condition):$/;"	f
guess	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      guess: false,$/;"	p	class:complete.query
gutentags#add_job	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_get_project_root	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_get_project_root(path) abort$/;"	f
gutentags#default_stderr_cb	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stderr_cb(chan, msg) abort$/;"	f
gutentags#default_stdout_cb	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stdout_cb(chan, msg) abort$/;"	f
gutentags#error	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#on_vim_leave	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#on_vim_leave() abort$/;"	f
gutentags#on_vim_leave_pre	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#on_vim_leave_pre() abort$/;"	f
gutentags#pycscope#generate	pack/vendor/start/vim-gutentags/autoload/gutentags/pycscope.vim	/^function! gutentags#pycscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#pycscope#init	pack/vendor/start/vim-gutentags/autoload/gutentags/pycscope.vim	/^function! gutentags#pycscope#init(project_root) abort$/;"	f
gutentags#pycscope#on_job_exit	pack/vendor/start/vim-gutentags/autoload/gutentags/pycscope.vim	/^function! gutentags#pycscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#remove_job	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	pack/vendor/start/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
handle_stream	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def handle_stream(self, name, action, msg):$/;"	m	class:Completor
handler	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^handler = logging.FileHandler(log_file, delay=1)$/;"	v
has_neoinclude	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^    def has_neoinclude(self):$/;"	m	class:Neoinclude
has_omnifunc	pack/vendor/start/completor.vim-master/pythonx/completers/common/omni.py	/^    def has_omnifunc(self, ft):$/;"	m	class:Omni
hiddenLines	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^hiddenLines = ["on pkg.go.dev"]$/;"	v
hjkl motions	pack/vendor/start/vim-easymotion-master/README.md	/^### hjkl motions$/;"	S
hooks	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^    hooks = ['ultisnips', 'buffer', 'filename']$/;"	v	class:Common
hs_highlight_boolean	colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
hunks ([vim-gitgutter][29] & [vim-signify][30] & [coc-git][59])	pack/vendor/start/vim-airline-master/README.md	/^#### hunks ([vim-gitgutter][29] & [vim-signify][30] & [coc-git][59])$/;"	t
i	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> i <NOP>$/;"	m
i	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> i             :enew <bar> startinsert<cr>$/;"	m
ident	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^    ident = r"""[@a-zA-Z0-9(){}$+_~.'"\\x80-\\xff\\u4e00-\\u9fff\\[\\]-]*"""$/;"	v	class:Filename
ident	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/__init__.py	/^    ident = re.compile(r"""(\\w+)|(["'][^"']*)""", re.U)$/;"	v	class:Tern
ident	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    ident = re.compile(r'\\w+', re.U)$/;"	v	class:Completor
ident_match	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def ident_match(self, pat):$/;"	m	class:Completor
ignore	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    def ignore(self, args):$/;"	m	class:JediProcessor
ignore_exception	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^def ignore_exception(fallback=()):$/;"	f
import_completer	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def import_completer(ft):$/;"	f
inLiteral	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      inLiteral: false,$/;"	p	class:complete.query
initialize_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def initialize_request(self, project_name, project_path):$/;"	m	class:Lsp
initialized_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def initialized_request(self):$/;"	m	class:Lsp
inner	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^        def inner(*args, **kwargs):$/;"	f	function:_patch_nvim.function	file:
integer_types	pack/vendor/start/completor.vim-master/pythonx/completor/compat.py	/^    integer_types = (int, long)$/;"	v
is_comment_or_string	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def is_comment_or_string(self):$/;"	m	class:Completor
is_common	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^    def is_common(cls, comp):$/;"	m	class:Common
is_group	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def is_group(word, heading):$/;"	f
is_message_end	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^    def is_message_end(self, msg):$/;"	m	class:Racer
is_message_end	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def is_message_end(self, msg):$/;"	m	class:Completor
is_message_end	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def is_message_end(args):$/;"	f
jedi_context	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    def jedi_context(self, args):$/;"	m	class:JediProcessor
js	pack/vendor/start/completor.vim-master/Makefile	/^js:$/;"	t
l	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let l = line('.')$/;"	v
l	pack/vendor/start/vim-easymotion-master/t/operator_pending_spec.vim	/^        let l = line('.')$/;"	v
l	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^        let l = line('.')$/;"	v
labels: "feature request"	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/feature_request.md	/^labels: "feature request"$/;"	s
labels: "general question"	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/question.md	/^labels: "general question"$/;"	s
labels: bug	pack/vendor/start/nerdtree-master/.github/ISSUE_TEMPLATE/bug.md	/^labels: bug$/;"	s
libs	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    libs: [],$/;"	p	class:genConfig.defaultConfig
line	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      end: {line: line, ch: col},$/;"	p	class:complete.query.end
load	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def load(ft, input_data=b''):$/;"	f
load	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def load(args):$/;"	f
loadEagerly	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    loadEagerly: false,$/;"	p	class:genConfig.defaultConfig
loadPlugins	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^function loadPlugins(projectDir, config) {$/;"	f
load_completer	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def load_completer(ft, input_data):$/;"	f
loaded_nerd_comments	pack/vendor/start/nerdcommenter-master/plugin/nerdcommenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
log_file	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^log_file = os.path.join(os.path.dirname(__file__), 'completor_python.log')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/ale.py	/^logger = logging.getLogger("completor")$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/common/omni.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^logger = logging.getLogger("completor")$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^logger = logging.getLogger("completor")$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^logger = logging.getLogger('python-jedi')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^logger = logging.getLogger('completor')$/;"	v
logger	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^logger = logging.getLogger('completor')$/;"	v
main	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^def main():$/;"	f
match	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^    def match(self, input_data):$/;"	m	class:Filename
match	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^    def match(self, input_data):$/;"	m	class:Neoinclude
match	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def match(self, input_data):$/;"	m	class:Completor
menu	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^        var comp = {word: completion.name, menu: completion.type};$/;"	p	class:AnonymousFunctionb79ae6440600.comp
merge	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^  function merge(base, value) {$/;"	f	function:genConfig
meta	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    meta = None$/;"	v	class:Completor
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = "textDocument\/hover"$/;"	v	class:Hover
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = "textDocument\/implementation"$/;"	v	class:Implementation
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = "textDocument\/references"$/;"	v	class:References
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = "textDocument\/signatureHelp"$/;"	v	class:Signature
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = "workspace\/didChangeConfiguration"$/;"	v	class:DidChangeConfiguration
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = ''$/;"	v	class:Base
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = 'initialize'$/;"	v	class:Initialize
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = 'initialized'$/;"	v	class:Initialized
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = 'textDocument\/completion'$/;"	v	class:Completion
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = 'textDocument\/definition'$/;"	v	class:Definition
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = 'textDocument\/didChange'$/;"	v	class:DidChange
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = 'textDocument\/didOpen'$/;"	v	class:DidOpen
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = 'textDocument\/didSave'$/;"	v	class:DidSave
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = 'textDocument\/formatting'$/;"	v	class:Format
method	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    method = 'textDocument\/rename'$/;"	v	class:Rename
minimatch	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var minimatch = require('minimatch');$/;"	v
module.is_no_insert	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^	function! module.is_no_insert(char)$/;"	f
n	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><expr> n ' j'[v:searchforward].'n'$/;"	m
n-character search motion	pack/vendor/start/vim-easymotion-master/README.md	/^### n-character search motion$/;"	S
name	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/package.json	/^  "name": "tern_wrapper",$/;"	s
name	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      name: filename,$/;"	p	class:complete.file
nerdcommenter#Comment	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! nerdcommenter#Comment(mode, type) range abort$/;"	f
nerdcommenter#IsCharCommented	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! nerdcommenter#IsCharCommented(line, col) abort$/;"	f
nerdcommenter#IsLineCommented	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! nerdcommenter#IsLineCommented(lineNo) abort$/;"	f
nerdcommenter#SetUp	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! nerdcommenter#SetUp() abort$/;"	f
nerdcommenter#SwitchToAlternativeDelimiters	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! nerdcommenter#SwitchToAlternativeDelimiters(printMsgs) abort$/;"	f
nerdcommenter#delimiterMap	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^let nerdcommenter#delimiterMap = s:delimiterMap$/;"	v
nerdtree#checkForBrowse	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir) abort$/;"	f
nerdtree#closeBookmarksOnOpen	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#closeBookmarksOnOpen() abort$/;"	f
nerdtree#closeTreeOnOpen	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#closeTreeOnOpen() abort$/;"	f
nerdtree#compareNodePaths	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#compareNodePaths(p1, p2) abort$/;"	f
nerdtree#compareNodes	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2) abort$/;"	f
nerdtree#completeBookmarks	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P) abort$/;"	f
nerdtree#deprecated	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...) abort$/;"	f
nerdtree#echo	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#echo(msg) abort$/;"	f
nerdtree#echoError	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg) abort$/;"	f
nerdtree#echoWarning	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg) abort$/;"	f
nerdtree#exec	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll) abort$/;"	f
nerdtree#has_opt	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name) abort$/;"	f
nerdtree#loadClassFiles	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles() abort$/;"	f
nerdtree#postSourceActions	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions() abort$/;"	f
nerdtree#renderView	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#renderView() abort$/;"	f
nerdtree#runningCygwin	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin() abort$/;"	f
nerdtree#runningWindows	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#runningWindows() abort$/;"	f
nerdtree#slash	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#slash() abort$/;"	f
nerdtree#ui_glue#bookmarkNode	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...) abort$/;"	f
nerdtree#ui_glue#chRootCwd	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd() abort$/;"	f
nerdtree#ui_glue#clearBookmarks	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks) abort$/;"	f
nerdtree#ui_glue#createDefaultBindings	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings() abort$/;"	f
nerdtree#ui_glue#invokeKeyMap	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key) abort$/;"	f
nerdtree#ui_glue#openBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name) abort$/;"	f
nerdtree#ui_glue#revealBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name) abort$/;"	f
nerdtree#ui_glue#setupCommands	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands() abort$/;"	f
nerdtree#ui_glue#upDir	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState) abort$/;"	f
nerdtree#version	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! nerdtree#version(...) abort$/;"	f
notify	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    notify = False$/;"	v	class:Base
notify	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    notify = True$/;"	v	class:DidChange
notify	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    notify = True$/;"	v	class:DidChangeConfiguration
notify	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    notify = True$/;"	v	class:DidOpen
notify	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    notify = True$/;"	v	class:DidSave
notify	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    notify = True$/;"	v	class:Initialized
o	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> o <NOP>$/;"	m
on_complete	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^    def on_complete(self, items):$/;"	m	class:Clang
on_complete	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def on_complete(self, items):$/;"	m	class:Go
on_complete	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def on_complete(self, data):$/;"	m	class:Lsp
on_complete	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    def on_complete(self, data):$/;"	m	class:Jedi
on_complete	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    def on_complete(self, args):$/;"	m	class:JediProcessor
on_complete	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^    def on_complete(self, items):$/;"	m	class:Racer
on_data	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def on_data(self, action, data):$/;"	m	class:Completor
on_data	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def on_data(args):$/;"	f
on_definition	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^    def on_definition(self, items):$/;"	m	class:Clang
on_definition	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def on_definition(self, items):$/;"	m	class:Go
on_definition	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def on_definition(self, data):$/;"	m	class:Lsp
on_definition	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    def on_definition(self, data):$/;"	m	class:Jedi
on_definition	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    def on_definition(self, args):$/;"	m	class:JediProcessor
on_definition	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^    def on_definition(self, items):$/;"	m	class:Racer
on_doc	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    def on_doc(self, items):$/;"	m	class:Go
on_doc	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    on_doc = on_definition$/;"	v	class:Jedi
on_doc	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    def on_doc(self, args):$/;"	m	class:JediProcessor
on_doc	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^    def on_doc(self, items):$/;"	m	class:Racer
on_exit	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def on_exit(self):$/;"	m	class:Completor
on_exit	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def on_exit(args):$/;"	f
on_hover	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def on_hover(self, data):$/;"	m	class:Lsp
on_implementation	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def on_implementation(self, data):$/;"	m	class:Lsp
on_references	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def on_references(self, data):$/;"	m	class:Lsp
on_rename	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def on_rename(self, data):$/;"	m	class:Lsp
on_signature	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    on_signature = on_definition$/;"	v	class:Jedi
on_signature	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    def on_signature(self, args):$/;"	m	class:JediProcessor
on_stream	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def on_stream(self, action, data):$/;"	m	class:Lsp
on_stream	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def on_stream(self, action, msg):$/;"	m	class:Completor
on_stream	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def on_stream(args):$/;"	f
open_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def open_request(self):$/;"	m	class:Lsp
origin	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        let origin = CursorPos()$/;"	v
other languages	pack/vendor/start/completor.vim-master/README.md	/^#### other languages$/;"	t
parse	pack/vendor/start/completor.vim-master/pythonx/completers/ale.py	/^    def parse(self, base):$/;"	m	class:ALE
parse	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^    def parse(self, base):$/;"	m	class:Common
parse	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^    def parse(self, base):$/;"	m	class:Buffer
parse	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^    def parse(self, base):$/;"	m	class:Filename
parse	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^    def parse(self, base):$/;"	m	class:Neoinclude
parse	pack/vendor/start/completor.vim-master/pythonx/completers/common/omni.py	/^    def parse(self, base):$/;"	m	class:Omni
parse	pack/vendor/start/completor.vim-master/pythonx/completers/common/ultisnips.py	/^    def parse(self, base):$/;"	m	class:Ultisnips
parse	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/__init__.py	/^    def parse(self, data):$/;"	m	class:Tern
parse_ast_dump	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def parse_ast_dump(data, word, line, column):$/;"	f
parse_buffers	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^    def parse_buffers(self, base):$/;"	m	class:TokenStore
parse_config	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def parse_config(self, files):$/;"	m	class:Completor
parse_data	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def parse_data(self):$/;"	m	class:Lsp
parse_uri	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/utils.py	/^def parse_uri(uri):$/;"	f
pat	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^    pat = re.compile(r'[^\\W\\d]{3}\\w{0,45}', re.U)$/;"	v	class:TokenStore
path	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^path = os.path.dirname(__file__)$/;"	v
path	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var path = require('path');$/;"	v
plugin	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^    augroup plugin-xtabline$/;"	a
plugin	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^    augroup plugin-easymotion-active$/;"	a
plugin	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^    augroup plugin-easymotion$/;"	a
plugins	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    plugins: {doc_comment: true},$/;"	c	class:genConfig.defaultConfig
position_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def position_request(self, category):$/;"	m	class:Lsp
prepare_request	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    def prepare_request(self, action):$/;"	m	class:Jedi
prepare_request	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^    def prepare_request(self, action):$/;"	m	class:Racer
prepare_request	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def prepare_request(self, action=b'complete'):$/;"	m	class:Completor
process	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^    def process(self, args):$/;"	m	class:JediProcessor
q	pack/vendor/start/ale-master/ftplugin/ale-fix-suggest.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	pack/vendor/start/ale-master/ftplugin/ale-preview.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^  nnoremap <buffer> q ZQ$/;"	m
query	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    var doc = {query: query, files: [file]};$/;"	p	class:complete.doc
query	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^    var query = {$/;"	c	class:complete
readConfig	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^  function readConfig(fileName) {$/;"	f	function:genConfig
readJSON	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^function readJSON(fileName) {$/;"	f
readline	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var readline = require('readline');$/;"	v
registry	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    registry = {}$/;"	v	class:Meta
rename_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def rename_request(self, name):$/;"	m	class:Lsp
request	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def request(self):$/;"	m	class:Completor
reset	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def reset(self):$/;"	m	class:Lsp
reset	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def reset(self):$/;"	m	class:Completor
reset	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^def reset(args):$/;"	f
reset	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    def reset(self):$/;"	m	class:Vim
reset_guru	pack/vendor/start/completor.vim-master/tests/test_go.py	/^    def reset_guru(self):$/;"	m	class:TestDoc
resolveFrom	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var resolveFrom = require('resolve-from');$/;"	v
run	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^def run(jedi):$/;"	f
s	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-sn)$/;"	m
s	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s2)$/;"	m
s	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> s             :call startify#set_mark('S')<cr>$/;"	m
s/	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map s\/ <Plug>(easymotion-sn)$/;"	m
s:AbbreviateMessage	pack/vendor/start/ale-master/ale_linters/erlang/elvis.vim	/^function! s:AbbreviateMessage(text) abort$/;"	f
s:AddHintsForTypeScriptParsingErrors	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! s:AddHintsForTypeScriptParsingErrors(output) abort$/;"	f
s:AddLeftDelim	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:AddLeftDelim(delim, theLine) abort$/;"	f
s:AddLeftDelimAligned	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:AddLeftDelimAligned(delim, theLine, alignIndx) abort$/;"	f
s:AddProblemsFromOtherBuffers	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:AddProblemsFromOtherBuffers(buffer, linters) abort$/;"	f
s:AddRightDelim	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:AddRightDelim(delim, theLine) abort$/;"	f
s:AddRightDelimAligned	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:AddRightDelimAligned(delim, theLine, alignIndx) abort$/;"	f
s:AddSubCallbacks	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! s:AddSubCallbacks(full_list, callbacks) abort$/;"	f
s:AltMultipart	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:AltMultipart() abort$/;"	f
s:AltNested	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:AltNested() abort$/;"	f
s:AppendCommentToLine	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:AppendCommentToLine() abort$/;"	f
s:AppendText	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AppendText(textlist, raw)$/;"	f
s:ApplyPartialTimer	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! s:ApplyPartialTimer(timer_id) abort$/;"	f
s:AsyncRun_Job_AutoCmd	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoCmd(mode, auto)$/;"	f
s:AsyncRun_Job_AutoScroll	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoScroll()$/;"	f
s:AsyncRun_Job_CheckScroll	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_CheckScroll()$/;"	f
s:AsyncRun_Job_Cursor	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Cursor()$/;"	f
s:AsyncRun_Job_NeoVim	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_NeoVim(job_id, data, event)$/;"	f
s:AsyncRun_Job_OnCallback	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnCallback(channel, text)$/;"	f
s:AsyncRun_Job_OnClose	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnClose(channel)$/;"	f
s:AsyncRun_Job_OnExit	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnExit(job, message)$/;"	f
s:AsyncRun_Job_OnFinish	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnFinish()$/;"	f
s:AsyncRun_Job_Start	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Start(cmd)$/;"	f
s:AsyncRun_Job_Status	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Status()$/;"	f
s:AsyncRun_Job_Stop	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Stop(how)$/;"	f
s:AsyncRun_Job_Update	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Update(count, ...)$/;"	f
s:AutoCmd	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:AutoCmd(name)$/;"	f
s:AutoUpdate	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force, ...) abort$/;"	f
s:Bookmark	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Bookmark.AddBookmark	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
s:Bookmark.BookmarkExistsFor	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
s:Bookmark.BookmarkFor	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
s:Bookmark.BookmarkNames	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
s:Bookmark.Bookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
s:Bookmark.CacheBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
s:Bookmark.ClearAll	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
s:Bookmark.CompareBookmarksByName	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
s:Bookmark.Edit	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
s:Bookmark.GetNodeForName	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
s:Bookmark.GetSelected	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
s:Bookmark.InvalidBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
s:Bookmark.New	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
s:Bookmark.SortBookmarksList	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
s:Bookmark.ToRoot	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
s:Bookmark.Write	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
s:Bookmark.activate	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
s:Bookmark.delete	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
s:Bookmark.getNode	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
s:Bookmark.mustExist	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
s:Bookmark.open	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
s:Bookmark.openInNewTab	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
s:Bookmark.setPath	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
s:Bookmark.str	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
s:Bookmark.toRoot	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
s:Bookmark.validate	pack/vendor/start/nerdtree-master/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
s:Buffer	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/undo.vim	/^let s:Buffer = vital#easymotion#import('Vim.Buffer')$/;"	v
s:BufferCacheExists	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^function! s:BufferCacheExists(buffer) abort$/;"	f
s:BuildClassPathOption	pack/vendor/start/ale-master/ale_linters/java/javac.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
s:BuildClassPathOption	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
s:BuildSignMap	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! s:BuildSignMap(buffer, current_sign_list, grouped_items) abort$/;"	f
s:BuildText	pack/vendor/start/ale-master/ale_linters/ruby/reek.vim	/^function! s:BuildText(buffer, error) abort$/;"	f
s:CFG_TO_LSP_SEVERITY	pack/vendor/start/ale-master/autoload/ale/lsp_window.vim	/^let s:CFG_TO_LSP_SEVERITY = {$/;"	v
s:COMPLETION_TRIGGER_CHARACTER	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_CHARACTER = 2$/;"	v
s:COMPLETION_TRIGGER_INVOKED	pack/vendor/start/ale-master/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_INVOKED = 1$/;"	v
s:CanCommentLine	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CanCommentLine(forceNested, lineNum) abort$/;"	f
s:CanParseMakefile	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! s:CanParseMakefile(buffer) abort$/;"	f
s:CanPlaceCursor	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CanPlaceCursor(line, col) abort$/;"	f
s:CanSexyCommentLines	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CanSexyCommentLines(topline, bottomline) abort$/;"	f
s:CanToggleCommentLine	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CanToggleCommentLine(forceNested, lineNum) abort$/;"	f
s:Cancell	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:Cancell() " {{{$/;"	f
s:ChangeCmp	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! s:ChangeCmp(left, right) abort$/;"	f
s:ChangeFoldLevel	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ChangeFoldLevel(diff, force) abort$/;"	f
s:CheckDefined	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! s:CheckDefined(colors) abort$/;"	f
s:CheckExCtagsVersion	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
s:CheckFTCtags	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
s:CheckForBadConfig	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! s:CheckForBadConfig(buffer, lines) abort$/;"	f
s:CheckForExCtags	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
s:CheckMouseClick	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
s:CheckWithLSP	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:CheckWithLSP(linter, details) abort$/;"	f
s:CloseFold	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
s:CloseWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
s:CloseWindowIfNeeded	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! s:CloseWindowIfNeeded(buffer) abort$/;"	f
s:CmpPatterns	pack/vendor/start/ale-master/autoload/ale/pattern_options.vim	/^function! s:CmpPatterns(left_item, right_item) abort$/;"	f
s:CommentBlock	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CommentBlock(top, bottom, lSide, rSide, forceNested) abort$/;"	f
s:CommentLines	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CommentLines(forceNested, align, firstLine, lastLine) abort$/;"	f
s:CommentLinesMinimal	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CommentLinesMinimal(firstLine, lastLine) abort$/;"	f
s:CommentLinesSexy	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CommentLinesSexy(topline, bottomline) abort$/;"	f
s:CommentLinesToggle	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CommentLinesToggle(forceNested, firstLine, lastLine) abort$/;"	f
s:CommentRegion	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested) abort$/;"	f
s:CompletionStillValid	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! s:CompletionStillValid(request_id) abort$/;"	f
s:ConvertLanguageName	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! s:ConvertLanguageName(language) abort$/;"	f
s:ConvertLeadingSpacesToTabs	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:ConvertLeadingSpacesToTabs(line) abort$/;"	f
s:ConvertLeadingTabsToSpaces	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:ConvertLeadingTabsToSpaces(line) abort$/;"	f
s:ConvertLeadingWhiteSpace	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:ConvertLeadingWhiteSpace(line) abort$/;"	f
s:CorrectFocusOnStartup	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
s:CountNonESCedOccurances	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CountNonESCedOccurances(str, searchstr, escChar) abort$/;"	f
s:CreateAutocommands	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
s:CreateCoordKeyDict	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:CreateCoordKeyDict(groups, ...)$/;"	f
s:CreateCountDict	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^function! s:CreateCountDict() abort$/;"	f
s:CreateDelimMapFromCms	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:CreateDelimMapFromCms() abort$/;"	f
s:CreateMaps	pack/vendor/start/nerdcommenter-master/plugin/nerdcommenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
s:CreateTSServerMessageData	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! s:CreateTSServerMessageData(message) abort$/;"	f
s:CreateTabTreeVCS	pack/vendor/start/nerdtree-master/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
s:Creator	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Creator.BufNamePrefix	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
s:Creator.CreateMirror	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
s:Creator.CreateTabTree	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
s:Creator.CreateWindowTree	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
s:Creator.New	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
s:Creator.ToggleTabTree	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
s:Creator._bindMappings	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
s:Creator._broadcastInitEvent	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
s:Creator._createNERDTree	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
s:Creator._createTreeWin	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
s:Creator._isBufHidden	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
s:Creator._nextBufferName	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
s:Creator._nextBufferNumber	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
s:Creator._pathForString	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
s:Creator._removeTreeBufForTab	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
s:Creator._setCommonBufOptions	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
s:Creator._setupStatusline	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
s:Creator._tabpagevar	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
s:Creator._uniq	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
s:Creator.createMirror	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
s:Creator.createTabTree	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
s:Creator.createWindowTree	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
s:Creator.toggleTabTree	pack/vendor/start/nerdtree-master/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
s:CtagsErrMsg	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
s:DIRECTION	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^let s:DIRECTION = { 'forward': 0, 'backward': 1, 'bidirection': 2}$/;"	v
s:DIRECTION	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:DIRECTION = {'forward': 0, 'backward': 1}$/;"	v
s:DOC_POSITION	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^let s:DOC_POSITION = {$/;"	v
s:Deduplicate	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! s:Deduplicate(list) abort$/;"	f
s:DetectFiletype	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
s:DisablePostamble	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! s:DisablePostamble() abort$/;"	f
s:DispatchEvent	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:DispatchEvent(name, ...)$/;"	f
s:Do	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:Do(action)$/;"	f
s:DoesBlockHaveDelim	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:DoesBlockHaveDelim(delim, top, bottom) abort$/;"	f
s:DoesBlockHaveMultipartDelim	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:DoesBlockHaveMultipartDelim(top, bottom) abort$/;"	f
s:DotPromptUser	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:DotPromptUser(groups) "{{{$/;"	f
s:EasyMotion	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:EasyMotion(regexp, direction, visualmode, is_inclusive, ...) " {{{$/;"	f
s:Echo	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! s:Echo(message) abort$/;"	f
s:EchoCommand	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! s:EchoCommand(item) abort$/;"	f
s:EchoCommandHistory	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! s:EchoCommandHistory() abort$/;"	f
s:EchoExecutable	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! s:EchoExecutable(item) abort$/;"	f
s:EchoGlobalVariables	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
s:EchoLSPErrorMessages	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! s:EchoLSPErrorMessages(all_linter_names) abort$/;"	f
s:EchoLinterAliases	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! s:EchoLinterAliases(all_linters) abort$/;"	f
s:EchoLinterVariables	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! s:EchoLinterVariables(variable_list) abort$/;"	f
s:EnablePreamble	pack/vendor/start/ale-master/autoload/ale/toggle.vim	/^function! s:EnablePreamble() abort$/;"	f
s:EncodeChar	pack/vendor/start/ale-master/autoload/ale/uri.vim	/^function! s:EncodeChar(char) abort$/;"	f
s:ErrorMsg	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ErrorMsg(msg)$/;"	f
s:Esc	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:Esc(str) abort$/;"	f
s:EscapeCtagsCmd	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
s:EscapeMenuName	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! s:EscapeMenuName(text) abort$/;"	f
s:EscapeSignText	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! s:EscapeSignText(sign_text) abort$/;"	f
s:Event	pack/vendor/start/nerdtree-master/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:Event.New	pack/vendor/start/nerdtree-master/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
s:ExcludeOther	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludeOther(nr, exclude_preview)$/;"	f
s:ExcludePaths	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludePaths(nr, exclude_paths)$/;"	f
s:ExecuteCtags	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
s:ExecuteCtagsOnFile	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
s:ExecuteFileRename	pack/vendor/start/ale-master/autoload/ale/filerename.vim	/^function! s:ExecuteFileRename(linter, options) abort$/;"	f
s:ExecuteGetCodeFix	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! s:ExecuteGetCodeFix(linter, range, MenuCallback) abort$/;"	f
s:ExecuteRename	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^function! s:ExecuteRename(linter, options) abort$/;"	f
s:ExitCallback	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! s:ExitCallback(buffer, line_list, Callback, data) abort$/;"	f
s:ExpandMap	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:ExpandMap(map)$/;"	f
s:ExtraErrorMsg	pack/vendor/start/ale-master/ale_linters/javascript/flow.vim	/^function! s:ExtraErrorMsg(current, new) abort$/;"	f
s:ExtractOpt	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ExtractOpt(command)$/;"	f
s:FALSE	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:FALSE = 0$/;"	v
s:FilterResult	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! s:FilterResult(buffer, obj) abort$/;"	f
s:FindBoundingLinesOfSexyCom	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:FindBoundingLinesOfSexyCom(lineNum) abort$/;"	f
s:FindConfig	pack/vendor/start/ale-master/ale_linters/pug/puglint.vim	/^function! s:FindConfig(buffer) abort$/;"	f
s:FindDelimiterIndex	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:FindDelimiterIndex(delimiter, line) abort$/;"	f
s:FindError	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! s:FindError(buffer, line, column, end_line, end_column, linter_name) abort$/;"	f
s:FindHistoryItem	pack/vendor/start/ale-master/autoload/ale/history.vim	/^function! s:FindHistoryItem(buffer, job_id) abort$/;"	f
s:FindParentVCSRoot	pack/vendor/start/nerdtree-master/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
s:FindSpan	pack/vendor/start/ale-master/autoload/ale/handlers/rust.vim	/^function! s:FindSpan(buffer, span) abort$/;"	f
s:FixList	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! s:FixList(buffer, list) abort$/;"	f
s:FlagSet	pack/vendor/start/nerdtree-master/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:FlagSet.New	pack/vendor/start/nerdtree-master/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
s:FlagSet._flagsForScope	pack/vendor/start/nerdtree-master/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
s:FlagSet.addFlag	pack/vendor/start/nerdtree-master/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
s:FlagSet.clearFlags	pack/vendor/start/nerdtree-master/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
s:FlagSet.removeFlag	pack/vendor/start/nerdtree-master/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
s:FlagSet.renderToString	pack/vendor/start/nerdtree-master/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
s:FocusGainedHandler	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:FocusGainedHandler(timer)$/;"	f
s:FormatEntry	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! s:FormatEntry(key, entry) abort$/;"	f
s:FormatExe	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! s:FormatExe(command, executable) abort$/;"	f
s:FormatFilename	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! s:FormatFilename(filename, mappings, modifiers) abort$/;"	f
s:GatherOutput	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! s:GatherOutput(line_list, job_id, line) abort$/;"	f
s:GetALEProjectDir	pack/vendor/start/ale-master/ale_linters/vim/ale_custom_linting_rules.vim	/^function! s:GetALEProjectDir(buffer) abort$/;"	f
s:GetAlarm	pack/vendor/start/ale-master/ale_linters/prolog/swipl.vim	/^function! s:GetAlarm(buffer, timeout) abort$/;"	f
s:GetAliasedFiletype	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! s:GetAliasedFiletype(original_filetype) abort$/;"	f
s:GetArguments	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! s:GetArguments(json_item) abort$/;"	f
s:GetCachedExtensionMap	pack/vendor/start/ale-master/autoload/ale/filetypes.vim	/^function! s:GetCachedExtensionMap() abort$/;"	f
s:GetCallbacks	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! s:GetCallbacks(buffer, fixing_flag, fixers) abort$/;"	f
s:GetChar	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:GetChar(...) abort "{{{$/;"	f
s:GetCodeActions	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! s:GetCodeActions(linter, options) abort$/;"	f
s:GetCommand	pack/vendor/start/ale-master/ale_linters/erlang/elvis.vim	/^function! s:GetCommand(buffer) abort$/;"	f
s:GetConfig	pack/vendor/start/ale-master/ale_linters/java/checkstyle.vim	/^function! s:GetConfig(buffer, config) abort$/;"	f
s:GetCounts	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^function! s:GetCounts(buffer) abort$/;"	f
s:GetDUBCommand	pack/vendor/start/ale-master/ale_linters/d/dmd.vim	/^function! s:GetDUBCommand(buffer) abort$/;"	f
s:GetDetails	pack/vendor/start/ale-master/ale_linters/javascript/flow.vim	/^function! s:GetDetails(error) abort$/;"	f
s:GetDir	pack/vendor/start/ale-master/ale_linters/python/vulture.vim	/^function! s:GetDir(buffer) abort$/;"	f
s:GetDocumentationLink	pack/vendor/start/ale-master/ale_linters/ruby/reek.vim	/^function! s:GetDocumentationLink(error) abort$/;"	f
s:GetErrMsg	pack/vendor/start/ale-master/ale_linters/prolog/swipl.vim	/^function! s:GetErrMsg(i, lines, text) abort$/;"	f
s:GetExecutable	pack/vendor/start/ale-master/autoload/ale/handlers/sml.vim	/^function! s:GetExecutable(buffer, source) abort$/;"	f
s:GetFileWinnr	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
s:GetFiletypeValue	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! s:GetFiletypeValue(map, filetype) abort$/;"	f
s:GetFirstProblems	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^function! s:GetFirstProblems(buffer) abort$/;"	f
s:GetHiCmd	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! s:GetHiCmd(list) abort$/;"	f
s:GetJSONLines	pack/vendor/start/ale-master/ale_linters/javascript/flow.vim	/^function! s:GetJSONLines(lines) abort$/;"	f
s:GetLintFileSlots	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:GetLintFileSlots(buffer, linters) abort$/;"	f
s:GetLintFileValues	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:GetLintFileValues(slots, Callback) abort$/;"	f
s:GetLinter	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! s:GetLinter() abort$/;"	f
s:GetLinterNames	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! s:GetLinterNames(original_filetype) abort$/;"	f
s:GetLinterVariables	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^function! s:GetLinterVariables(filetype, exclude_linter_names) abort$/;"	f
s:GetLookupFromCompileCommandsFile	pack/vendor/start/ale-master/autoload/ale/c.vim	/^function! s:GetLookupFromCompileCommandsFile(compile_commands_file) abort$/;"	f
s:GetNearbyTag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:GetNearbyTag(request, forcecurrent, ...) abort$/;"	f
s:GetPopupOpts	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^function! s:GetPopupOpts() abort$/;"	f
s:GetSexyComLeft	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:GetSexyComLeft(space, esc) abort$/;"	f
s:GetSexyComMarker	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:GetSexyComMarker(space, esc) abort$/;"	f
s:GetSexyComRight	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:GetSexyComRight(space, esc) abort$/;"	f
s:GetSupportedFiletypes	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
s:GetTagInfo	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
s:GetVersion	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
s:GetVersion	pack/vendor/start/ale-master/autoload/ale/semver.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
s:GetVisualStartPosition	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:GetVisualStartPosition(c_pos, v_start, v_end, search_direction) "{{{$/;"	f
s:Go	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let s:Go = ""$/;"	v
s:Go	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^  let s:Go = "\\<C-G>U"$/;"	v
s:GoToLSPDefinition	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! s:GoToLSPDefinition(linter, options, capability) abort$/;"	f
s:GotoFileWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
s:GotoNextFold	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
s:GotoNextToplevelTag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
s:GotoPrevFold	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
s:GroupCmd	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! s:GroupCmd() abort$/;"	f
s:GroupLoclistItems	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! s:GroupLoclistItems(buffer, loclist) abort$/;"	f
s:GroupingAlgorithmOriginal	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmOriginal(targets, keys)$/;"	f
s:GroupingAlgorithmSCTree	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmSCTree(targets, keys) "{{{$/;"	f
s:HandleBufDelete	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:HandleBufDelete(bufname, bufnr) abort$/;"	f
s:HandleBufWrite	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:HandleBufWrite(fname) abort$/;"	f
s:HandleESLintOutput	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! s:HandleESLintOutput(buffer, lines, type) abort$/;"	f
s:HandleExit	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:HandleExit(job_info, buffer, output, data) abort$/;"	f
s:HandleExit	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! s:HandleExit(job_info, buffer, job_output, data) abort$/;"	f
s:HandleLSPDiagnostics	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPDiagnostics(conn_id, response) abort$/;"	f
s:HandleLSPErrorMessage	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPErrorMessage(linter_name, response) abort$/;"	f
s:HandleLSPResponseToCustomRequests	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPResponseToCustomRequests(conn_id, response) abort$/;"	f
s:HandleOnlyWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:HandleOnlyWindow() abort$/;"	f
s:HandleSyntaxError	pack/vendor/start/ale-master/autoload/ale/handlers/ruby.vim	/^function! s:HandleSyntaxError(buffer, lines) abort$/;"	f
s:HandleTSServerDiagnostics	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:HandleTSServerDiagnostics(response, error_type) abort$/;"	f
s:HandleUnixFormat	pack/vendor/start/ale-master/autoload/ale/handlers/unix.vim	/^function! s:HandleUnixFormat(buffer, lines, type) abort$/;"	f
s:HasCStyleComments	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:HasCStyleComments() abort$/;"	f
s:HasLeadingTabs	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:HasLeadingTabs(...) abort$/;"	f
s:HasMultipartDelims	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:HasMultipartDelims() abort$/;"	f
s:HasOpenFileWindows	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:HasOpenFileWindows() abort$/;"	f
s:HighlightTag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
s:Hinter	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:Hinter = {$/;"	v
s:Hinter._pos2hint_to_line2col2hint	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
s:Hinter._replace_line_for_hint	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_line_for_hint(col_num, line, hint) abort$/;"	f
s:Hinter._replace_tab_target	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_tab_target(col_num, line) abort$/;"	f
s:Hinter._replace_text_to_space	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_text_to_space(line, col_num, len) abort$/;"	f
s:Hinter._save_lines	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._save_lines() abort$/;"	f
s:Hinter._show_hint_for_line	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_line(winnr, lnum, col2hint) abort$/;"	f
s:Hinter._show_hint_for_win	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_win(winnr) abort$/;"	f
s:Hinter.after	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.after() abort$/;"	f
s:Hinter.before	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.before() abort$/;"	f
s:Hinter.disable_conceal_in_other_win	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.disable_conceal_in_other_win() abort$/;"	f
s:Hinter.init	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.init(hint_dict) abort$/;"	f
s:Hinter.modify_env_for_win	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.modify_env_for_win(winnr) abort$/;"	f
s:Hinter.new	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.new(hint_dict, config) abort$/;"	f
s:Hinter.remove_hints	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.remove_hints(winnr) abort$/;"	f
s:Hinter.restore_conceal_in_other_win	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_conceal_in_other_win() abort$/;"	f
s:Hinter.restore_env	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_env() abort$/;"	f
s:Hinter.restore_lines_for_win	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_lines_for_win(winnr) abort$/;"	f
s:Hinter.restore_options	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_options() abort$/;"	f
s:Hinter.save_options	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.save_options() abort$/;"	f
s:Hinter.show_hint	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint() abort$/;"	f
s:Hinter.show_hint_pos	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint_pos(lnum, cnum, char, winnr) abort$/;"	f
s:HitAHintMotion	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/overwin.vim	/^let s:HitAHintMotion = s:V.import('HitAHint.Motion')$/;"	v
s:INTERNAL_ERROR	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:INTERNAL_ERROR = -32603$/;"	v
s:INVALID_PARAMS	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:INVALID_PARAMS = -32602$/;"	v
s:INVALID_REQUEST	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:INVALID_REQUEST = -32600$/;"	v
s:Ignore	pack/vendor/start/ale-master/ale_linters/prolog/swipl.vim	/^function! s:Ignore(item) abort$/;"	f
s:IgnoreFixers	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! s:IgnoreFixers(callback_list, filetype, config) abort$/;"	f
s:Init	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
s:InitCwds	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:InitCwds()$/;"	f
s:InitTypes	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
s:InitVariable	pack/vendor/start/nerdcommenter-master/plugin/nerdcommenter.vim	/^function s:InitVariable(var, value)$/;"	f
s:InitWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
s:InvertComment	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:InvertComment(firstLine, lastLine) abort$/;"	f
s:IsBoolean	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! s:IsBoolean(value) abort$/;"	f
s:IsCallback	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^function! s:IsCallback(value) abort$/;"	f
s:IsCommented	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:IsCommented(left, right, line) abort$/;"	f
s:IsCommentedFromStartOfLine	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:IsCommentedFromStartOfLine(left, line) abort$/;"	f
s:IsCommentedNormOrSexy	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:IsCommentedNormOrSexy(lineNum) abort$/;"	f
s:IsCommentedOutermost	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:IsCommentedOutermost(left, right, leftAlt, rightAlt, line) abort$/;"	f
s:IsDelimValid	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:IsDelimValid(delimiter, delIndx, line) abort$/;"	f
s:IsEscaped	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:IsEscaped(str, indx, escChar) abort$/;"	f
s:IsGenericFixer	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! s:IsGenericFixer(suggested_filetypes) abort$/;"	f
s:IsHeaderFile	pack/vendor/start/ale-master/autoload/ale/handlers/gcc.vim	/^function! s:IsHeaderFile(filename) abort$/;"	f
s:IsInSexyComment	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:IsInSexyComment(line) abort$/;"	f
s:IsLineVisible	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:IsLineVisible(line) abort$/;"	f
s:IsNumEven	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:IsNumEven(num) abort$/;"	f
s:IsSbt	pack/vendor/start/ale-master/ale_linters/scala/fsc.vim	/^function! s:IsSbt(buffer) abort$/;"	f
s:IsSbt	pack/vendor/start/ale-master/ale_linters/scala/scalac.vim	/^function! s:IsSbt(buffer) abort$/;"	f
s:IsSexyComment	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:IsSexyComment(topline, bottomline) abort$/;"	f
s:IsValidFile	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
s:JumpToNearbyTag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:JumpToNearbyTag(direction, request, flags) abort$/;"	f
s:JumpToTag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar, ...) abort$/;"	f
s:KeyMap	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KeyMap.Add	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
s:KeyMap.All	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
s:KeyMap.BindAll	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
s:KeyMap.Compare	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
s:KeyMap.Create	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
s:KeyMap.FindFor	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
s:KeyMap.Invoke	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
s:KeyMap.Remove	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
s:KeyMap.bind	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
s:KeyMap.invoke	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
s:KillHandler	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! s:KillHandler(timer) abort$/;"	f
s:LSP_INSERT_TEXT_FORMAT_PLAIN	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_PLAIN = 1$/;"	v
s:LSP_INSERT_TEXT_FORMAT_SNIPPET	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_SNIPPET = 2$/;"	v
s:LSP_MESSAGE_TYPE_DISABLED	pack/vendor/start/ale-master/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_DISABLED = 0$/;"	v
s:LSP_MESSAGE_TYPE_ERROR	pack/vendor/start/ale-master/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_ERROR = 1$/;"	v
s:LSP_MESSAGE_TYPE_INFORMATION	pack/vendor/start/ale-master/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_INFORMATION = 3$/;"	v
s:LSP_MESSAGE_TYPE_LOG	pack/vendor/start/ale-master/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_LOG = 4$/;"	v
s:LSP_MESSAGE_TYPE_WARNING	pack/vendor/start/ale-master/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_WARNING = 2$/;"	v
s:LastIndexOfDelim	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:LastIndexOfDelim(delim, str) abort$/;"	f
s:Left	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^let s:Left = s:Go."\\<LEFT>"$/;"	v
s:Left	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:Left(...) abort$/;"	f
s:LeftMostIndx	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline) abort$/;"	f
s:Lint	pack/vendor/start/ale-master/autoload/ale.vim	/^function! s:Lint(buffer, should_lint_file, timer_id) abort$/;"	f
s:LoadArgCount	pack/vendor/start/ale-master/autoload/ale/util.vim	/^function! s:LoadArgCount(function) abort$/;"	f
s:LoadUserTypeDefs	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
s:MAX_COL_SIZE	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^let s:MAX_COL_SIZE = 1073741824 " pow(2, 30)$/;"	v
s:MAX_POS_VALUES	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^let s:MAX_POS_VALUES = 8$/;"	v
s:METHOD_NOT_FOUND	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:METHOD_NOT_FOUND = -32601$/;"	v
s:MapKeys	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
s:MenuController	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuController.New	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
s:MenuController._allIndexesFor	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
s:MenuController._current	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
s:MenuController._cursorDown	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
s:MenuController._cursorUp	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
s:MenuController._echoPrompt	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
s:MenuController._handleKeypress	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
s:MenuController._nextIndexFor	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
s:MenuController._restoreOptions	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
s:MenuController._saveOptions	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
s:MenuController._setCmdheight	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
s:MenuController.isMinimal	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
s:MenuController.showMenu	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
s:MenuItem	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:MenuItem.All	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
s:MenuItem.AllEnabled	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
s:MenuItem.Create	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
s:MenuItem.CreateSeparator	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
s:MenuItem.CreateSubmenu	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
s:MenuItem.enabled	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
s:MenuItem.execute	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
s:MenuItem.isSeparator	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
s:MenuItem.isSubmenu	pack/vendor/start/nerdtree-master/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
s:Message	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:Message(message) " {{{$/;"	f
s:MinimizeMaxFoldLevel	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:MinimizeMaxFoldLevel(fileinfo, tags) abort$/;"	f
s:Multipart	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:Multipart() abort$/;"	f
s:NERDFileNameEscape	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTree	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTree.AddPathFilter	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
s:NERDTree.Close	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
s:NERDTree.CursorToBookmarkTable	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
s:NERDTree.CursorToTreeWin	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin(...)$/;"	f
s:NERDTree.ExistsForBuf	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
s:NERDTree.ExistsForTab	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
s:NERDTree.ForCurrentBuf	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
s:NERDTree.ForCurrentTab	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
s:NERDTree.GetWinNum	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
s:NERDTree.IsOpen	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
s:NERDTree.MustBeOpen	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
s:NERDTree.New	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
s:NERDTree.PathFilters	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
s:NERDTree.changeRoot	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
s:NERDTree.getRoot	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
s:NERDTree.isTabTree	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
s:NERDTree.isWinTree	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
s:NERDTree.previousBuf	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
s:NERDTree.render	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
s:NERDTree.setPreviousBuf	pack/vendor/start/nerdtree-master/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
s:NeoVimCallback	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! s:NeoVimCallback(job, data, event) abort$/;"	f
s:NeoVimOutputCallback	pack/vendor/start/ale-master/autoload/ale/socket.vim	/^function! s:NeoVimOutputCallback(channel_id, data, event) abort$/;"	f
s:NerdEcho	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:NerdEcho(msg, typeOfMsg) abort$/;"	f
s:Nested	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:Nested() abort$/;"	f
s:NotEnoughBuffers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:NotEnoughBuffers()$/;"	f
s:NotSupport	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:NotSupport()$/;"	f
s:Notifier	pack/vendor/start/nerdtree-master/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Notifier.AddListener	pack/vendor/start/nerdtree-master/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
s:Notifier.GetListenersForEvent	pack/vendor/start/nerdtree-master/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
s:Notifier.GetListenersMap	pack/vendor/start/nerdtree-master/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
s:Notifier.NotifyListeners	pack/vendor/start/nerdtree-master/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
s:NumLinesInBuf	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:NumLinesInBuf() abort$/;"	f
s:NumberOfLeadingTabs	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:NumberOfLeadingTabs(s) abort$/;"	f
s:NvimClose	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^function! s:NvimClose() abort$/;"	f
s:NvimCreate	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^function! s:NvimCreate(options) abort$/;"	f
s:NvimPrepareWindowContent	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^function! s:NvimPrepareWindowContent(lines) abort$/;"	f
s:NvimShow	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^function! s:NvimShow(lines, options) abort$/;"	f
s:OnReady	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! s:OnReady($/;"	f
s:OnReady	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! s:OnReady(linter, lsp_details) abort$/;"	f
s:OnReady	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^function! s:OnReady(line, column, options, capability, linter, lsp_details) abort$/;"	f
s:OnReady	pack/vendor/start/ale-master/autoload/ale/filerename.vim	/^function! s:OnReady(options, linter, lsp_details) abort$/;"	f
s:OnReady	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^function! s:OnReady(line, column, opt, linter, lsp_details) abort$/;"	f
s:OnReady	pack/vendor/start/ale-master/autoload/ale/organize_imports.vim	/^function! s:OnReady(linter, lsp_details) abort$/;"	f
s:OnReady	pack/vendor/start/ale-master/autoload/ale/references.vim	/^function! s:OnReady(line, column, options, linter, lsp_details) abort$/;"	f
s:OnReady	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^function! s:OnReady(line, column, options, linter, lsp_details) abort$/;"	f
s:OnReady	pack/vendor/start/ale-master/autoload/ale/symbol.vim	/^function! s:OnReady(query, options, linter, lsp_details) abort$/;"	f
s:OnReadyForCustomRequests	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:OnReadyForCustomRequests(args, linter, lsp_details) abort$/;"	f
s:Open	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^function! s:Open(open_in) abort$/;"	f
s:OpenCompletionMenu	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! s:OpenCompletionMenu(...) abort$/;"	f
s:OpenFold	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
s:OpenJDTLink	pack/vendor/start/ale-master/autoload/ale/uri/jdt.vim	/^function! s:OpenJDTLink(root, uri, line, column, options, result) abort$/;"	f
s:OpenParents	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
s:OpenWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
s:Opener	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Opener.New	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
s:Opener._bufInWindows	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
s:Opener._checkToCloseTree	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
s:Opener._firstUsableWindow	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
s:Opener._gotoTargetWin	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
s:Opener._isWindowUsable	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
s:Opener._newSplit	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
s:Opener._newVSplit	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
s:Opener._openDirectory	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
s:Opener._openFile	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
s:Opener._previousWindow	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
s:Opener._restoreCursorPos	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
s:Opener._reuseWindow	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
s:Opener._saveCursorPos	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
s:Opener.open	pack/vendor/start/nerdtree-master/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
s:OrganizeImports	pack/vendor/start/ale-master/autoload/ale/organize_imports.vim	/^function! s:OrganizeImports(linter) abort$/;"	f
s:PARSE_ERROR	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:PARSE_ERROR = -32700$/;"	v
s:PanicOutput	pack/vendor/start/ale-master/autoload/ale/handlers/haskell.vim	/^function! s:PanicOutput(lines) abort$/;"	f
s:ParseInlinedFunctionProblems	pack/vendor/start/ale-master/autoload/ale/handlers/gcc.vim	/^function! s:ParseInlinedFunctionProblems(buffer, lines) abort$/;"	f
s:ParseProblemsInHeaders	pack/vendor/start/ale-master/autoload/ale/handlers/gcc.vim	/^function! s:ParseProblemsInHeaders(buffer, lines) abort$/;"	f
s:ParseTagline	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
s:Path	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Path.AbsolutePathFor	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
s:Path.CopyingSupported	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
s:Path.Create	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
s:Path.JoinPathStrings	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
s:Path.New	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
s:Path.Resolve	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
s:Path.WinToUnixPath	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
s:Path._escChars	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
s:Path._ignorePatternMatches	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
s:Path._splitChunks	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
s:Path._str	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
s:Path._strForCd	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
s:Path._strForEdit	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
s:Path._strForGlob	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
s:Path._strForUI	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
s:Path.addDelimiter	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
s:Path.bookmarkNames	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
s:Path.cacheDisplayString	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
s:Path.changeToDir	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
s:Path.copy	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
s:Path.copyingWillOverwrite	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
s:Path.createParentDirectories	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
s:Path.delete	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
s:Path.displayString	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
s:Path.edit	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
s:Path.equals	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
s:Path.exists	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
s:Path.extractDriveLetter	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
s:Path.getDir	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
s:Path.getLastPathComponent	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
s:Path.getParent	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
s:Path.getSortKey	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
s:Path.getSortOrderIndex	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
s:Path.ignore	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
s:Path.isAncestor	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(child)$/;"	f
s:Path.isHiddenUnder	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
s:Path.isUnder	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.isUnder(parent)$/;"	f
s:Path.isUnixHiddenFile	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
s:Path.isUnixHiddenPath	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
s:Path.readInfoFromDisk	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
s:Path.refresh	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
s:Path.refreshFlags	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
s:Path.rename	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
s:Path.str	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
s:Path.strTrunk	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
s:Path.tabnr	pack/vendor/start/nerdtree-master/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
s:PlaceDelimitersAndInsBetween	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:PlaceDelimitersAndInsBetween() abort$/;"	f
s:PrepareWrappedCommand	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! s:PrepareWrappedCommand(original_wrapper, command) abort$/;"	f
s:PrintHelp	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
s:PrintKinds	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
s:PrintTag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, output, fileinfo, typeinfo) abort$/;"	f
s:PriorityCmd	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! s:PriorityCmd() abort$/;"	f
s:ProcessDeferredCommands	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! s:ProcessDeferredCommands(initial_result) abort$/;"	f
s:ProcessDeferredCwds	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^function! s:ProcessDeferredCwds(initial_command, initial_cwd) abort$/;"	f
s:ProcessFile	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
s:ProcessTag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ProcessTag(name, filename, pattern, fields, is_split, typeinfo, fileinfo) abort$/;"	f
s:Prompt	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:Prompt(message) " {{{$/;"	f
s:PromptUser	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:PromptUser(groups) "{{{$/;"	f
s:REQUEST_CANCELLED	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:REQUEST_CANCELLED = -32800$/;"	v
s:ReadClassFileContents	pack/vendor/start/ale-master/autoload/ale/uri/jdt.vim	/^function! s:ReadClassFileContents(uri, result) abort$/;"	f
s:RecoverStateAfterLineComment	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:RecoverStateAfterLineComment(state) abort$/;"	f
s:RefreshTabline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:RefreshTabline()$/;"	f
s:RemapItemTypes	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:RemapItemTypes(type_map, loclist) abort$/;"	f
s:RemoveDelimiters	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:RemoveDelimiters(left, right, line) abort$/;"	f
s:RemoveProblemsForDisabledLinters	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:RemoveProblemsForDisabledLinters(buffer, linters) abort$/;"	f
s:RemoveUnicodeQuotes	pack/vendor/start/ale-master/autoload/ale/handlers/flawfinder.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:RemoveUnicodeQuotes	pack/vendor/start/ale-master/autoload/ale/handlers/gcc.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:RemoveUnicodeQuotes	pack/vendor/start/ale-master/autoload/ale/handlers/pony.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:RenderContent	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
s:RenderKeepView	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
s:ReopenWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ReopenWindow(delbufname) abort$/;"	f
s:ReplaceCompletionOptions	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! s:ReplaceCompletionOptions(source) abort$/;"	f
s:ReplaceDelims	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str) abort$/;"	f
s:ReplaceLeftMostDelim	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:ReplaceLeftMostDelim(toReplace, replacor, str) abort$/;"	f
s:ReplaceRightMostDelim	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:ReplaceRightMostDelim(toReplace, replacor, str) abort$/;"	f
s:RestoreSession	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
s:RestoreValue	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:RestoreValue() "{{{$/;"	f
s:RestoreViewIfNeeded	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! s:RestoreViewIfNeeded(buffer) abort$/;"	f
s:Right	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^let s:Right = s:Go."\\<RIGHT>"$/;"	v
s:Right	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:Right(...) abort$/;"	f
s:RightMostIndx	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline) abort$/;"	f
s:RunFixer	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! s:RunFixer(options) abort$/;"	f
s:RunIfExecutable	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:RunIfExecutable(buffer, linter, lint_file, executable) abort$/;"	f
s:RunJob	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:RunJob(command, options) abort$/;"	f
s:RunJob	pack/vendor/start/ale-master/autoload/ale/fix.vim	/^function! s:RunJob(result, options) abort$/;"	f
s:RunLinter	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:RunLinter(buffer, linter, lint_file) abort$/;"	f
s:RunLinters	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:RunLinters($/;"	f
s:SERVER_ERROR_END	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_END = -32000$/;"	v
s:SERVER_ERROR_START	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_START = -32099$/;"	v
s:SERVER_NOT_INITIALIZED	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:SERVER_NOT_INITIALIZED = -32002$/;"	v
s:SEVERITY_ERROR	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:SEVERITY_ERROR = 1$/;"	v
s:SEVERITY_HINT	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:SEVERITY_HINT = 4$/;"	v
s:SEVERITY_INFORMATION	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:SEVERITY_INFORMATION = 3$/;"	v
s:SEVERITY_WARNING	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:SEVERITY_WARNING = 2$/;"	v
s:SID	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:SID() abort$/;"	f
s:SNR	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SaveValue	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:SaveValue() "{{{$/;"	f
s:ScriptWrite	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:ScriptWrite(command, pause)$/;"	f
s:SearchDict	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict() "{{{$/;"	f
s:SearchDict2	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict2(name) "{{{$/;"	f
s:SendInitMessage	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! s:SendInitMessage(conn) abort$/;"	f
s:SendMessageData	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! s:SendMessageData(conn, data) abort$/;"	f
s:SetDefault	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimtex.vim	/^function! s:SetDefault(var, val)$/;"	f
s:SetFoldLevel	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
s:SetFoldLevelRecursive	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
s:SetLines	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:SetLines(lines, key) " {{{$/;"	f
s:SetListsImpl	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! s:SetListsImpl(timer_id, buffer, loclist) abort$/;"	f
s:SetOption	colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
s:SetStatusLine	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:SetStatusLine() abort$/;"	f
s:Setup	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! s:Setup(enabled) abort$/;"	f
s:Setup	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! s:Setup(enabled) abort$/;"	f
s:SetupStateBeforeLineComment	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:SetupStateBeforeLineComment(topLine, bottomLine) abort$/;"	f
s:SexyNested	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:SexyNested() abort$/;"	f
s:ShouldClose	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! s:ShouldClose(buffer) abort$/;"	f
s:ShouldIgnore	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:ShouldIgnore(buffer, linter_name) abort$/;"	f
s:ShouldOpen	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! s:ShouldOpen(buffer, loclist_len) abort$/;"	f
s:ShouldSuggestForType	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^function! s:ShouldSuggestForType(suggested_filetypes, type_list) abort$/;"	f
s:ShowCursorDetailForItem	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^function! s:ShowCursorDetailForItem(loc, options) abort$/;"	f
s:ShowInPreviewWin	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
s:ShowPrototype	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
s:ShrinkIfExpanded	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
s:SolarizedHiTrail	colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
s:SolarizedOptions	colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
s:StartIfExecutable	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:StartIfExecutable(options, executable) abort$/;"	f
s:StartLSP	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:StartLSP(options, address, executable, command) abort$/;"	f
s:StartWithAddress	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:StartWithAddress(options, address) abort$/;"	f
s:StartWithCommand	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^function! s:StartWithCommand(options, executable, command) abort$/;"	f
s:State	pack/vendor/start/tagbar-master/autoload/tagbar/state.vim	/^let s:State = {$/;"	v
s:State.New	pack/vendor/start/tagbar-master/autoload/tagbar/state.vim	/^function! s:State.New() abort dict$/;"	f
s:State.getCurrent	pack/vendor/start/tagbar-master/autoload/tagbar/state.vim	/^function! s:State.getCurrent(force_current) abort dict$/;"	f
s:State.setCurrentFile	pack/vendor/start/tagbar-master/autoload/tagbar/state.vim	/^function! s:State.setCurrentFile(fileinfo) abort dict$/;"	f
s:State.setPaused	pack/vendor/start/tagbar-master/autoload/tagbar/state.vim	/^function! s:State.setPaused() abort dict$/;"	f
s:StopCurrentJobs	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^function! s:StopCurrentJobs(buffer, clear_lint_file_jobs, linter_slots) abort$/;"	f
s:StopCursorTimer	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
s:StopCursorTimer	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^function! s:StopCursorTimer() abort$/;"	f
s:StringReplace	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:StringReplace(text, old, new)$/;"	f
s:StringStrip	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:StringStrip(text)$/;"	f
s:Subst	pack/vendor/start/ale-master/ale_linters/prolog/swipl.vim	/^function! s:Subst(format, vars) abort$/;"	f
s:SwapOuterMultiPartDelimsForPlaceHolders	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:SwapOuterMultiPartDelimsForPlaceHolders(line) abort$/;"	f
s:SwapOuterPlaceHoldersForMultiPartDelims	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:SwapOuterPlaceHoldersForMultiPartDelims(line) abort$/;"	f
s:TRUE	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:TRUE = !0$/;"	v
s:TabBuffers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:TabBuffers()$/;"	f
s:TabSpace	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:TabSpace() abort$/;"	f
s:TagbarBufName	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:TagbarBufName() abort$/;"	f
s:TemporaryFilename	pack/vendor/start/ale-master/autoload/ale/command.vim	/^function! s:TemporaryFilename(buffer) abort$/;"	f
s:TemporaryPSScript	pack/vendor/start/ale-master/autoload/ale/powershell.vim	/^function! s:TemporaryPSScript(buffer, input) abort$/;"	f
s:Throw	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:Throw(message) "{{{$/;"	f
s:TimerHandler	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! s:TimerHandler(...) abort$/;"	f
s:ToggleAutoclose	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
s:ToggleCaseInsensitive	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ToggleCaseInsensitive() abort$/;"	f
s:ToggleFold	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
s:ToggleHelp	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
s:ToggleHideNonPublicTags	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
s:TogglePause	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:TogglePause() abort$/;"	f
s:ToggleSort	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
s:ToggleTabTreeVCS	pack/vendor/start/nerdtree-master/nerdtree_plugin/vcs.vim	/^function! s:ToggleTabTreeVCS(name)$/;"	f
s:ToggleWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ToggleWindow(flags) abort$/;"	f
s:TransformUserTypeDef	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
s:TreeDirNode	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeDirNode.AbsoluteTreeRoot	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
s:TreeDirNode.GetSelected	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
s:TreeDirNode.New	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
s:TreeDirNode._glob	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
s:TreeDirNode._initChildren	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
s:TreeDirNode._openInNewTab	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
s:TreeDirNode.activate	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
s:TreeDirNode.addChild	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
s:TreeDirNode.close	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
s:TreeDirNode.closeChildren	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
s:TreeDirNode.createChild	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
s:TreeDirNode.displayString	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
s:TreeDirNode.findNode	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
s:TreeDirNode.getCascade	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
s:TreeDirNode.getCascadeRoot	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
s:TreeDirNode.getChild	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
s:TreeDirNode.getChildByIndex	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
s:TreeDirNode.getChildCount	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
s:TreeDirNode.getChildIndex	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
s:TreeDirNode.getDirChildren	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
s:TreeDirNode.getVisibleChildCount	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
s:TreeDirNode.getVisibleChildren	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
s:TreeDirNode.hasVisibleChildren	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
s:TreeDirNode.isCascadable	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
s:TreeDirNode.open	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
s:TreeDirNode.openAlong	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
s:TreeDirNode.openExplorer	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
s:TreeDirNode.openInNewTab	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
s:TreeDirNode.openRecursively	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
s:TreeDirNode.refresh	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
s:TreeDirNode.refreshDirFlags	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
s:TreeDirNode.refreshFlags	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
s:TreeDirNode.removeChild	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
s:TreeDirNode.reveal	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
s:TreeDirNode.sortChildren	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
s:TreeDirNode.toggleOpen	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
s:TreeDirNode.transplantChild	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
s:TreeFileNode	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TreeFileNode.GetRootForTab	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
s:TreeFileNode.GetSelected	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
s:TreeFileNode.New	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
s:TreeFileNode._renderToString	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
s:TreeFileNode.activate	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
s:TreeFileNode.bookmark	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
s:TreeFileNode.cacheParent	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
s:TreeFileNode.clearBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
s:TreeFileNode.copy	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
s:TreeFileNode.delete	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
s:TreeFileNode.displayString	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
s:TreeFileNode.equals	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
s:TreeFileNode.findNode	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
s:TreeFileNode.findSibling	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
s:TreeFileNode.getNerdtree	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
s:TreeFileNode.isRoot	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
s:TreeFileNode.isVisible	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
s:TreeFileNode.open	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
s:TreeFileNode.openExplorer	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
s:TreeFileNode.openInNewTab	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
s:TreeFileNode.openSplit	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
s:TreeFileNode.openVSplit	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
s:TreeFileNode.putCursorHere	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
s:TreeFileNode.refresh	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
s:TreeFileNode.refreshFlags	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
s:TreeFileNode.rename	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
s:TreeFileNode.renderToString	pack/vendor/start/nerdtree-master/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
s:Trim	pack/vendor/start/ale-master/ale_linters/prolog/swipl.vim	/^function! s:Trim(str) abort$/;"	f
s:TrimTrailingWhitespace	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:TrimTrailingWhitespace(line) abort$/;"	f
s:UI	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UI.IndentWid	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
s:UI.MarkupReg	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
s:UI.New	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
s:UI.UpDirLine	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
s:UI._dumpHelp	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
s:UI._indentLevelFor	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
s:UI._renderBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
s:UI._stripMarkup	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
s:UI.centerView	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
s:UI.getLineNum	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
s:UI.getPath	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
s:UI.getRootLineNum	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
s:UI.getShowBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
s:UI.getShowFiles	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
s:UI.getShowHelp	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
s:UI.getShowHidden	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
s:UI.isIgnoreFilterEnabled	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
s:UI.isMinimal	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
s:UI.render	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
s:UI.renderViewSavingPosition	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
s:UI.restoreScreenState	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
s:UI.saveScreenState	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
s:UI.setShowHidden	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
s:UI.toggleHelp	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
s:UI.toggleIgnoreFilter	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
s:UI.toggleShowBookmarks	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
s:UI.toggleShowFiles	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
s:UI.toggleShowHidden	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
s:UI.toggleZoom	pack/vendor/start/nerdtree-master/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
s:UNKNOWN_ERROR_CODE	pack/vendor/start/ale-master/autoload/ale/lsp/response.vim	/^let s:UNKNOWN_ERROR_CODE = -32001$/;"	v
s:UnEsc	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:UnEsc(str, escChar) abort$/;"	f
s:UncommentLineNormal	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:UncommentLineNormal(line) abort$/;"	f
s:UncommentLines	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:UncommentLines(topLine, bottomLine) abort$/;"	f
s:UncommentLinesNormal	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:UncommentLinesNormal(topline, bottomline) abort$/;"	f
s:UncommentLinesSexy	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^function! s:UncommentLinesSexy(topline, bottomline) abort$/;"	f
s:UpdateCacheIfNecessary	pack/vendor/start/ale-master/autoload/ale/statusline.vim	/^function! s:UpdateCacheIfNecessary(buffer) abort$/;"	f
s:UpdateCapabilities	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^function! s:UpdateCapabilities(conn, capabilities) abort$/;"	f
s:UpdateCursor	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! s:UpdateCursor(cursor, start, end, offset) abort$/;"	f
s:UpdateLineNumbers	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^function! s:UpdateLineNumbers(buffer, current_sign_list, loclist) abort$/;"	f
s:UpdateMenu	pack/vendor/start/ale-master/autoload/ale/code_action.vim	/^function! s:UpdateMenu(data, menu_items) abort$/;"	f
s:UsingModule	pack/vendor/start/ale-master/ale_linters/python/flake8.vim	/^function! s:UsingModule(buffer) abort$/;"	f
s:UsingModule	pack/vendor/start/ale-master/ale_linters/python/flakehell.vim	/^function! s:UsingModule(buffer) abort$/;"	f
s:V	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^let s:V = vital#easymotion#new()$/;"	v
s:V	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/overwin.vim	/^let s:V = vital#easymotion#new()$/;"	v
s:VimClose	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^function! s:VimClose() abort$/;"	f
s:VimCloseCallback	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! s:VimCloseCallback(channel) abort$/;"	f
s:VimCreate	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^function! s:VimCreate(options) abort$/;"	f
s:VimErrorCallback	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! s:VimErrorCallback(channel, data) abort$/;"	f
s:VimExitCallback	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! s:VimExitCallback(job, exit_code) abort$/;"	f
s:VimOutputCallback	pack/vendor/start/ale-master/autoload/ale/job.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
s:VimOutputCallback	pack/vendor/start/ale-master/autoload/ale/socket.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
s:VimShow	pack/vendor/start/ale-master/autoload/ale/floating_preview.vim	/^function! s:VimShow(lines, options) abort$/;"	f
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:Vital = {}$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:WinFindBuf	pack/vendor/start/ale-master/autoload/ale/list.vim	/^function! s:WinFindBuf(buffer) abort$/;"	f
s:WindowCheck	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	function! s:WindowCheck(mode)$/;"	f
s:ZoomWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Exception.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Input.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Capture.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Message.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^  function! s:_SID() abort$/;"	f
s:_UNDEFINED	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:_UNDEFINED = function('s:_undefined')$/;"	v
s:__ale_julia_project_filenames	pack/vendor/start/ale-master/autoload/ale/julia.vim	/^let s:__ale_julia_project_filenames = ['REQUIRE', 'Manifest.toml', 'Project.toml']$/;"	v
s:_as_echon	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_as_echon(str)$/;"	f
s:_as_statusline	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
s:_assert	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_assert(...) abort$/;"	f
s:_auto_cmap	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_auto_cmap()$/;"	f
s:_base_set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set = {$/;"	v
s:_base_set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.and = s:_base_set.intersection$/;"	v
s:_base_set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.ge = s:_base_set.issuperset$/;"	v
s:_base_set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.le = s:_base_set.issubset$/;"	v
s:_base_set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.or = s:_base_set.union$/;"	v
s:_base_set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.sub = s:_base_set.difference$/;"	v
s:_base_set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.xor = s:_base_set.symmetric_difference$/;"	v
s:_base_set._add	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._add(x) abort$/;"	f
s:_base_set._clear	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._clear() abort$/;"	f
s:_base_set._hash	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._hash(x) abort$/;"	f
s:_base_set._new	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._new(...) abort$/;"	f
s:_base_set._set_data	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._set_data(xs) abort$/;"	f
s:_base_set._to_set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._to_set(x) abort$/;"	f
s:_base_set._update	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._update(xs) abort$/;"	f
s:_base_set.difference	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.difference(t) abort$/;"	f
s:_base_set.gt	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.gt(t) abort$/;"	f
s:_base_set.in	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.in(x) abort$/;"	f
s:_base_set.intersection	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.intersection(t) abort$/;"	f
s:_base_set.issubset	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issubset(t) abort$/;"	f
s:_base_set.issuperset	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issuperset(t) abort$/;"	f
s:_base_set.len	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.len() abort$/;"	f
s:_base_set.lt	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.lt(t) abort$/;"	f
s:_base_set.symmetric_difference	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.symmetric_difference(t) abort$/;"	f
s:_base_set.to_list	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.to_list() abort$/;"	f
s:_base_set.union	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.union(t) abort$/;"	f
s:_buffer_complete	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
s:_capture	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_capture(mode)$/;"	f
s:_clamp	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:_clamp(x, max, min)$/;"	f
s:_compare	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_convert_sid	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_convert_sid(rhs, sid) abort$/;"	f
s:_create_win2pos2hint	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_create_win2pos2hint(dict, hint_dict, ...) abort$/;"	f
s:_default_compare	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_dot_to_sharp	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_echon	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_echon(expr)$/;"	f
s:_engine	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^let s:_engine = exists("+regexpengine") ? '\\%#=2' : ''$/;"	v
s:_execute	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_execute(cmd)$/;"	f
s:_exists_autoload_func_with_source	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
s:_extract_files	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_file2module	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_file2module(file) abort$/;"	f
s:_finish	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_finish()$/;"	f
s:_foldl	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:_foldl(f, init, xs) abort$/;"	f
s:_function	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_function = function('function')$/;"	v
s:_function	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_getPrefix	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:_getPrefix() abort dict$/;"	f
s:_get_builtin_module	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_key	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_get_key(conf)$/;"	f
s:_get_module	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_global_vital_files	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_handleOldOptions	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_hash_func	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_hash_func(x) abort$/;"	f
s:_import	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import_func_name	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_init_hl	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_init_hl() abort$/;"	f
s:_is_set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_is_set(x) abort$/;"	f
s:_is_valid_highlight	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_is_valid_highlight(name)$/;"	f
s:_keymapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_keymapping(str)$/;"	f
s:_keys_count	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_keys_count(targets_len, keys_len) abort$/;"	f
s:_maparg	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_maparg(name, mode, abbr, dict)$/;"	f
s:_max_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:_max_by(dict, expr) abort$/;"	f
s:_module_path	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_sid	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid_base_dir	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_new_environment	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_environment(name) abort$/;"	f
s:_new_instance	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_instance(instance, ...) abort$/;"	f
s:_new_option	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f
s:_new_register	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_register(name) abort$/;"	f
s:_new_variable	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f
s:_parse_line	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
s:_path2project_directory_git	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
s:_path2project_directory_others	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
s:_path2project_directory_svn	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
s:_plugin_name	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_redir	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_redir(cmd) abort$/;"	f
s:_redraw	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_redraw(cmdline)$/;"	f
s:_regex	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^let s:_regex = exists("+regexpengine")$/;"	v
s:_reset	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_reset()$/;"	f
s:_reset	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_reset()$/;"	f
s:_runtime	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_runtime(path) abort$/;"	f
s:_s	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_safe_eval	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_safe_eval(expr, ...)$/;"	f
s:_self_vital_files	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_sfuncname	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_should_match_cmdline	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_should_match_cmdline(cmdline)$/;"	f
s:_sid	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_source	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:_source(path) abort$/;"	f
s:_split_keystring	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:_split_keystring(str, ...)$/;"	f
s:_throw	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_throw(message) abort$/;"	f
s:_throw	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f
s:_undefined	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_undefined() abort$/;"	f
s:_unify_path	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path_cache	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_uniq	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
s:_uniq	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_verbosefile_pop	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_pop()$/;"	f
s:_verbosefile_push	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_push(file)$/;"	f
s:_virtual_tab2spacelen	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
s:_virtual_tab2spacelen	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
s:_vital_created	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_warn_deprecated	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
s:_wcwidth	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:accents	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:action	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^let s:action = ''$/;"	v
s:activateAll	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll() abort$/;"	f
s:activateBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm) abort$/;"	f
s:activateDirNode	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...) abort$/;"	f
s:activateFileNode	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node) abort$/;"	f
s:active_winnr	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^let s:active_winnr = -1$/;"	v
s:addChild	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:addChild(tag) abort dict$/;"	f
s:addTag	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:addTag(tag) abort dict$/;"	f
s:add_db	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_section	pack/vendor/start/vim-airline-master/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
s:add_snr	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/normaltag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/splittag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_tag_recursive	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:add_tag_recursive(parent, taginfo, pathlist) abort$/;"	f
s:added_db_files	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:added_dbs	pack/vendor/start/vim-gutentags/autoload/gutentags/pycscope.vim	/^let s:added_dbs = []$/;"	v
s:adjust_screen	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:adjust_screen() "{{{$/;"	f
s:airline_a_commandline	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_a_commandline = [ '#00005f' , '#00d700' , 17  , 40 ]$/;"	v
s:airline_a_inactive	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:airline_a_insert	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:airline_a_normal	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:airline_a_visual	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:airline_ale_count	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_count(cnt, symbol)$/;"	f
s:airline_ale_get_line_number	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_get_line_number(cnt, type) abort$/;"	f
s:airline_b_commandline	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_b_commandline = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_inactive	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:airline_b_insert	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:airline_b_normal	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_visual	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:airline_c_commandline	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_c_commandline = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_inactive	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:airline_c_insert	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:airline_c_normal	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_visual	pack/vendor/start/vim-airline-master/autoload/airline/themes/dark.vim	/^let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:airline_extensions	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:airline_extensions()$/;"	f
s:airline_initialized	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_languageclient_count	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_count(cnt, symbol)$/;"	f
s:airline_languageclient_get_line_number	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_get_line_number(type) abort$/;"	f
s:airline_lsp_count	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_count(cnt, symbol) abort$/;"	f
s:airline_lsp_get_line_number	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_get_line_number(cnt, type) abort$/;"	f
s:airline_nvimlsp_count	pack/vendor/start/vim-airline-master/autoload/airline/extensions/nvimlsp.vim	/^function! s:airline_nvimlsp_count(cnt, symbol) abort$/;"	f
s:airline_nvimlsp_get_line_number	pack/vendor/start/vim-airline-master/autoload/airline/extensions/nvimlsp.vim	/^function! s:airline_nvimlsp_get_line_number(cnt, type) abort$/;"	f
s:airline_refresh	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:airline_refresh(...)$/;"	f
s:airline_tagbar_last_lookup_time	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:airline_theme	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
s:airline_toggle	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
s:ale_refresh	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^function! s:ale_refresh()$/;"	f
s:all	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:and	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:any	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:apply_prop	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:apply_prop(words)$/;"	f
s:as_key_config	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:as_key_config(config)$/;"	f
s:as_keymapping	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:as_keymapping(key)$/;"	f
s:async_code	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_code = 0$/;"	v
s:async_congest	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_congest = 0$/;"	v
s:async_congest	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_congest = has('patch-8.0.100')? 1 : 0$/;"	v
s:async_congest	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_congest = 0$/;"	v
s:async_debug	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_debug = 0$/;"	v
s:async_efm	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_efm = &errorformat$/;"	v
s:async_head	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_head = 0$/;"	v
s:async_info	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_info = { 'text':"", 'post':'', 'postsave':'', 'qfid':-1 }$/;"	v
s:async_nvim	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_nvim = has('nvim')? 1 : 0$/;"	v
s:async_output	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_output = {}$/;"	v
s:async_quick	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_quick = (v:version >= 800 || has('patch-7.4.1997'))? 1 : 0$/;"	v
s:async_quick	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let s:async_quick = has('nvim-0.2.0')? 1 : 0$/;"	v
s:async_quick	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_quick = 0$/;"	v
s:async_scroll	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_scroll = 0$/;"	v
s:async_start	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_start = 0$/;"	v
s:async_state	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_state = 0$/;"	v
s:async_tail	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_tail = 0$/;"	v
s:async_term	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:async_term = {}$/;"	v
s:asyncrun_gui	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^			let s:asyncrun_gui = 1$/;"	v
s:asyncrun_gui	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let s:asyncrun_gui = 1$/;"	v
s:asyncrun_gui	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let s:asyncrun_gui = get(uis, 'ext_termcolors', 0)? 0 : 1$/;"	v
s:asyncrun_gui	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_gui = has('gui_running')$/;"	v
s:asyncrun_support	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_support = 0$/;"	v
s:asyncrun_windows	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	let s:asyncrun_windows = 1$/;"	v
s:asyncrun_windows	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:asyncrun_windows = 0$/;"	v
s:autocmd_handler	pack/vendor/start/vim-airline-master/autoload/airline/extensions/po.vim	/^function! s:autocmd_handler()$/;"	f
s:autocommands_done	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:b	colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:back	colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:backspace	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:backspace(s)$/;"	f
s:base	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	let s:base.variables.modules = s:Signals.make()$/;"	v
s:base	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:base = {$/;"	v
s:base	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^let s:base = {$/;"	v
s:base	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^let s:base = {}$/;"	v
s:base.__empty	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__empty(...)$/;"	f
s:base.__execute	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute(command)$/;"	f
s:base.__execute__	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute__(cmd)$/;"	f
s:base.__finish	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__finish()$/;"	f
s:base.__get_keymapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__get_keymapping()$/;"	f
s:base.__init	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init()$/;"	f
s:base.__init_variables	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init_variables()$/;"	f
s:base.__input	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input(input, ...)$/;"	f
s:base.__input_char	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input_char(char)$/;"	f
s:base.__inputting	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__inputting()$/;"	f
s:base.__is_exit	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__is_exit()$/;"	f
s:base.__keymapping__	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__keymapping__()$/;"	f
s:base.__main	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__main(...)$/;"	f
s:base.__update	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__update()$/;"	f
s:base.backward	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward()$/;"	f
s:base.backward	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.backward()$/;"	f
s:base.backward_word	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward_word(...)$/;"	f
s:base.call	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.call(func, ...)$/;"	f
s:base.callevent	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.callevent(event)$/;"	f
s:base.char	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.char()$/;"	f
s:base.cmap	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cmap(lhs, rhs)$/;"	f
s:base.cnoremap	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cnoremap(lhs, rhs)$/;"	f
s:base.connect	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.connect(module, ...)$/;"	f
s:base.connect	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.connect(slot)$/;"	f
s:base.cunmap	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cunmap(lhs)$/;"	f
s:base.disable_keymapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disable_keymapping()$/;"	f
s:base.disconnect	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disconnect(name)$/;"	f
s:base.disconnect	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect(slot)$/;"	f
s:base.disconnect_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect_by(expr)$/;"	f
s:base.draw	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.draw()$/;"	f
s:base.enable_keymapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.enable_keymapping()$/;"	f
s:base.execute	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.execute(...)$/;"	f
s:base.exit	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit(...)$/;"	f
s:base.exit_code	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit_code()$/;"	f
s:base.find_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_by(expr)$/;"	f
s:base.find_first_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_first_by(expr)$/;"	f
s:base.forward	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.forward()$/;"	f
s:base.forward	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.forward()$/;"	f
s:base.get	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get(...)$/;"	f
s:base.get_module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_module(name)$/;"	f
s:base.get_prompt	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_prompt()$/;"	f
s:base.get_slot	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.get_slot(val)$/;"	f
s:base.get_suffix	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_suffix()$/;"	f
s:base.get_tap_key	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_tap_key()$/;"	f
s:base.getchar	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getchar(...)$/;"	f
s:base.getline	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getline()$/;"	f
s:base.getpos	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getpos()$/;"	f
s:base.hl_cursor_off	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_off()$/;"	f
s:base.hl_cursor_on	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_on()$/;"	f
s:base.input	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.input(str)$/;"	f
s:base.input_key	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key()$/;"	f
s:base.input_key_stack	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack()$/;"	f
s:base.input_key_stack_pop	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_pop()$/;"	f
s:base.input_key_stack_string	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_string()$/;"	f
s:base.insert	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.insert(word, ...)$/;"	f
s:base.is_enable_keymapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_enable_keymapping()$/;"	f
s:base.is_exit	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_exit()$/;"	f
s:base.is_input	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_input(key, ...)$/;"	f
s:base.keymapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.keymapping()$/;"	f
s:base.length	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.length()$/;"	f
s:base.next	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.next()$/;"	f
s:base.pos	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos()$/;"	f
s:base.pos_char	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos_char()$/;"	f
s:base.prev	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.prev()$/;"	f
s:base.remove	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove(index)$/;"	f
s:base.remove_next	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_next()$/;"	f
s:base.remove_pos	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_pos()$/;"	f
s:base.remove_prev	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_prev()$/;"	f
s:base.set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set(item)$/;"	f
s:base.set_input_key_stack	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_input_key_stack(stack)$/;"	f
s:base.set_pos	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_pos(pos)$/;"	f
s:base.set_prompt	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_prompt(prompt)$/;"	f
s:base.set_str	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_str(str)$/;"	f
s:base.set_suffix	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_suffix(str)$/;"	f
s:base.setchar	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setchar(char, ...)$/;"	f
s:base.setline	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setline(line)$/;"	f
s:base.setpos	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setpos(pos)$/;"	f
s:base.slots	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.slots()$/;"	f
s:base.sort_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.sort_by(expr)$/;"	f
s:base.start	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.start(...)$/;"	f
s:base.str	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.str()$/;"	f
s:base.tap_keyinput	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.tap_keyinput(key)$/;"	f
s:base.untap_keyinput	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.untap_keyinput(key)$/;"	f
s:base.variables.modules.get_slot	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	function! s:base.variables.modules.get_slot(val)$/;"	f
s:base0	colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:basic16	pack/vendor/start/vim-airline-master/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
s:batchmode	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let s:batchmode = ''$/;"	v
s:bb	colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:begin_failed_skip_pattern	pack/vendor/start/ale-master/ale_linters/perl/perl.vim	/^let s:begin_failed_skip_pattern = '\\v' . join([$/;"	v
s:bin_dir	pack/vendor/start/ale-master/autoload/ale/python.vim	/^let s:bin_dir = has('unix') ? 'bin' : 'Scripts'$/;"	v
s:binary_search	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:blue	colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:break	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:bright	colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:buf_min_count	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buffer_data	pack/vendor/start/ale-master/autoload/ale/command.vim	/^    let s:buffer_data = {}$/;"	v
s:buffer_seqno	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:buffer_seqno = 0$/;"	v
s:build_command	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^function! s:build_command(color)$/;"	f
s:build_sections	pack/vendor/start/vim-airline-master/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
s:c	colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cache_command	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:cache_command = {}$/;"	v
s:cache_project_root	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cache_sid	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:cache_sid = {}$/;"	v
s:cached_map	pack/vendor/start/ale-master/autoload/ale/filetypes.vim	/^let s:cached_map = {}$/;"	v
s:call	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:call(list, func, ...)$/;"	f
s:call_signatures	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! s:call_signatures(items)$/;"	f
s:callback	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/quickui.vim	/^function! s:callback(args)$/;"	f
s:callback	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:callback(word)$/;"	f
s:can_preserve_syntax	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:can_preserve_syntax = s:has_patch(7, 4, 792)$/;"	v
s:capture	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:capture(name)$/;"	f
s:capture	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture(...)$/;"	f
s:capture	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
s:capture_list	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture_list(...)$/;"	f
s:cd_cmd	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:cd_cmd() abort$/;"	f
s:cd_to_vcs_root	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:cd_to_vcs_root(path) abort$/;"	f
s:chCwd	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node) abort$/;"	f
s:chRoot	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node) abort$/;"	f
s:channel_map	pack/vendor/start/ale-master/autoload/ale/socket.vim	/^let s:channel_map = get(s:, 'channel_map', {})$/;"	v
s:char_bottom_left	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let s:char_bottom_left  = ['*', '╰'][g:startify_fortune_use_unicode]$/;"	v
s:char_bottom_right	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let s:char_bottom_right = ['*', '╯'][g:startify_fortune_use_unicode]$/;"	v
s:char_range	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:char_sides	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let s:char_sides        = ['|', '│'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_bottom	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let s:char_top_bottom   = ['-', '─'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_left	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let s:char_top_left     = ['*', '╭'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_right	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let s:char_top_right    = ['*', '╮'][g:startify_fortune_use_unicode]$/;"	v
s:chdir	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:chdir(path)$/;"	f
s:check_defined	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
s:check_defined_section	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
s:check_mixed_indent	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
s:check_mixed_indent_file	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
s:check_quickfix	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	function! s:check_quickfix()$/;"	f
s:check_status	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function! s:check_status()$/;"	f
s:check_user_options	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:check_user_options(path) abort$/;"	f
s:checked_ctags	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:checkwith	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^  function! s:checkwith(left, right, line, col) abort$/;"	f
s:classpath_sep	pack/vendor/start/ale-master/ale_linters/java/javac.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:classpath_sep	pack/vendor/start/ale-master/ale_linters/kotlin/kotlinc.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:clean_jobs	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^let s:clean_jobs     = {}$/;"	v
s:clear	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:clear(dict) abort$/;"	f
s:clear	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clearOldFolds	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:clearOldFolds() abort dict$/;"	f
s:clear_inputted	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! s:clear_inputted()$/;"	f
s:close	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:close() abort$/;"	f
s:closeChildren	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node) abort$/;"	f
s:closeCurrentDir	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node) abort$/;"	f
s:closeFold	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:closeFold() abort dict$/;"	f
s:closeFold	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:closeFold() abort dict$/;"	f
s:closeKindFold	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:closeKindFold(kind) abort dict$/;"	f
s:closeTreeWindow	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow() abort$/;"	f
s:cmdheight	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:cmdheight = {}$/;"	v
s:cmdheight.get	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.get()$/;"	f
s:cmdheight.restore	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.restore()$/;"	f
s:cmdheight.save	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.save()$/;"	f
s:cmdline	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^let s:cmdline = s:V.import('Over.Commandline.Base')$/;"	v
s:coc_git_enabled	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^function! s:coc_git_enabled() abort$/;"	f
s:codefix_map	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^let s:codefix_map = {}$/;"	v
s:col_end_patterns	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^let s:col_end_patterns = [$/;"	v
s:color_template	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	pack/vendor/start/vim-airline-master/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:colorscheme_list	colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:column_display	pack/vendor/start/vim-airline-master/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:combinations	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:command	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:command(cmd, ...)$/;"	f
s:command_output	pack/vendor/start/ale-master/autoload/ale/assert.vim	/^let s:command_output = []$/;"	v
s:commit_mode	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimagit.vim	/^let s:commit_mode = {'ST': 'STAGING', 'CC': 'COMMIT', 'CA': 'AMEND'}$/;"	v
s:compare_by_index	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  function! s:compare_by_index(foo, bar)$/;"	f
s:compare_by_key_len	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  function! s:compare_by_key_len(foo, bar)$/;"	f
s:compare_by_kind	pack/vendor/start/tagbar-master/autoload/tagbar/sorting.vim	/^function! s:compare_by_kind(tag1, tag2) abort$/;"	f
s:compare_by_line	pack/vendor/start/tagbar-master/autoload/tagbar/sorting.vim	/^function! s:compare_by_line(tag1, tag2) abort$/;"	f
s:compare_by_val_len	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  function! s:compare_by_val_len(foo, bar)$/;"	f
s:compare_typeinfo	pack/vendor/start/tagbar-master/autoload/tagbar/sorting.vim	/^let s:compare_typeinfo = {}$/;"	v
s:compile_commands_cache	pack/vendor/start/ale-master/autoload/ale/c.vim	/^    let s:compile_commands_cache = {}$/;"	v
s:completions	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^let s:completions = []$/;"	v
s:concat	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:config	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^let s:config = {$/;"	v
s:config_fugitive_branch	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:config_fugitive_branch() abort$/;"	f
s:config_gina_branch	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:config_gina_branch() abort$/;"	f
s:conflict_marker	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^function! s:conflict_marker()$/;"	f
s:conj	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:connections	pack/vendor/start/ale-master/autoload/ale/lsp.vim	/^let s:connections = get(s:, 'connections', {})$/;"	v
s:cons	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:contexts	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:convertMigemo	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:convertMigemo(re) "{{{$/;"	f
s:convertRegep	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:convertRegep(input) "{{{$/;"	f
s:convertSmartcase	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:convertSmartcase(re, char) "{{{$/;"	f
s:convertSmartsign	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:convertSmartsign(chars) "{{{$/;"	f
s:convert_t_regexp	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:convert_t_regexp(re, direction) "{{{$/;"	f
s:core_funcrefs	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:cow	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let s:cow = [$/;"	v
s:create	pack/vendor/start/vim-airline-master/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
s:create	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:create(targets, keys) abort$/;"	f
s:createKinddict	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:createKinddict() abort dict$/;"	f
s:create_last_session_link	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:create_last_session_link(session_path)$/;"	f
s:create_pseudotag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:create_pseudotag(name, parent, kind, typeinfo, fileinfo) abort$/;"	f
s:create_win2pos2hint	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:create_win2pos2hint(hint_dict) abort$/;"	f
s:ctags_is_uctags	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:ctags_is_uctags     = 0$/;"	v
s:ctrlspace	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:current_ale_version	pack/vendor/start/ale-master/autoload/ale.vim	/^let s:current_ale_version = [3, 2, 0]$/;"	v
s:current_bufnr	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_bufnr = -1$/;"	v
s:current_completions	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^let s:current_completions = #{$/;"	v
s:current_modified	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_modified = 0$/;"	v
s:current_tabcnt	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabnr = -1$/;"	v
s:current_visible_buffers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:cursor_timer	pack/vendor/start/ale-master/autoload/ale/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:cursor_timer	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^let s:cursor_timer = -1$/;"	v
s:customOpenBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node) abort$/;"	f
s:customOpenDir	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node) abort$/;"	f
s:customOpenFile	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node) abort$/;"	f
s:custom_handlers_map	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^let s:custom_handlers_map = get(s:, 'custom_handlers_map', {})$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:daemon	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^let s:daemon = {'msgs': [], 'requested': v:false, 't': 0}$/;"	v
s:daemon.kill	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function s:daemon.kill()$/;"	f
s:daemon.respawn	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function! s:daemon.respawn(cmd, name, options)$/;"	f
s:daemon.status	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function! s:daemon.status(name)$/;"	f
s:daemon.write	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^  function! s:daemon.write(data)$/;"	f
s:debug_enabled	pack/vendor/start/tagbar-master/autoload/tagbar/debug.vim	/^let s:debug_enabled = 0$/;"	v
s:debug_file	pack/vendor/start/tagbar-master/autoload/tagbar/debug.vim	/^let s:debug_file = ''$/;"	v
s:decimal_group	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimal_group	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = '.'$/;"	v
s:deepextend	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:deepextend(expr1, expr2) abort$/;"	f
s:default_ale_linter_aliases	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^let s:default_ale_linter_aliases = {$/;"	v
s:default_ale_linters	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^let s:default_ale_linters = {$/;"	v
s:default_blacklist	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let s:default_blacklist = ['tagbar', 'qf', 'netrw', 'unite', 'vimwiki']$/;"	v
s:default_checks	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file', 'conflicts']$/;"	v
s:default_config	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:default_config() abort$/;"	f
s:default_mapping	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^    function! s:default_mapping(motions, do_mapping) "{{{$/;"	f
s:default_registry	pack/vendor/start/ale-master/autoload/ale/fix/registry.vim	/^let s:default_registry = {$/;"	v
s:default_type_map	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let s:default_type_map = {$/;"	v
s:defaults_list	colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:define_syntax	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:define_syntax()$/;"	f
s:delayed_update_files	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:delayed_update_files = []$/;"	v
s:delete	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:delete(s)$/;"	f
s:deleteBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark) abort$/;"	f
s:delimiterMap	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^let s:delimiterMap = {$/;"	v
s:denite_ver	pack/vendor/start/vim-airline-master/autoload/airline/extensions/denite.vim	/^let s:denite_ver = (exists('*denite#get_status_mode') ? 2 : 3)$/;"	v
s:diagnostics	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^let s:diagnostics = {}$/;"	v
s:diagnostics_for_buffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! s:diagnostics_for_buffer()$/;"	f
s:did_check_exe	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:dirArrows	pack/vendor/start/nerdtree-master/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowEx/;"	v
s:disable_hide	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^let s:disable_hide = v:false$/;"	v
s:displayHelp	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp() abort$/;"	f
s:display_by_path	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:display_by_path(path_prefix, path_format, use_env) abort$/;"	f
s:display_git_branch	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:display_git_branch()$/;"	f
s:display_hg_branch	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:display_hg_branch()$/;"	f
s:do_action	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^func s:do_action(action, meta, status, args)$/;"	f
s:do_delayed_update	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:do_delayed_update() abort$/;"	f
s:doautocmd_user	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:doautocmd_user(prefix, command)$/;"	f
s:draw_box	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^function! s:draw_box(lines) abort$/;"	f
s:echo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echo(hl, msg) abort$/;"	f
s:echomsg	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
s:edit_content	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f
s:emacs	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:emacs = {$/;"	v
s:emacs.keymapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:emacs.keymapping(cmdline)$/;"	f
s:emulate_virt	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^    let s:emulate_virt = !has('patch-9.0.0297')$/;"	v
s:emulate_virt	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^let s:emulate_virt = 0$/;"	v
s:enable_neovim	pack/vendor/start/ale-master/ale_linters/vim/vint.vim	/^let s:enable_neovim = has('nvim') ? ' --enable-neovim' : ''$/;"	v
s:enabled	pack/vendor/start/vim-airline-master/autoload/airline/extensions/localsearch.vim	/^let s:enabled = get(g:, 'airline#extensions#localsearch#enabled', 1)$/;"	v
s:enabled	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:end_col_pattern_map	pack/vendor/start/ale-master/ale_linters/python/flake8.vim	/^let s:end_col_pattern_map = {$/;"	v
s:end_col_pattern_map	pack/vendor/start/ale-master/ale_linters/python/flakehell.vim	/^let s:end_col_pattern_map = {$/;"	v
s:end_col_patterns	pack/vendor/start/ale-master/ale_linters/nim/nimcheck.vim	/^let s:end_col_patterns = [$/;"	v
s:environment	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:environment = {}$/;"	v
s:environment.restore	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:environment.restore() abort$/;"	f
s:error	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:error(text, where)$/;"	f
s:error	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
s:error_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/coc.vim	/^let s:error_symbol = get(g:, 'airline#extensions#coc#error_symbol', 'E:')$/;"	v
s:error_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^let s:error_symbol = get(g:, 'airline#extensions#languageclient#error_symbol', 'E:')$/;"	v
s:error_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:error_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/syntastic.vim	/^let s:error_symbol = get(g:, 'airline#extensions#syntastic#error_symbol', 'E:')$/;"	v
s:error_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vim9lsp.vim	/^let s:error_symbol = get(g:, 'airline#extensions#vim9lsp#error_symbol', 'E:')$/;"	v
s:error_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:escape	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! s:escape(string) abort$/;"	f
s:escape_file_searching	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
s:escape_pattern	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_regexp_char	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:escape_regexp_char(char) "{{{$/;"	f
s:escape_special_key	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:escape_special_key(key)$/;"	f
s:evaluate_tabline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^function! s:evaluate_tabline(tabline)$/;"	f
s:exec_separator	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! s:exec_separator(dict, from, to, inverse, suffix) abort$/;"	f
s:executable_cache_map	pack/vendor/start/ale-master/autoload/ale/engine.vim	/^    let s:executable_cache_map = {}$/;"	v
s:executables	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^let s:executables = [$/;"	v
s:executables	pack/vendor/start/ale-master/autoload/ale/handlers/solhint.vim	/^let s:executables = [$/;"	v
s:exists	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:exists(name) abort dict$/;"	f
s:expand_bufnr	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:ext	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:ext.add_inactive_statusline_func	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
s:ext.add_statusline_func	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
s:ext.add_statusline_funcref	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
s:ext.add_theme_func	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
s:extend	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:extend(dict, src)$/;"	f
s:fg_pdef	colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:filerename_map	pack/vendor/start/ale-master/autoload/ale/filerename.vim	/^let s:filerename_map = {}$/;"	v
s:filetype_overrides	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = [ get(g:, 'NERDTreeStatusline', 'NERD'), '' ]$/;"	v
s:filetype_overrides	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = ['NERDTree', '']$/;"	v
s:filetype_overrides	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:filter	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:filter(id, key)$/;"	f
s:filter_oldfiles	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:filter_oldfiles(path_prefix, path_format, use_env) abort$/;"	f
s:filter_oldfiles_unsafe	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:filter_oldfiles_unsafe(path_prefix, path_format, use_env) abort$/;"	f
s:find	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:findAndRevealPath	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr) abort$/;"	f
s:findMotion	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:findMotion(num_strokes, direction) "{{{$/;"	f
s:find_index	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_indices	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_last_index	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_root	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:find_root(path, markers, strict)$/;"	f
s:find_script	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^function! s:find_script(where, name)$/;"	f
s:fixed_column	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let s:fixed_column = g:startify_padding_left + 2$/;"	v
s:flags	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:flags	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^let s:flags = {$/;"	v
s:flags_noregion	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^  let s:flags_noregion[split(s:key, '_')[0]] = s:flags[s:key]$/;"	v
s:flags_noregion	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^let s:flags_noregion = {}$/;"	v
s:flatten	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:floaterm_close	pack/vendor/start/asyncrun.vim/autoload/asyncrun/runner/floaterm.vim	/^function! s:floaterm_close() abort$/;"	f
s:fnamecollapse	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/formatters/short_path.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:focusgained_ignore_time	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^let s:focusgained_ignore_time = 0$/;"	v
s:foldl	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:foldl(f, init, dict) abort$/;"	f
s:foldl	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl1	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldr	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:foldr(f, init, dict) abort$/;"	f
s:foldr	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr1	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:format	pack/vendor/start/ale-master/ale_linters/vim/vint.vim	/^let s:format = '-f "{file_path}:{line_number}:{column_number}: {severity}: {policy_name} - {desc/;"	v
s:format	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:format(v, max_length)$/;"	f
s:format_items	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:format_items(words)$/;"	f
s:format_name	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
s:format_wordcount	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^      function! s:format_wordcount(_)$/;"	f
s:format_wordcount	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^function! s:format_wordcount(wordcount)$/;"	f
s:formatter	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^      let s:formatter = 'default'$/;"	v
s:formatter	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
s:freezed_status	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^let s:freezed_status = {'pos': [], 'nr': -1, 'ft': '', 'mode': ''}$/;"	v
s:frozenset	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:frozenset(...) abort$/;"	f
s:frozenset	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:frozenset = deepcopy(s:_base_set)$/;"	v
s:gather_poses	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_poses(pattern) abort$/;"	f
s:gather_visible_matched_poses	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_visible_matched_poses(pattern, direction, allow_cursor_pos_match) abort$/;"	f
s:generate_wildignore_options	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
s:get	pack/vendor/start/tagbar-master/autoload/tagbar/state.vim	/^function! s:get() abort$/;"	f
s:get	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:get(name)$/;"	f
s:get	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:get(name, ...)$/;"	f
s:getChildren	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildren() dict abort$/;"	f
s:getChildrenByName	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildrenByName(tagname) dict abort$/;"	f
s:getClosedParentTline	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:getClosedParentTline() abort dict$/;"	f
s:getDataType	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:getDataType() abort dict$/;"	f
s:getDataType	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/normaltag.vim	/^function! s:getDataType() abort dict$/;"	f
s:getKind	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:getKind(kind) abort dict$/;"	f
s:getPromptMessage	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:getPromptMessage(num_strokes) "{{{$/;"	f
s:getPrototype	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getPrototype	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getPrototype	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/normaltag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getTags	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTags() dict abort$/;"	f
s:getTagsByName	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTagsByName(tagname) dict abort$/;"	f
s:get_accented_line	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
s:get_airline_themes	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
s:get_array	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! s:get_array(guifg, guibg, ctermfg, ctermbg, opts) abort$/;"	f
s:get_cmdline	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:get_cmdline()$/;"	f
s:get_cmdline_cword	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:get_cmdline_cword(backward, cword)$/;"	f
s:get_color_map	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^function! s:get_color_map()$/;"	f
s:get_counts	pack/vendor/start/vim-airline-master/autoload/airline/extensions/neomake.vim	/^function! s:get_counts()$/;"	f
s:get_ctags_executable	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_diagnostics	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! s:get_diagnostics()$/;"	f
s:get_escaped_group_char	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:get_escaped_group_char(dict, char) "{{{$/;"	f
s:get_hit_enter_max_length	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
s:get_hunks_changes	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes() abort$/;"	f
s:get_hunks_coc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_coc() abort$/;"	f
s:get_hunks_empty	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty() abort$/;"	f
s:get_hunks_gitgutter	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter() abort$/;"	f
s:get_hunks_signify	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify() abort$/;"	f
s:get_index_as_string	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:get_index_as_string() abort$/;"	f
s:get_last_selected	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
s:get_lists	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:get_lists() abort$/;"	f
s:get_map_str	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
s:get_mode	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^function! s:get_mode()$/;"	f
s:get_number	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^function! s:get_number(index)$/;"	f
s:get_random_offset	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^function! s:get_random_offset(max) abort$/;"	f
s:get_section	pack/vendor/start/vim-airline-master/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
s:get_selected_text	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
s:get_separator_change	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change(new_group, old_group, end_group, sep_size, alt_sep_size)$/;"	f
s:get_separator_change_with_end	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change_with_end(new_group, old_group, new_end_group, old_end_group, se/;"	f
s:get_seperator	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
s:get_syn	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! s:get_syn(group, what, mode) abort$/;"	f
s:get_transitioned_seperator	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
s:get_word	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:get_word(item)$/;"	f
s:get_wordcount	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^  function! s:get_wordcount(visual_mode_active)$/;"	f
s:getchar	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Input.vim	/^function! s:getchar(...)$/;"	f
s:getchar	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
s:getchar_safe	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
s:getcmdwintype_exists	pack/vendor/start/ale-master/autoload/ale.vim	/^let s:getcmdwintype_exists = exists('*getcmdwintype')$/;"	v
s:getline	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:getline()$/;"	f
s:gettime	pack/vendor/start/tagbar-master/autoload/tagbar/debug.vim	/^    function! s:gettime() abort$/;"	f
s:glob	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
s:global_variable_list	pack/vendor/start/ale-master/autoload/ale/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:globpath	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
s:go_to_definition_map	pack/vendor/start/ale-master/autoload/ale/definition.vim	/^let s:go_to_definition_map = {}$/;"	v
s:goto_definition	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! s:goto_definition(items, action)$/;"	f
s:goto_markedwin	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
s:goto_tagbar	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
s:goto_win	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
s:green	colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:group_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_list	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:group_list()$/;"	f
s:group_not_done	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! s:group_not_done(list, name) abort$/;"	f
s:grouping_algorithms	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^let s:grouping_algorithms = {$/;"	v
s:guard	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:guard.restore	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f
s:guess_root	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^	function! s:guess_root(filename, markers)$/;"	f
s:gui2cui	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! s:gui2cui(rgb, fallback) abort$/;"	f
s:h	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^    let s:h.ids[s:group] = []$/;"	v
s:h	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:h = {}$/;"	v
s:h	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:h.ids = {}$/;"	v
s:handleEmpty	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:handleEmpty(input, visualmode) "{{{$/;"	f
s:handleLeftClick	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick() abort$/;"	f
s:handleMiddleMouse	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse() abort$/;"	f
s:has	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has_common_items	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_features	pack/vendor/start/ale-master/plugin/ale.vim	/^    let s:has_features = has('timers') && exists('*job_start') && exists('*ch_close_in')$/;"	v
s:has_features	pack/vendor/start/ale-master/plugin/ale.vim	/^    let s:has_features = has('timers') && has('nvim-0.2.0')$/;"	v
s:has_features	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^function! s:has_features()$/;"	f
s:has_index	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_nvim_highlight	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^let s:has_nvim_highlight = exists('*nvim_buf_add_highlight') && exists('*nvim_buf_clear_namespac/;"	v
s:has_patch	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:has_patch(major, minor, patch) abort$/;"	f
s:has_percent_eval	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fugitiveline.vim	/^let s:has_percent_eval = v:version > 802 || (v:version == 802 && has("patch2854"))$/;"	v
s:has_qfid	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^let s:has_qfid = has('patch-8.0.1023') || has('nvim-0.6.1')$/;"	v
s:has_strcharpart	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^let s:has_strcharpart = exists('*strcharpart')$/;"	v
s:has_strchars	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^let s:has_strchars = exists('*strchars')$/;"	v
s:has_vimproc	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/cmigemo.vim	/^function! s:has_vimproc() "{{{$/;"	f
s:has_virt_text	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^    let s:has_virt_text = 1$/;"	v
s:has_virt_text	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^let s:has_virt_text = 0$/;"	v
s:head_format	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:hi_cursor	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:hi_cursor()$/;"	f
s:hide_endofbuffer_markers	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:hide_endofbuffer_markers()$/;"	f
s:highlight_groups	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_groups	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabws.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_line	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! s:highlight_line(bufnr, lnum, group) abort$/;"	f
s:highlight_range	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! s:highlight_range(bufnr, range, group) abort$/;"	f
s:hl_group_exists	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^  function! s:hl_group_exists(group) abort$/;"	f
s:hl_groups	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^let s:hl_groups = {}$/;"	v
s:hl_list	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^    let s:hl_list = []$/;"	v
s:hooks	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks = [$/;"	v
s:hooks_camel	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks_camel = [$/;"	v
s:hover_map	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^let s:hover_map = {}$/;"	v
s:hunk_symbols	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:i	colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:iTerm_escape_template	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^let s:iTerm_escape_template = '\\033]Pl%s\\033\\\\'$/;"	v
s:ics	pack/vendor/start/tagbar-master/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:ignore_time	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^let s:ignore_time = 0$/;"	v
s:import	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:import_python	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! s:import_python()$/;"	f
s:inc_highlight	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:inc_highlight(re) "{{{$/;"	f
s:index	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:index(haystack, needle, ...)$/;"	f
s:init	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^func s:init()$/;"	f
s:init	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^let s:init=0$/;"	v
s:init	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:init()$/;"	f
s:initCustomOpenArgs	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs() abort$/;"	f
s:initFoldState	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:initFoldState(known_files) abort dict$/;"	f
s:init_buffer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
s:init_done	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:init_done = 0$/;"	v
s:init_env	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:init_env()$/;"	f
s:init_path	pack/vendor/start/ale-master/autoload/ale/gradle.vim	/^let s:init_path = has('win32')$/;"	v
s:init_popup	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:init_popup()$/;"	f
s:init_var	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
s:inline_pattern	pack/vendor/start/ale-master/autoload/ale/handlers/gcc.vim	/^let s:inline_pattern = '\\v inlined from .* at \\<stdin\\>:(\\d+):(\\d+):$'$/;"	v
s:input	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:input(cmdline)$/;"	f
s:inputPrompt	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
s:input_helper	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
s:input_safe	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
s:inputted	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^let s:inputted = v:false$/;"	v
s:insert_word	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:insert_word(id)$/;"	f
s:instance	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:instance = {}$/;"	v
s:instance.restore	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:instance.restore() abort$/;"	f
s:intersect	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:invoke_funcrefs	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
s:isFoldable	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFoldable() abort dict$/;"	f
s:isFoldable	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFoldable() abort dict$/;"	f
s:isFolded	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFolded() abort dict$/;"	f
s:isFolded	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFolded() abort dict$/;"	f
s:isKindheader	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:isKindheader() abort dict$/;"	f
s:isKindheader	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isKindheader() abort dict$/;"	f
s:isNormalTag	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:isNormalTag() abort dict$/;"	f
s:isNormalTag	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/normaltag.vim	/^function! s:isNormalTag() abort dict$/;"	f
s:isPseudoTag	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
s:isPseudoTag	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
s:isSplitTag	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:isSplitTag() abort dict$/;"	f
s:isSplitTag	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/splittag.vim	/^function! s:isSplitTag() abort dict$/;"	f
s:is_AppleTerminal	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^let s:is_AppleTerminal = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'Apple_Terminal'$/;"	v
s:is_cmdwin	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
s:is_cygwin	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
s:is_cygwin	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dict	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
s:is_excluded_window	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
s:is_float	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
s:is_funcref	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
s:is_good	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^let s:is_good = !has('gui_running') && !s:is_win && !s:is_AppleTerminal$/;"	v
s:is_iTerm	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^let s:is_iTerm = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'iTerm.app'$/;"	v
s:is_in_fold	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:is_in_fold(lnum) abort$/;"	f
s:is_in_skiplist	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:is_in_skiplist(arg) abort$/;"	f
s:is_input_waiting	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:is_input_waiting(keymapping, input)$/;"	f
s:is_list	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
s:is_mac	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_mac() abort$/;"	f
s:is_mac	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_number	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
s:is_numeric	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
s:is_status_consistent	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! s:is_status_consistent()$/;"	f
s:is_string	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
s:is_unix	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_unix() abort$/;"	f
s:is_unix	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_vital_vim	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_win	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win32term	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) &&$/;"	v
s:is_windows	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_windows() abort$/;"	f
s:is_windows	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:iterm_new_version	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! s:iterm_new_version() abort$/;"	f
s:job_kill_timers	pack/vendor/start/ale-master/autoload/ale/job.vim	/^    let s:job_kill_timers = {}$/;"	v
s:job_map	pack/vendor/start/ale-master/autoload/ale/job.vim	/^    let s:job_map = {}$/;"	v
s:job_start_daemon	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^  function! s:job_start_daemon(name, cmd, options)$/;"	f
s:jump	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! s:jump(items, action)$/;"	f
s:jumpToChild	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last) abort$/;"	f
s:jumpToFirstChild	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node) abort$/;"	f
s:jumpToLastChild	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node) abort$/;"	f
s:jumpToNextSibling	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node) abort$/;"	f
s:jumpToParent	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node) abort$/;"	f
s:jumpToPrevSibling	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node) abort$/;"	f
s:jumpToRoot	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot() abort$/;"	f
s:jumpToSibling	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward) abort$/;"	f
s:jump_to_placeholder	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/placeholder.vim	/^function! s:jump_to_placeholder()$/;"	f
s:jump_to_tab	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
s:keyMaps	pack/vendor/start/nerdtree-master/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:key_ignore	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! s:key_ignore(pos)$/;"	f
s:known_files	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:known_files	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_files.get	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
s:known_files.has	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
s:known_files.put	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
s:known_files.rm	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
s:known_projects	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:language_id_of_filetype	pack/vendor/start/ale-master/autoload/ale/handlers/ocamllsp.vim	/^let s:language_id_of_filetype = {$/;"	v
s:languageclient_refresh	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! s:languageclient_refresh()$/;"	f
s:languages	pack/vendor/start/ale-master/autoload/ale/fixers/uncrustify.vim	/^let s:languages = {$/;"	v
s:last_alt_bufnr	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:last_alt_bufnr = -1$/;"	v
s:last_done_pos	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let s:last_done_pos = []$/;"	v
s:last_highlight_tline	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_list	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^    let s:last_list = []$/;"	v
s:last_mode	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^let s:last_mode = ''$/;"	v
s:last_options	pack/vendor/start/ale-master/autoload/ale/preview.vim	/^    let s:last_options = {}$/;"	v
s:last_pattern_options	pack/vendor/start/ale-master/autoload/ale/pattern_options.vim	/^let s:last_pattern_options = {}$/;"	v
s:last_pos	pack/vendor/start/ale-master/autoload/ale/hover.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_pos	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_virt	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^        let s:last_virt = -1$/;"	v
s:last_wildignores	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:layout	pack/vendor/start/vim-airline-master/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:lazycat_list	colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:left	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:left(s)$/;"	f
s:leftmouse	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  function! s:leftmouse()$/;"	f
s:leftpad	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let s:leftpad = repeat(' ', g:startify_padding_left)$/;"	v
s:legacy_airline_ale_get_line_number	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^function! s:legacy_airline_ale_get_line_number(cnt, type) abort$/;"	f
s:lenSpaceStr	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:length	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:length(str)$/;"	f
s:lhs_key_list	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:lhs_key_list(...)$/;"	f
s:links_to	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:links_to(highlight)$/;"	f
s:lint_timer	pack/vendor/start/ale-master/autoload/ale.vim	/^let s:lint_timer = -1$/;"	v
s:linters	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^let s:linters = {}$/;"	v
s:lisp_regex	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let s:lisp_regex = '\\v[a-zA-Z_\\-][a-zA-Z_\\-0-9]*$'$/;"	v
s:load	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:load(...) abort dict$/;"	f
s:load_program	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^function! s:load_program(name)$/;"	f
s:load_runner	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^function! s:load_runner(name)$/;"	f
s:load_smart_dict	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:load_smart_dict() "{{{$/;"	f
s:loaded	pack/vendor/start/vim-airline-master/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^let s:loaded = s:FALSE$/;"	v
s:loaded	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:loaded = {}$/;"	v
s:loaded_ext	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^let s:loaded_ext = []$/;"	v
s:lsp_linter_map	pack/vendor/start/ale-master/autoload/ale/lsp_linter.vim	/^    let s:lsp_linter_map = {}$/;"	v
s:lsp_progress	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^let s:lsp_progress = []$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:make(keys, values, ...) abort$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make(...)$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:make(name, ...)$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:make(prefix)$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:make(...)$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:make(...)$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:make(...)$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make(chars)$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:make()$/;"	f
s:make	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:make(...)$/;"	f
s:make_emacs	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_emacs()$/;"	f
s:make_index	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:make_index(list, ...) abort$/;"	f
s:make_plain	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make_plain()$/;"	f
s:make_special_chars	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make_special_chars()$/;"	f
s:make_vim_cmdline_mapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_vim_cmdline_mapping()$/;"	f
s:manual_update_tags	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map_accum	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:map_keys	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
s:mapkeys	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/xtabline.vim	/^        fun! s:mapkeys(keys, plug)$/;"	f
s:mark_window	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
s:match_key	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:match_key(keymapping, key)$/;"	f
s:matchaddpos	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^function! s:matchaddpos(group, pos_list) abort$/;"	f
s:matchbegin	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:matchbegin(text, close)$/;"	f
s:matchend	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:matchend(text, open)$/;"	f
s:max_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:max_by(dict, expr) abort$/;"	f
s:max_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:max_width	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^let s:max_width = 80$/;"	v
s:max_word_length	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:max_word_length(items)$/;"	f
s:maximal_number_of_compared_movments	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^let s:maximal_number_of_compared_movments = 10000$/;"	v
s:maybe_map_scope	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/normaltag.vim	/^function! s:maybe_map_scope(scopestr) abort$/;"	f
s:message	pack/vendor/start/ale-master/autoload/ale/codefix.vim	/^function! s:message(message) abort$/;"	f
s:message	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^function! s:message(message) abort$/;"	f
s:message	pack/vendor/start/ale-master/autoload/ale/filerename.vim	/^function! s:message(message) abort$/;"	f
s:message	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^function! s:message(message) abort$/;"	f
s:min_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:min_by(dict, expr) abort$/;"	f
s:min_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:modep	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:modep = "[nvoicsxl]"$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:module = {$/;"	v
s:module	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:module = {$/;"	v
s:module.complete	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
s:module.get_complete_words	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
s:module.histories	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.histories()$/;"	f
s:module.is_no_insert	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.is_no_insert(char)$/;"	f
s:module.message	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.message(...)$/;"	f
s:module.on_char	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_draw	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw(cmdline)$/;"	f
s:module.on_draw_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_draw_pre(...)$/;"	f
s:module.on_draw_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_draw_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_enter	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_exception	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_exception	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_execute	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute(...)$/;"	f
s:module.on_execute_failed	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_failed(...)$/;"	f
s:module.on_execute_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_execute_pre(...)$/;"	f
s:module.on_execute_pre	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_pre(cmdline)$/;"	f
s:module.on_leave	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_leave(...)$/;"	f
s:module.on_leave	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.redraw	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.redraw(cmdline)$/;"	f
s:module.reset	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.reset()$/;"	f
s:modules	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^let s:modules = s:V.import("Over.Commandline.Modules")$/;"	v
s:motion_map_helper	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^function! s:motion_map_helper(motions) "{{{$/;"	f
s:move	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move(pattern, ...) abort$/;"	f
s:move_f	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f(...) abort$/;"	f
s:move_f2	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f2() abort$/;"	f
s:move_to_win	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_win(winnr) abort$/;"	f
s:move_to_winpos	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_winpos(winpos) abort$/;"	f
s:mq_jobs	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^let s:mq_jobs        = {}$/;"	v
s:n	colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:names	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^let s:names = {'0': 'index', '1': 'orig', '2':'fetch', '3':'merge'}$/;"	v
s:nearby_disabled	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:neoterm_id	pack/vendor/start/vim-airline-master/autoload/airline/extensions/term.vim	/^function! s:neoterm_id(bufnr) abort$/;"	f
s:new	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new_airline_ale_get_line_number	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ale.vim	/^function! s:new_airline_ale_get_line_number(cnt, type) abort$/;"	f
s:new_overwin	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:new_overwin(...) abort$/;"	f
s:new_window	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:next()$/;"	f
s:nomodeline	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has("patch438"))) ? '<nomodeline>' :/;"	v
s:non_zero_only	pack/vendor/start/vim-airline-master/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:none	colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:ns_id	pack/vendor/start/ale-master/autoload/ale/highlight.vim	/^    let s:ns_id = nvim_create_namespace('ale_highlight')$/;"	v
s:ns_id	pack/vendor/start/ale-master/autoload/ale/virtualtext.vim	/^    let s:ns_id = nvim_create_namespace('ale')$/;"	v
s:number_map	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:number_map	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:nvim_daemon_handler	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function! s:nvim_daemon_handler(name, job_id, data, event)$/;"	f
s:nvim_job_exit_wrapper	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:nvim_last_msg	pack/vendor/start/completor.vim-master/autoload/completor/compat.vim	/^let s:nvim_last_msg = ''$/;"	v
s:nvim_mq_job_handler	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! s:nvim_mq_job_handler(job_id, data, event) dict$/;"	f
s:nvim_oneshot_handler	pack/vendor/start/completor.vim-master/autoload/completor/compat.vim	/^function! s:nvim_oneshot_handler(job_id, data, event)$/;"	f
s:nvim_output_handler	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! s:nvim_output_handler(job_id, data, event) dict$/;"	f
s:nvim_po_job_handler	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! s:nvim_po_job_handler(job_id, data, event) dict$/;"	f
s:nvim_read	pack/vendor/start/completor.vim-master/autoload/completor/compat.vim	/^function! s:nvim_read(data)$/;"	f
s:nvim_untracked_job_handler	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! s:nvim_untracked_job_handler(job_id, data, event) dict$/;"	f
s:ob	colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:off_screen_search	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:off_screen_search(re) "{{{$/;"	f
s:old_cpo	pack/vendor/start/nerdtree-master/plugin/NERD_tree.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:old_width	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:old_width = 0$/;"	v
s:omit	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:omit(dict, keys) abort$/;"	f
s:omni_start_map	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let s:omni_start_map = {$/;"	v
s:on_colorscheme_changed	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
s:on_cursor_moved	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:on_cursor_moved()$/;"	f
s:on_exit	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function! s:on_exit(name, job_id, status)$/;"	f
s:on_exit_clean	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! s:on_exit_clean(...) dict abort$/;"	f
s:on_exit_mq	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
s:on_exit_po	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! s:on_exit_po(channel) dict abort$/;"	f
s:on_exit_untracked	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! s:on_exit_untracked(channel) dict abort$/;"	f
s:on_focus_gained	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:on_focus_gained()$/;"	f
s:on_insert_char_pre	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! s:on_insert_char_pre()$/;"	f
s:on_stdout	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
s:on_text_change	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! s:on_text_change()$/;"	f
s:on_text_change	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:on_text_change()$/;"	f
s:on_vimenter	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^function! s:on_vimenter()$/;"	f
s:on_vimleavepre	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^function! s:on_vimleavepre()$/;"	f
s:on_window_changed	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:on_window_changed(event)$/;"	f
s:open	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
s:openExplorer	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node) abort$/;"	f
s:openFold	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:openFold() abort dict$/;"	f
s:openFold	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:openFold() abort dict$/;"	f
s:openHSplit	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target) abort$/;"	f
s:openHSplitBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplitBookmark(bm) abort$/;"	f
s:openInNewTab	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target) abort$/;"	f
s:openInNewTabSilent	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target) abort$/;"	f
s:openKindFold	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:openKindFold(kind) abort dict$/;"	f
s:openNodeRecursively	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node) abort$/;"	f
s:openParents	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:openParents() abort dict$/;"	f
s:openVSplit	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target) abort$/;"	f
s:openVSplitBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplitBookmark(bm) abort$/;"	f
s:open_buffer	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:open_buffer(entry)$/;"	f
s:option	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:option.restore	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f
s:options_list	colors/solarized.vim	/^let s:options_list=[$/;"	v
s:or	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:orange	colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:osascript	pack/vendor/start/asyncrun.vim/autoload/asyncrun/macos.vim	/^function! s:osascript(...) abort$/;"	f
s:ou	colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:overwin	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:overwin = {$/;"	v
s:overwin.choose_prompt	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.choose_prompt(hint_dict) abort$/;"	f
s:overwin.gather_poses_overwin	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.gather_poses_overwin(pattern) abort$/;"	f
s:overwin.pattern	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.pattern(pattern) abort$/;"	f
s:overwin.restore_options	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.restore_options() abort$/;"	f
s:overwin.select_winpos	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.select_winpos(winnr2poses, keys) abort$/;"	f
s:overwin.set_options	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.set_options() abort$/;"	f
s:padding_left	pack/vendor/start/vim-startify-master/syntax/startify.vim	/^let s:padding_left = repeat(' ', get(g:, 'startify_padding_left', 3))$/;"	v
s:parse	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse(highlight)$/;"	f
s:parseJSON	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! s:parseJSON(buffer, lines) abort$/;"	f
s:parseLines	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^function! s:parseLines(buffer, lines) abort$/;"	f
s:parse_cmdarg	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:parse_cmdarg(...) abort$/;"	f
s:parse_lhs	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs(text, ...)$/;"	f
s:parse_lhs_list	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs_list(...)$/;"	f
s:parse_to_name	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse_to_name(highlight)$/;"	f
s:partial_timers	pack/vendor/start/ale-master/autoload/ale/util.vim	/^    let s:partial_timers = {}$/;"	v
s:partition	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:parts	pack/vendor/start/vim-airline-master/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:pat	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/placeholder.vim	/^let s:pat = '<#[^#]\\+#>'$/;"	v
s:path2directory	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
s:path2project_directory	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
s:path_format_regex	pack/vendor/start/ale-master/autoload/ale/command.vim	/^let s:path_format_regex = '\\v\\%s(%(:h|:t|:r|:e)*)'$/;"	v
s:path_join	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:path_join(home, name)$/;"	f
s:pattern	pack/vendor/start/ale-master/ale_linters/desktop/desktop_file_validate.vim	/^let s:pattern = '\\v^(.+): ([a-z]+): (.+)$'$/;"	v
s:pattern	pack/vendor/start/ale-master/ale_linters/json/jq.vim	/^let s:pattern = '^parse error: \\(.\\+\\) at line \\(\\d\\+\\), column \\(\\d\\+\\)$'$/;"	v
s:pattern	pack/vendor/start/ale-master/autoload/ale/handlers/gcc.vim	/^let s:pattern = '\\v^([a-zA-Z]?:?[^:]+):(\\d+)?:?(\\d+)?:? ([^:]+): (.+)$'$/;"	v
s:pattern	pack/vendor/start/tagbar-master/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	pack/vendor/start/tagbar-master/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	pack/vendor/start/tagbar-master/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	pack/vendor/start/tagbar-master/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? /;"	v
s:pattern	pack/vendor/start/tagbar-master/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@3<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	pack/vendor/start/tagbar-master/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:permutations	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:pick	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:pick(dict, keys) abort$/;"	f
s:plugin_name	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:po_jobs	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^let s:po_jobs        = {}$/;"	v
s:po_output	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! s:po_output(buf, file)$/;"	f
s:pop	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:popup	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^let s:popup = -1$/;"	v
s:pos2hint_to_line2col2hint	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
s:pos2poskey	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2poskey(pos) abort$/;"	f
s:poskey2pos	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:poskey2pos(poskey) abort$/;"	f
s:pragma_error	pack/vendor/start/ale-master/autoload/ale/handlers/gcc.vim	/^let s:pragma_error = '#pragma once in main file'$/;"	v
s:predefined_quotes	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^let s:predefined_quotes = [$/;"	v
s:prefix	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Exception.vim	/^let s:prefix = printf("vital-over(%s) Exception", s:vname)$/;"	v
s:prev	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^let s:prev = []$/;"	v
s:prev	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:prev()$/;"	f
s:previewBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark) abort$/;"	f
s:previewNodeCurrent	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node) abort$/;"	f
s:previewNodeHSplit	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node) abort$/;"	f
s:previewNodeHSplitBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplitBookmark(bookmark) abort$/;"	f
s:previewNodeVSplit	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node) abort$/;"	f
s:previewNodeVSplitBookmark	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplitBookmark(bookmark) abort$/;"	f
s:print_section_header	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:print_section_header() abort$/;"	f
s:priorities	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:priorities = {$/;"	v
s:process_options_file	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:product	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:program_msys	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:program_msys(opts)$/;"	f
s:project_root	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:promptToDelBuffer	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
s:prompt_snapshot_file	pack/vendor/start/vim-airline-master/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prototype	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype.overflow_group = 'airline_tab'$/;"	v
s:prototype.add_raw	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
s:prototype.add_section	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
s:prototype.add_section_spaced	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
s:prototype.build	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.build	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.get_position	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:prototype.get_position() dict$/;"	f
s:prototype.insert_raw	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:prototype.insert_raw(text, position) dict$/;"	f
s:prototype.insert_section	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:prototype.insert_section(group, contents, position) dict$/;"	f
s:prototype.insert_titles	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.insert_titles(current, first, last) dict$/;"	f
s:prototype.split	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
s:prototype.try_insert_title	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.try_insert_title(index, group, pos, sep_size, force) dict$/;"	f
s:push	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:pwin_by_tagbar	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:py	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^let s:py = has('python3') ? 'py3' : 'py'$/;"	v
s:pyeval	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^let s:pyeval = function(has('python3') ? 'py3eval' : 'pyeval')$/;"	v
s:python_imported	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^let s:python_imported = v:false$/;"	v
s:r	colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:rand	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:rand(max) abort$/;"	f
s:random_theme	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^function! s:random_theme() abort$/;"	f
s:read_content	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f
s:record_diagnostics	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^function! s:record_diagnostics(state)$/;"	f
s:red	colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:references_map	pack/vendor/start/ale-master/autoload/ale/references.vim	/^let s:references_map = {}$/;"	v
s:refreshCurrent	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node) abort$/;"	f
s:refreshRoot	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot() abort$/;"	f
s:register	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:register = {}$/;"	v
s:register	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:register(line, index, type, cmd, path)$/;"	f
s:register.restore	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:register.restore() abort$/;"	f
s:removeChild	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:removeChild(tag) dict abort$/;"	f
s:removeTag	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:removeTag(tag) dict abort$/;"	f
s:renameBuffer	pack/vendor/start/nerdtree-master/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
s:rename_map	pack/vendor/start/ale-master/autoload/ale/rename.vim	/^let s:rename_map = {}$/;"	v
s:reset	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! s:reset()$/;"	f
s:reset	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^func! s:reset()$/;"	f
s:reset	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:reset() abort dict$/;"	f
s:reset_untracked_cache	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
s:restore_cpo	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^function! s:restore_cpo()$/;"	f
s:restore_cursor_state	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:restore_cursor_state(visualmode) "{{{$/;"	f
s:reuseWin	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
s:rhs_key_list	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:rhs_key_list(...)$/;"	f
s:right	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:right(s)$/;"	f
s:rootNERDTreePath	pack/vendor/start/nerdtree-master/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:root_dir	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	pack/vendor/start/vim-easymotion-master/t/operator_pending_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:run	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:run(opts)$/;"	f
s:run_system	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:run_system(cmd, version) abort$/;"	f
s:runner_exe	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = '"' . gutentags#get_plat_file('update_tags') . '"'$/;"	v
s:runner_exe	pack/vendor/start/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_gtags')$/;"	v
s:runner_exe	pack/vendor/start/vim-gutentags/autoload/gutentags/pycscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_pyscopedb')$/;"	v
s:runtime_loaded_map	pack/vendor/start/ale-master/autoload/ale/linter.vim	/^let s:runtime_loaded_map = {}$/;"	v
s:s	colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:save_cpo	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/completor.vim-master/plugin/completor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-airline-master/plugin/airline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/cmigemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/sticky_table.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Exception.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/vendor/start/vim-easymotion-master/plugin/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_restore_view	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:save_restore_view(mode)$/;"	f
s:script_path	pack/vendor/start/ale-master/autoload/ale/gradle.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:script_path	pack/vendor/start/vim-airline-master/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:script_time	pack/vendor/start/asyncrun.vim/plugin/script_load.vim	/^let s:script_time = {}$/;"	v
s:scroll	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:scroll(direction) "{{{$/;"	f
s:search	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^let s:search = s:cmdline.make()$/;"	v
s:search	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^let s:search.highlights.prompt = 'Question'$/;"	v
s:search	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search.keymapping	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:search.keymapping() "{{{$/;"	f
s:search.on_char	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:search.on_char(cmdline) "{{{$/;"	f
s:search.on_enter	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:search.on_enter(cmdline) "{{{$/;"	f
s:search.on_leave	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/command_line.vim	/^function! s:search.on_leave(cmdline) "{{{$/;"	f
s:search_term	pack/vendor/start/vim-airline-master/autoload/airline/extensions/searchcount.vim	/^function! s:search_term()$/;"	f
s:searchfor	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^  function! s:searchfor(str, line, col, direction, ...) abort$/;"	f
s:section_a	pack/vendor/start/vim-airline-master/autoload/airline/extensions/term.vim	/^let s:section_a = airline#section#create_left(['terminal', 'tmode'])$/;"	v
s:section_is_empty	pack/vendor/start/vim-airline-master/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
s:section_truncate_width	pack/vendor/start/vim-airline-master/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:section_use_groups	pack/vendor/start/vim-airline-master/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:section_z	pack/vendor/start/vim-airline-master/autoload/airline/extensions/term.vim	/^let s:section_z = airline#section#create(['linenr', 'maxlinenr'])$/;"	v
s:sections	pack/vendor/start/vim-airline-master/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:select_tab	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
s:sep	pack/vendor/start/ale-master/autoload/ale/c.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	pack/vendor/start/ale-master/autoload/ale/handlers/eslint.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	pack/vendor/start/ale-master/autoload/ale/handlers/solhint.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	pack/vendor/start/ale-master/autoload/ale/python.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:sep	pack/vendor/start/vim-startify-master/syntax/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:separators	pack/vendor/start/vim-airline-master/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:session_dir	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^let s:session_dir = startify#get_session_path()$/;"	v
s:set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set(...) abort$/;"	f
s:set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^let s:set = deepcopy(s:_base_set)$/;"	v
s:set	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:set(name, config)$/;"	f
s:set.add	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.add(x) abort$/;"	f
s:set.clear	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.clear() abort$/;"	f
s:set.difference_update	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.difference_update(t) abort$/;"	f
s:set.discard	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.discard(e) abort$/;"	f
s:set.iand	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.iand(t) abort$/;"	f
s:set.intersection_update	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.intersection_update(t) abort$/;"	f
s:set.ior	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ior(t) abort$/;"	f
s:set.isub	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.isub(t) abort$/;"	f
s:set.ixor	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ixor(t) abort$/;"	f
s:set.pop	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.pop() abort$/;"	f
s:set.remove	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.remove(e) abort$/;"	f
s:set.symmetric_difference_update	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.symmetric_difference_update(t) abort$/;"	f
s:set.update	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.update(iterable) abort$/;"	f
s:setFolded	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! s:setFolded(folded) abort dict$/;"	f
s:set_clean_jobs_variable	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! s:set_clean_jobs_variable(vcs, file, id)$/;"	f
s:set_clean_variables	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! s:set_clean_variables(file, vcs, val)$/;"	f
s:set_cursor	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:set_cursor() abort$/;"	f
s:set_cursor_color_for	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^function! s:set_cursor_color_for(mode)$/;"	f
s:set_custom_section	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:set_custom_section(section) abort$/;"	f
s:set_default	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
s:set_events	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! s:set_events()$/;"	f
s:set_mappings	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:set_mappings() abort$/;"	f
s:set_prefix	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:set_prefix(prefix)$/;"	f
s:set_variables	pack/vendor/start/ale-master/autoload/ale/fixers/astyle.vim	/^function! s:set_variables() abort$/;"	f
s:set_variables	pack/vendor/start/ale-master/autoload/ale/fixers/clangtidy.vim	/^function! s:set_variables() abort$/;"	f
s:setline	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:setline(lnum, text) abort$/;"	f
s:setup_keymaps	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
s:setup_options	pack/vendor/start/tagbar-master/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
s:severity_error	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^let s:severity_error = 1$/;"	v
s:severity_hint	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^let s:severity_hint = 4$/;"	v
s:severity_info	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^let s:severity_info = 3$/;"	v
s:severity_warning	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^let s:severity_warning = 2$/;"	v
s:sh_autocmd_handler	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:sh_autocmd_handler()$/;"	f
s:sh_autocmd_handler	pack/vendor/start/vim-airline-master/autoload/airline/extensions/fugitiveline.vim	/^function! s:sh_autocmd_handler()$/;"	f
s:sha1size	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^let s:sha1size = get(g:, 'airline#extensions#branch#sha1_len', 7)$/;"	v
s:shade_hl_defaults	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_defaults = {$/;"	v
s:shade_hl_line_defaults	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_line_defaults = {$/;"	v
s:shellescape	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:shellescape(path)$/;"	f
s:shift	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:short_help	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:should_complete_map	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let s:should_complete_map = {$/;"	v
s:should_use_migemo	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:should_use_migemo(char) "{{{$/;"	f
s:should_use_regexp	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:should_use_regexp() "{{{$/;"	f
s:should_use_smartsign	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:should_use_smartsign(char) "{{{$/;"	f
s:showMenu	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node) abort$/;"	f
s:show_bookmarks	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:show_bookmarks() abort$/;"	f
s:show_buffers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_coc_status	pack/vendor/start/vim-airline-master/autoload/airline/extensions/coc.vim	/^let s:show_coc_status = get(g:, 'airline#extensions#coc#show_coc_status', 1)$/;"	v
s:show_commands	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:show_commands() abort$/;"	f
s:show_dir	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:show_dir() abort$/;"	f
s:show_doc	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! s:show_doc(items)$/;"	f
s:show_files	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:show_files() abort$/;"	f
s:show_line_numbers	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^let s:show_line_numbers = get(g:, 'airline#extensions#languageclient#show_line_numbers', 1)$/;"	v
s:show_lists	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:show_lists(lists) abort$/;"	f
s:show_message	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_sessions	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:show_sessions() abort$/;"	f
s:show_tabline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
s:sid2sfuncs	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:singular_types	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:singular_types = {$/;"	v
s:skip	pack/vendor/start/completor.vim-master/autoload/completor.vim	/^function! s:skip()$/;"	f
s:skip_check_ft	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file'],$/;"	v
s:skip_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:slash	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^let s:slash = (exists('+shellslash') && !&shellslash) ? '\\' : '\/'$/;"	v
s:smart_execute_command	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
s:solarized_termtrans_default	colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sort	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sortByLength	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:sortByLength(i1, i2)$/;"	f
s:sortTags	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:sortTags(compare_typeinfo) abort dict$/;"	f
s:sort_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:sort_by_mtime	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^    function! s:sort_by_mtime(foo, bar)$/;"	f
s:sort_by_tick	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:sort_by_tick(one, two)$/;"	f
s:sorted_items	pack/vendor/start/ale-master/autoload/ale/pattern_options.vim	/^let s:sorted_items = []$/;"	v
s:sp_back	colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spaceStr	pack/vendor/start/nerdcommenter-master/autoload/nerdcommenter.vim	/^let s:spaceStr = ' '$/;"	v
s:span	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/dirvish.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/localsearch.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/poetv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/rufo.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/term.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vimtex.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	pack/vendor/start/vim-airline-master/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:split_by_keys	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^function! s:split_by_keys(str)$/;"	f
s:start_in_terminal	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:start_in_terminal(opts)$/;"	f
s:statusline_in_use	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:store	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:store(targets) abort$/;"	f
s:str	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/normaltag.vim	/^function! s:str(longsig, full) abort dict$/;"	f
s:strfmt	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/normaltag.vim	/^function! s:strfmt() abort dict$/;"	f
s:strfmt	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:strfmt() abort dict$/;"	f
s:strwidthpart	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart_reverse	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:substitute_path_separator	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
s:suffix	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:suffix(left, suffix)$/;"	f
s:supports_sign_groups	pack/vendor/start/ale-master/autoload/ale/sign.vim	/^let s:supports_sign_groups = has('nvim-0.4.2') || has('patch-8.1.614')$/;"	v
s:swap	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:swap(dict) abort$/;"	f
s:symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:symbol_map	pack/vendor/start/ale-master/autoload/ale/symbol.vim	/^let s:symbol_map = {}$/;"	v
s:t_none	colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tab2spacelen	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:tab2spacelen(line, col_num) abort$/;"	f
s:tab_min_count	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tabline_evaluated_length	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline/builder.vim	/^function! s:tabline_evaluated_length(tabline)$/;"	f
s:taboo	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:tabws	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^let s:tabws = get(g:, 'tabws_loaded', 0)$/;"	v
s:take_while	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:target_hl2_first_defaults	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_first_defaults = {$/;"	v
s:target_hl2_second_defaults	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_second_defaults = {$/;"	v
s:target_hl_defaults	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:target_hl_defaults = {$/;"	v
s:target_hl_inc	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc = {$/;"	v
s:target_hl_inc_cursor	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc_cursor = {$/;"	v
s:target_hl_move	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/highlight.vim	/^let s:target_hl_move = {$/;"	v
s:temp00	colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_dir	pack/vendor/start/ale-master/autoload/ale/handlers/haskell.vim	/^let s:temp_dir = fnamemodify(ale#util#Tempname(), ':h')$/;"	v
s:temp_dir	pack/vendor/start/ale-master/autoload/ale/path.vim	/^let s:temp_dir = ale#path#Simplify(fnamemodify(ale#util#Tempname(), ':h:h'))$/;"	v
s:temp_regex_prefix	pack/vendor/start/ale-master/autoload/ale/handlers/haskell.vim	/^let s:temp_regex_prefix =$/;"	v
s:tempname	pack/vendor/start/completor.vim-master/autoload/completor/utils.vim	/^let s:tempname = ''$/;"	v
s:terminal_exit	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:terminal_exit(...)$/;"	f
s:terminal_init	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:terminal_init(opts)$/;"	f
s:terminal_italic	colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terminal_open	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^function! s:terminal_open(opts)$/;"	f
s:termname	pack/vendor/start/vim-airline-master/autoload/airline/extensions/term.vim	/^function! s:termname(bufnr) abort$/;"	f
s:terms_italic	colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:throw	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:throw(message) abort$/;"	f
s:throw	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw(exp, where)$/;"	f
s:throw_cmd	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw_cmd(exp, where)$/;"	f
s:timer	pack/vendor/start/vim-airline-master/autoload/airline/extensions/lsp.vim	/^let s:timer = 0$/;"	v
s:timer_args	pack/vendor/start/ale-master/autoload/ale/list.vim	/^    let s:timer_args = {}$/;"	v
s:timer_id	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let s:timer_id = -1$/;"	v
s:tmuxline_snapshot_file	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:to_cursor	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^let s:to_cursor = {}$/;"	v
s:to_cursor.failure_message_for_should	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^function! s:to_cursor.failure_message_for_should(actual, expected)$/;"	f
s:to_cursor.match	pack/vendor/start/vim-easymotion-master/t/compare_movements_spec.vim	/^function! s:to_cursor.match(actual, expected)$/;"	f
s:to_string	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:to_string(expr)$/;"	f
s:toggleFold	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:toggleFold(fileinfo) abort dict$/;"	f
s:toggleIgnoreFilter	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter() abort$/;"	f
s:toggleShowBookmarks	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks() abort$/;"	f
s:toggleShowFiles	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles() abort$/;"	f
s:toggleShowHidden	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden() abort$/;"	f
s:toggleZoom	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom() abort$/;"	f
s:toggle_off	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! s:toggle_off()$/;"	f
s:toggle_on	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! s:toggle_on()$/;"	f
s:transform	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function s:transform(absolute_path)$/;"	f
s:tree_up_dir_line	pack/vendor/start/nerdtree-master/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trigger_character_map	pack/vendor/start/ale-master/autoload/ale/completion.vim	/^let s:trigger_character_map = {$/;"	v
s:trigger_complete	pack/vendor/start/completor.vim-master/autoload/completor/action.vim	/^function! s:trigger_complete(completions)$/;"	f
s:truncate	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate_skipping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:turn_off_hl_error	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:turn_off_hl_error() "{{{$/;"	f
s:turn_on_hl_error	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion.vim	/^function! s:turn_on_hl_error() "{{{$/;"	f
s:type_init_done	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:u	colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:ulen	pack/vendor/start/auto-pairs-master/plugin/auto-pairs.vim	/^func! s:ulen(s)$/;"	f
s:undo_lock	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/undo.vim	/^let s:undo_lock = {}$/;"	v
s:undo_lock	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:undo_lock = {}$/;"	v
s:undo_lock._save	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/undo.vim	/^function! s:undo_lock._save() abort$/;"	f
s:undo_lock._save	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock._save() abort$/;"	f
s:undo_lock.restore	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.restore() abort$/;"	f
s:undo_lock.restore	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.restore() abort$/;"	f
s:undo_lock.save	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.save() abort$/;"	f
s:undo_lock.save	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.save() abort$/;"	f
s:undo_lock.undobreak	pack/vendor/start/vim-easymotion-master/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
s:undo_lock.undobreak	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
s:uniq	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq_by	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:unix_redir	pack/vendor/start/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	pack/vendor/start/vim-gutentags/autoload/gutentags/pycscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unload	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:unload() abort dict$/;"	f
s:unmapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:unmapping(keymapping, key, ...)$/;"	f
s:unshift	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:untracked_jobs	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^let s:untracked_jobs = {}$/;"	v
s:untracked_output	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! s:untracked_output(dict, buf)$/;"	f
s:upDirCurrentRootClosed	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed() abort$/;"	f
s:upDirCurrentRootOpen	pack/vendor/start/nerdtree-master/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen() abort$/;"	f
s:update_branch	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
s:update_git_branch	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch()$/;"	f
s:update_hg_branch	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch()$/;"	f
s:update_in_progress	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_oldfiles	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^function! s:update_oldfiles(file)$/;"	f
s:update_queue	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_tabline	pack/vendor/start/vim-airline-master/autoload/airline/extensions/tabline.vim	/^  function! s:update_tabline(forceit)$/;"	f
s:update_tags	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:update_untracked	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
s:update_wordcount	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^function! s:update_wordcount(force_update)$/;"	f
s:uri_handlers	pack/vendor/start/ale-master/autoload/ale/uri.vim	/^let s:uri_handlers = {$/;"	v
s:valid_dir	pack/vendor/start/vim-airline-master/autoload/airline/async.vim	/^function! s:valid_dir(dir)$/;"	f
s:variable	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:variable.restore	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f
s:vcs_config	pack/vendor/start/vim-airline-master/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
s:verbosefiles	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:verbosefiles = []$/;"	v
s:version_cache	pack/vendor/start/ale-master/ale_linters/java/eclipselsp.vim	/^let s:version_cache = {}$/;"	v
s:version_cache	pack/vendor/start/ale-master/autoload/ale/semver.vim	/^let s:version_cache = {}$/;"	v
s:vim_cmdline_mapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:vim_cmdline_mapping = {$/;"	v
s:vim_cmdline_mapping.keymapping	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.keymapping(cmdline)$/;"	f
s:vim_cmdline_mapping.on_enter	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_enter(cmdline)$/;"	f
s:vim_daemon_handler	pack/vendor/start/completor.vim-master/autoload/completor/daemon.vim	/^function! s:vim_daemon_handler(name, msg)$/;"	f
s:vim_oneshot_handler	pack/vendor/start/completor.vim-master/autoload/completor/compat.vim	/^function! s:vim_oneshot_handler(ch)$/;"	f
s:vim_quitting	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:vim_quitting = 0$/;"	v
s:vim_tags	vimrc	/^let s:vim_tags = expand('~\/.cache\/tags')$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:visibility_symbols	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^    let s:visibility_symbols = g:tagbar_visibility_symbols$/;"	v
s:visibility_symbols	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^let s:visibility_symbols = {$/;"	v
s:visible	pack/vendor/start/completor.vim-master/autoload/completor/popup.vim	/^let s:visible = v:false$/;"	v
s:vital_base_dir	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_files	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! s:vital_files() abort$/;"	f
s:vmode	colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:vname	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:vname = expand("<sfile>:h:h:h:h:t")$/;"	v
s:vname	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Exception.vim	/^let s:vname = expand("<sfile>:h:h:t")$/;"	v
s:warn	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
s:warn	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! s:warn(msg) abort$/;"	f
s:warning	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
s:warning_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/coc.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#coc#warning_symbol', 'W:')$/;"	v
s:warning_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/languageclient.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#languageclient#warning_symbol', 'W:')$/;"	v
s:warning_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
s:warning_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/syntastic.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#syntastic#warning_symbol', 'W:')$/;"	v
s:warning_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/vim9lsp.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#vim9lsp#warning_symbol', 'W:')$/;"	v
s:warning_symbol	pack/vendor/start/vim-airline-master/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
s:warnings	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:wcswidth	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:wildignores_options_path	pack/vendor/start/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:win2pos2hint_to_w2l2c2h	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:win2pos2hint_to_w2l2c2h(win2pos2hint) abort$/;"	f
s:wincall	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:wincall(func, arglist, ...) abort$/;"	f
s:window_expanded	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winnr2poses_to_list	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:winnr2poses_to_list(winnr2poses, ...) abort$/;"	f
s:winrestcmd	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:with_index	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:word_regex_list	pack/vendor/start/ale-master/ale_linters/vim/vint.vim	/^let s:word_regex_list = [$/;"	v
s:wordcount_cache	pack/vendor/start/vim-airline-master/autoload/airline/extensions/wordcount.vim	/^let s:wordcount_cache = 0  " cache wordcount for performance when force_update=0$/;"	v
s:wrap_accent	pack/vendor/start/vim-airline-master/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
s:write_triggered_update_tags	pack/vendor/start/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:ws_refresh	pack/vendor/start/vim-airline-master/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
s:xterm_escape_template	pack/vendor/start/vim-airline-master/autoload/airline/extensions/cursormode.vim	/^let s:xterm_escape_template = '\\033]12;%s\\007'$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:zip	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip_fill	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
s:zoomwintab_status_zoomed_in	pack/vendor/start/vim-airline-master/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_in =$/;"	v
s:zoomwintab_status_zoomed_out	pack/vendor/start/vim-airline-master/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_out =$/;"	v
sanitize	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def sanitize(menu):$/;"	f
save_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def save_request(self):$/;"	m	class:Lsp
screen shot (if possible)	pack/vendor/start/vim-airline-master/.github/ISSUE_TEMPLATE.md	/^#### screen shot (if possible)$/;"	t
search	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^    def search(self, base):$/;"	m	class:TokenStore
send_config	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def send_config(self):$/;"	m	class:Lsp
set_current_completer	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^def set_current_completer(comp):$/;"	f
set_name	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def set_name(self, name):$/;"	m	class:Rename
set_server_cmd	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    def set_server_cmd(self, cmd):$/;"	m	class:Lsp
shell	pack/vendor/start/completor.vim-master/README.md	/^#### shell$/;"	t
smartdict_jp	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^        let smartdict_jp = g:EasyMotion#sticky_table#jp$/;"	v
smartdict_us	pack/vendor/start/vim-easymotion-master/t/smartsign_spec.vim	/^        let smartdict_us = g:EasyMotion#sticky_table#us$/;"	v
startServer	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^function startServer(dir, config) {$/;"	f
start_column	pack/vendor/start/completor.vim-master/pythonx/completers/common/omni.py	/^    def start_column(self):$/;"	m	class:Omni
start_column	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def start_column(self):$/;"	m	class:Completor
startify	pack/vendor/start/vim-startify-master/plugin/startify.vim	/^augroup startify$/;"	a
startify#center	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#center(lines) abort$/;"	f
startify#debug	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#debug()$/;"	f
startify#fortune#boxed	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^function! startify#fortune#boxed(...) abort$/;"	f
startify#fortune#cowsay	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^function! startify#fortune#cowsay(...) abort$/;"	f
startify#fortune#predefined_quotes	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^function! startify#fortune#predefined_quotes() abort$/;"	f
startify#fortune#quote	pack/vendor/start/vim-startify-master/autoload/startify/fortune.vim	/^function! startify#fortune#quote() abort$/;"	f
startify#get_lastline	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#get_lastline() abort$/;"	f
startify#get_separator	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#get_separator() abort$/;"	f
startify#get_session_path	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#get_session_path() abort$/;"	f
startify#insane_in_the_membrane	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#insane_in_the_membrane(on_vimenter) abort$/;"	f
startify#open_buffers	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#open_buffers(...) abort$/;"	f
startify#pad	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#pad(lines) abort$/;"	f
startify#session_close	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#session_close() abort$/;"	f
startify#session_delete	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#session_delete(bang, ...) abort$/;"	f
startify#session_delete_buffers	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#session_delete_buffers()$/;"	f
startify#session_list	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#session_list(lead, ...) abort$/;"	f
startify#session_list_as_string	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#session_list_as_string(lead, ...) abort$/;"	f
startify#session_load	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#session_load(source_last_session, ...) abort$/;"	f
startify#session_save	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#session_save(bang, ...) abort$/;"	f
startify#session_write	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#session_write(session_path)$/;"	f
startify#set_batchmode	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#set_batchmode(batchmode) abort$/;"	f
startify#set_mark	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^function! startify#set_mark(type, ...) abort$/;"	f
statusline on top	pack/vendor/start/vim-airline-master/README.md	/^### statusline on top$/;"	S
store_buffer	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^    def store_buffer(self, buffer, base, cur_nr, cur_line):$/;"	m	class:TokenStore
strip_optional	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def strip_optional(menu):$/;"	f
strip_tag	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^def strip_tag(word):$/;"	f
support_popup	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def support_popup(self):$/;"	m	class:Completor
swift	pack/vendor/start/completor.vim-master/README.md	/^#### swift$/;"	t
sync	pack/vendor/start/completor.vim-master/pythonx/completers/ale.py	/^    sync = True$/;"	v	class:ALE
sync	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^    sync = True$/;"	v	class:Common
sync	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^    sync = True$/;"	v	class:Buffer
sync	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^    sync = True$/;"	v	class:Filename
sync	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^    sync = True$/;"	v	class:Neoinclude
sync	pack/vendor/start/completor.vim-master/pythonx/completers/common/omni.py	/^    sync = True$/;"	v	class:Omni
sync	pack/vendor/start/completor.vim-master/pythonx/completers/common/ultisnips.py	/^    sync = True$/;"	v	class:Ultisnips
sync	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    sync = False$/;"	v	class:Completor
syntax	pack/vendor/start/completor.vim-master/README.md	/^#### syntax$/;"	t
t	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> t :call ale#preview#OpenSelectionInTab()<CR>$/;"	m
t	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-bd-t)$/;"	m
t	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-t)$/;"	m
t	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> t             :call startify#set_mark('T')<cr>$/;"	m
t/	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map t\/ <Plug>(easymotion-tn)$/;"	m
tag_pattern	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^tag_pattern = re.compile(br'\\s\\((InBase|Hidden|Inaccessible|,)+\\)')$/;"	v
tagbar#CloseWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#ForceUpdate	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#ForceUpdate() abort$/;"	f
tagbar#GetTagNearLine	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#GetTagNearLine(lnum, ...) abort$/;"	f
tagbar#IsOpen	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#IsOpen() abort$/;"	f
tagbar#OpenWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StopAutoUpdate	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#StopAutoUpdate() abort$/;"	f
tagbar#ToggleWindow	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#ToggleWindow(...) abort$/;"	f
tagbar#Update	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#Update() abort$/;"	f
tagbar#autoopen	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#currenttagtype	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#currenttagtype(fmt, default) abort$/;"	f
tagbar#debug#enabled	pack/vendor/start/tagbar-master/autoload/tagbar/debug.vim	/^function! tagbar#debug#enabled() abort$/;"	f
tagbar#debug#log	pack/vendor/start/tagbar-master/autoload/tagbar/debug.vim	/^function! tagbar#debug#log(msg) abort$/;"	f
tagbar#debug#log_ctags_output	pack/vendor/start/tagbar-master/autoload/tagbar/debug.vim	/^function! tagbar#debug#log_ctags_output(output) abort$/;"	f
tagbar#debug#start_debug	pack/vendor/start/tagbar-master/autoload/tagbar/debug.vim	/^function! tagbar#debug#start_debug(...) abort$/;"	f
tagbar#debug#stop_debug	pack/vendor/start/tagbar-master/autoload/tagbar/debug.vim	/^function! tagbar#debug#stop_debug() abort$/;"	f
tagbar#gettypeconfig	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#is_paused	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#is_paused() abort$/;"	f
tagbar#jump	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#jump() abort$/;"	f
tagbar#jumpToNearbyTag	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#jumpToNearbyTag(direction, ...) abort$/;"	f
tagbar#printfileinfo	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#printfileinfo() abort$/;"	f
tagbar#prototypes#basetag#new	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/basetag.vim	/^function! tagbar#prototypes#basetag#new(name) abort$/;"	f
tagbar#prototypes#fileinfo#new	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/fileinfo.vim	/^function! tagbar#prototypes#fileinfo#new(fname, ftype, typeinfo) abort$/;"	f
tagbar#prototypes#kindheadertag#new	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/kindheadertag.vim	/^function! tagbar#prototypes#kindheadertag#new(name) abort$/;"	f
tagbar#prototypes#normaltag#new	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/normaltag.vim	/^function! tagbar#prototypes#normaltag#new(name) abort$/;"	f
tagbar#prototypes#pseudotag#new	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/pseudotag.vim	/^function! tagbar#prototypes#pseudotag#new(name) abort$/;"	f
tagbar#prototypes#splittag#new	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/splittag.vim	/^function! tagbar#prototypes#splittag#new(name) abort$/;"	f
tagbar#prototypes#typeinfo#new	pack/vendor/start/tagbar-master/autoload/tagbar/prototypes/typeinfo.vim	/^function! tagbar#prototypes#typeinfo#new(...) abort$/;"	f
tagbar#sorting#sort	pack/vendor/start/tagbar-master/autoload/tagbar/sorting.vim	/^function! tagbar#sorting#sort(tags, compareby, compare_typeinfo) abort$/;"	f
tagbar#state#get_current_file	pack/vendor/start/tagbar-master/autoload/tagbar/state.vim	/^function! tagbar#state#get_current_file(force_current) abort$/;"	f
tagbar#state#set_current_file	pack/vendor/start/tagbar-master/autoload/tagbar/state.vim	/^function! tagbar#state#set_current_file(fileinfo) abort$/;"	f
tagbar#state#set_paused	pack/vendor/start/tagbar-master/autoload/tagbar/state.vim	/^function! tagbar#state#set_paused() abort$/;"	f
tagbar#toggle_pause	pack/vendor/start/tagbar-master/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
tagbar#types#ctags#init	pack/vendor/start/tagbar-master/autoload/tagbar/types/ctags.vim	/^function! tagbar#types#ctags#init(supported_types) abort$/;"	f
tagbar#types#uctags#init	pack/vendor/start/tagbar-master/autoload/tagbar/types/uctags.vim	/^function! tagbar#types#uctags#init(supported_types) abort$/;"	f
tempname	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    def tempname(self):$/;"	m	class:Completor
tern	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/package.json	/^    "tern": "^0.24.3",$/;"	s	object:dependencies
tern	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^var tern = require('tern');$/;"	v
test_disabled	pack/vendor/start/completor.vim-master/tests/test_completor.py	/^def test_disabled(vim_mod):$/;"	f
test_doc	pack/vendor/start/completor.vim-master/tests/test_go.py	/^    def test_doc(self, action):$/;"	m	class:TestDoc
test_get_cmd_info	pack/vendor/start/completor.vim-master/tests/test_cpp.py	/^def test_get_cmd_info(vim_mod):$/;"	f
test_get_cmd_info	pack/vendor/start/completor.vim-master/tests/test_go.py	/^    def test_get_cmd_info(self, vim_mod, create_buffer, action, monkeypatch):$/;"	m	class:TestGetCmdInfo
test_get_completer	pack/vendor/start/completor.vim-master/tests/test_api.py	/^def test_get_completer(vim_mod):$/;"	f
test_get_start_column	pack/vendor/start/completor.vim-master/tests/test_api.py	/^def test_get_start_column(vim_mod):$/;"	f
test_get_token_path	pack/vendor/start/completor.vim-master/tests/test_cpp.py	/^def test_get_token_path():$/;"	f
test_has_omnifunc	pack/vendor/start/completor.vim-master/tests/test_omni.py	/^def test_has_omnifunc(vim_mod):$/;"	f
test_is_message_end	pack/vendor/start/completor.vim-master/tests/test_api.py	/^def test_is_message_end(vim_mod):$/;"	f
test_load	pack/vendor/start/completor.vim-master/tests/test_completor.py	/^def test_load(vim_mod, monkeypatch):$/;"	f
test_message_end	pack/vendor/start/completor.vim-master/tests/test_rust.py	/^def test_message_end(vim_mod):$/;"	f
test_on_data	pack/vendor/start/completor.vim-master/tests/test_api.py	/^def test_on_data(vim_mod):$/;"	f
test_on_data	pack/vendor/start/completor.vim-master/tests/test_common.py	/^def test_on_data(vim_mod, create_buffer):$/;"	f
test_on_data	pack/vendor/start/completor.vim-master/tests/test_filename.py	/^def test_on_data(vim_mod):$/;"	f
test_on_data	pack/vendor/start/completor.vim-master/tests/test_omni.py	/^def test_on_data(vim_mod):$/;"	f
test_on_doc	pack/vendor/start/completor.vim-master/tests/test_rust.py	/^def test_on_doc(vim_mod):$/;"	f
test_parse	pack/vendor/start/completor.vim-master/tests/test_cpp.py	/^def test_parse(vim_mod):$/;"	f
test_parse	pack/vendor/start/completor.vim-master/tests/test_go.py	/^def test_parse():$/;"	f
test_parse	pack/vendor/start/completor.vim-master/tests/test_rust.py	/^def test_parse():$/;"	f
test_parse_ast_dump	pack/vendor/start/completor.vim-master/tests/test_cpp.py	/^def test_parse_ast_dump():$/;"	f
test_parse_config	pack/vendor/start/completor.vim-master/tests/test_completor.py	/^def test_parse_config():$/;"	f
test_prepare_request	pack/vendor/start/completor.vim-master/tests/test_api.py	/^def test_prepare_request(vim_mod, create_buffer):$/;"	f
test_python_jedi_requests	pack/vendor/start/completor.vim-master/tests/test_python.py	/^def test_python_jedi_requests(vim_mod):$/;"	f
test_request	pack/vendor/start/completor.vim-master/tests/test_rust.py	/^def test_request(vim_mod):$/;"	f
test_subseq	pack/vendor/start/completor.vim-master/pythonx/completers/common/utils.py	/^def test_subseq(src, target):$/;"	f
test_unicode	pack/vendor/start/completor.vim-master/tests/test_common.py	/^def test_unicode(vim_mod, create_buffer):$/;"	f
text	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      text: data,$/;"	p	class:complete.file
text_type	pack/vendor/start/completor.vim-master/pythonx/completor/compat.py	/^    text_type = str$/;"	v
text_type	pack/vendor/start/completor.vim-master/pythonx/completor/compat.py	/^    text_type = unicode$/;"	v
tmux	pack/vendor/start/completor.vim-master/README.md	/^#### tmux$/;"	t
to_bytes	pack/vendor/start/completor.vim-master/pythonx/completor/compat.py	/^def to_bytes(s, charset='utf-8'):$/;"	f
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:Base
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:Completion
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:DidChange
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:DidChangeConfiguration
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:DidOpen
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:DidSave
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:Format
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:Initialize
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:Initialized
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:References
to_dict	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_dict(self):$/;"	m	class:Rename
to_request	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/models.py	/^    def to_request(self):$/;"	m	class:Base
to_unicode	pack/vendor/start/completor.vim-master/pythonx/completor/compat.py	/^def to_unicode(x, charset):$/;"	f
token_store	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^token_store = TokenStore()$/;"	v
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/ale.py	/^    trigger = r'(?:\\w{2,}\\w*|\\.\\w*|::\\w*|->\\w*)$'$/;"	v	class:ALE
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/common/filename.py	/^    trigger = re.compile(r"""$/;"	v	class:Filename
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^    def trigger(self):$/;"	m	class:Neoinclude
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^    def trigger(self, value):$/;"	m	class:Neoinclude
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^trigger = re.compile(r'(\\.|->|#|::)\\s*(\\w*)$')$/;"	v
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    trigger = r'(?:\\w{2,}\\w*|\\.\\w*)$'$/;"	v	class:Go
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/__init__.py	/^    trigger = r"""\\w+$|[\\w\\)\\]\\}\\'\\"]+\\.\\w*$|["']\\w*$"""$/;"	v	class:Tern
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/__init__.py	/^    trigger = r'(?:\\w{2,}\\w*|\\.\\w*|::\\w*|->\\w*)$'$/;"	v	class:Lsp
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/python/__init__.py	/^    trigger = (r'\\w{3,}$|'$/;"	v	class:Jedi
trigger	pack/vendor/start/completor.vim-master/pythonx/completers/rust.py	/^    trigger = r'(?:\\w{2,}\\w*|\\.\\w*|::\\w*)$'$/;"	v	class:Racer
trigger	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^    trigger = None$/;"	v	class:Completor
trigger_cache	pack/vendor/start/completor.vim-master/pythonx/completers/common/neoinclude.py	/^    trigger_cache = {$/;"	v	class:Neoinclude
trigger_cache	pack/vendor/start/completor.vim-master/pythonx/completers/common/omni.py	/^    trigger_cache = {}$/;"	v	class:Omni
type	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      type: 'completions',$/;"	p	class:complete.query
type	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      type: 'full',$/;"	p	class:complete.file
type script	pack/vendor/start/completor.vim-master/README.md	/^#### type script$/;"	t
types	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^      types: true,$/;"	p	class:complete.query
uis	pack/vendor/start/asyncrun.vim/plugin/asyncrun.vim	/^		let uis = nvim_list_uis()[0]$/;"	v
use_guru_for_def	pack/vendor/start/completor.vim-master/pythonx/completers/go.py	/^    use_guru_for_def = False$/;"	v	class:Go
use_raw_list	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	pack/vendor/start/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
v	pack/vendor/start/ale-master/ftplugin/ale-preview-selection.vim	/^noremap <buffer> v <NOP>$/;"	m
v	pack/vendor/start/vim-startify-master/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> v             :call startify#set_mark('V')<cr>$/;"	m
vars	pack/vendor/start/completor.vim-master/tests/conftest.py	/^    vars = Vars(completor_min_chars=2)$/;"	v	class:Vim
vars_wrapper	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^    class vars_wrapper(object):$/;"	c	function:_patch_nvim	file:
version	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/package.json	/^  "version": "1.0.0",$/;"	s
vim	pack/vendor/start/completor.vim-master/pythonx/completor/__init__.py	/^from ._vim import vim_obj as vim$/;"	x
vim script	pack/vendor/start/completor.vim-master/README.md	/^#### vim script$/;"	t
vim-airline	pack/vendor/start/vim-airline-master/README.md	/^# vim-airline $/;"	c
vim_action_trigger	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def vim_action_trigger():$/;"	f
vim_daemon_send	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def vim_daemon_send():$/;"	f
vim_exists	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def vim_exists():$/;"	f
vim_expand	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def vim_expand():$/;"	f
vim_in_comment_or_string	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def vim_in_comment_or_string():$/;"	f
vim_mod	pack/vendor/start/completor.vim-master/tests/conftest.py	/^def vim_mod():$/;"	f
vim_obj	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^vim_obj = _Vim()$/;"	v
vim_support_popup	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def vim_support_popup():$/;"	f
vim_tempname	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^def vim_tempname():$/;"	f
vital	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^augroup vital-hit-a-hint-motion-default-highlight$/;"	a
vital#	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	pack/vendor/start/vim-easymotion-master/autoload/vital/easymotion.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#_easymotion#Data#Dict#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Dict.vim	/^  function! vital#_easymotion#Data#Dict#import() abort$/;"	f
vital#_easymotion#Data#List#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/List.vim	/^  function! vital#_easymotion#Data#List#import() abort$/;"	f
vital#_easymotion#Data#Set#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Data/Set.vim	/^  function! vital#_easymotion#Data#Set#import() abort$/;"	f
vital#_easymotion#HitAHint#Hint#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! vital#_easymotion#HitAHint#Hint#import() abort$/;"	f
vital#_easymotion#HitAHint#Motion#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/HitAHint/Motion.vim	/^  function! vital#_easymotion#HitAHint#Motion#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Base#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^  function! vital#_easymotion#Over#Commandline#Base#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#BufferComplete#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#BufferComplete#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Cancel#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Cancel#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#CursorMove#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#CursorMove#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Delete#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Delete#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Doautocmd#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Doautocmd#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#DrawCommandline#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#DrawCommandline#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#ExceptionExit#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#ExceptionExit#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#ExceptionMessage#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#ExceptionMessage#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Exit#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Exit#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#History#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#History#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#InsertRegister#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#InsertRegister#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#KeyMapping#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#KeyMapping#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#NoInsert#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#NoInsert#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Paste#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Paste#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Redraw#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Redraw#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#import() abort$/;"	f
vital#_easymotion#Over#Exception#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Exception.vim	/^  function! vital#_easymotion#Over#Exception#import() abort$/;"	f
vital#_easymotion#Over#Input#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Input.vim	/^  function! vital#_easymotion#Over#Input#import() abort$/;"	f
vital#_easymotion#Over#Keymapping#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Keymapping.vim	/^  function! vital#_easymotion#Over#Keymapping#import() abort$/;"	f
vital#_easymotion#Over#Signals#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/Signals.vim	/^  function! vital#_easymotion#Over#Signals#import() abort$/;"	f
vital#_easymotion#Over#String#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Over/String.vim	/^  function! vital#_easymotion#Over#String#import() abort$/;"	f
vital#_easymotion#Palette#Capture#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Capture.vim	/^  function! vital#_easymotion#Palette#Capture#import() abort$/;"	f
vital#_easymotion#Palette#Highlight#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Highlight.vim	/^  function! vital#_easymotion#Palette#Highlight#import() abort$/;"	f
vital#_easymotion#Palette#Keymapping#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Palette/Keymapping.vim	/^  function! vital#_easymotion#Palette#Keymapping#import() abort$/;"	f
vital#_easymotion#Prelude#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Prelude.vim	/^  function! vital#_easymotion#Prelude#import() abort$/;"	f
vital#_easymotion#Vim#Buffer#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! vital#_easymotion#Vim#Buffer#import() abort$/;"	f
vital#_easymotion#Vim#Guard#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Guard.vim	/^  function! vital#_easymotion#Vim#Guard#import() abort$/;"	f
vital#_easymotion#Vim#Message#import	pack/vendor/start/vim-easymotion-master/autoload/vital/_easymotion/Vim/Message.vim	/^  function! vital#_easymotion#Vim#Message#import() abort$/;"	f
vital#of	pack/vendor/start/vim-easymotion-master/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
w	pack/vendor/start/vim-easymotion-master/t/easymotion_spec.vim	/^        map w <Plug>(easymotion-w)$/;"	m
w	pack/vendor/start/vim-easymotion-master/t/operator_pending_spec.vim	/^        omap w <Plug>(easymotion-w)$/;"	m
whitespace	pack/vendor/start/vim-airline-master/README.md	/^#### whitespace$/;"	t
word	pack/vendor/start/completor.vim-master/pythonx/completers/common/__init__.py	/^word = re.compile(r'[^\\W\\d]\\w*$', re.U)$/;"	v
word	pack/vendor/start/completor.vim-master/pythonx/completers/common/buffer.py	/^word = re.compile(r'[^\\W\\d]\\w*$', re.U)$/;"	v
word	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/tern_wrapper.js	/^        var comp = {word: completion.name, menu: completion.type};$/;"	p	class:AnonymousFunctionb79ae6440600.comp
word_ends	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^word_ends = re.compile(r'[\\d\\w]+$', re.U)$/;"	v
word_pat	pack/vendor/start/completor.vim-master/pythonx/completers/lsp/action.py	/^word_pat = re.compile(r'([\\d\\w]+)', re.U)$/;"	v
word_patten	pack/vendor/start/completor.vim-master/pythonx/completers/cpp/__init__.py	/^word_patten = re.compile(r'\\w+$')$/;"	v
wrap	pack/vendor/start/completor.vim-master/pythonx/completor/_vim.py	/^        def wrap(*args, **kwargs):$/;"	f	function:_cached	file:
wrapper	pack/vendor/start/completor.vim-master/pythonx/completor/api.py	/^    def wrapper():$/;"	f	function:_api	file:
wrapper	pack/vendor/start/completor.vim-master/pythonx/completor/utils.py	/^        def wrapper(*args, **kwargs):$/;"	f	function:ignore_exception.deco	file:
write	pack/vendor/start/completor.vim-master/pythonx/completers/python/python_jedi.py	/^def write(msg):$/;"	f
yarn	pack/vendor/start/completor.vim-master/pythonx/completers/javascript/package.json	/^    "yarn": "^1.22.0"$/;"	s	object:dependencies
使用手册	pack/vendor/start/asyncrun.vim/README-cn.md	/^## 使用手册$/;"	s
例子	pack/vendor/start/asyncrun.vim/README-cn.md	/^# 例子$/;"	c
全局变量	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 全局变量$/;"	S
全局设置	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 全局设置$/;"	S
内容目录	pack/vendor/start/asyncrun.vim/README-cn.md	/^# 内容目录$/;"	c
内置终端	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 内置终端$/;"	S
函数接口	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 函数接口$/;"	S
同 fugitive 协作	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 同 fugitive 协作$/;"	S
命令修改器	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 命令修改器$/;"	S
安装	pack/vendor/start/asyncrun.vim/README-cn.md	/^# 安装$/;"	c
快速入门	pack/vendor/start/asyncrun.vim/README-cn.md	/^## 快速入门$/;"	s
插件协作	pack/vendor/start/asyncrun.vim/README-cn.md	/^# 插件协作$/;"	c
新闻	pack/vendor/start/asyncrun.vim/README-cn.md	/^# 新闻$/;"	c
更多话题	pack/vendor/start/asyncrun.vim/README-cn.md	/^## 更多话题$/;"	s
特性说明	pack/vendor/start/asyncrun.vim/README-cn.md	/^# 特性说明$/;"	c
自定义 Runner	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 自定义 Runner$/;"	S
语言参考	pack/vendor/start/asyncrun.vim/README-cn.md	/^## 语言参考$/;"	s
运行模式	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 运行模式$/;"	S
运行需求	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 运行需求$/;"	S
项目根目录	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 项目根目录$/;"	S
额外的 Runner	pack/vendor/start/asyncrun.vim/README-cn.md	/^### 额外的 Runner$/;"	S
高级话题	pack/vendor/start/asyncrun.vim/README-cn.md	/^## 高级话题$/;"	s
